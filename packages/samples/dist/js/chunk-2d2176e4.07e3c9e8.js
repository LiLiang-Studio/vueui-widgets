(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d2176e4"],{c760:function(o,t,n){"use strict";n.r(t);var e=function(){var o=this,t=o.$createElement,n=o._self._c||t;return n("div",[n("div",{staticClass:"page-title"},[o._v("Modal 对话框")]),n("div",{staticClass:"page-sub-title"},[o._v("最简单的使用方法，通过控制属性visible来显示 / 隐藏对话框。可以使用 v-model 实现双向绑定。")]),n("Button",{attrs:{type:"primary"},on:{click:function(t){o.modal1=!0}}},[o._v("显示对话框")]),n("Modal",{attrs:{middle:"",title:"普通的Modal对话框标题"},on:{"on-ok":o.ok,"on-cancel":o.cancel},model:{value:o.modal1,callback:function(t){o.modal1=t},expression:"modal1"}},[n("p",[o._v("对话框内容")]),n("p",[o._v("对话框内容")]),n("p",[o._v("对话框内容")])]),n("div",{staticClass:"page-sub-title"},[o._v(" Modal 组件提供了灵活的自定义样式 API 和 Slot，可以自由控制整个 Modal 的各个组成部分， 比如页头、页脚、关闭按钮。通过和其它组件的交互，能实现更复杂的功能，满足了大多业务场景。。 ")]),n("Button",{on:{click:function(t){o.modal2=!0}}},[o._v("Custom header and footer")]),n("Modal",{attrs:{width:"360"},model:{value:o.modal2,callback:function(t){o.modal2=t},expression:"modal2"}},[n("p",{staticStyle:{color:"#f60","text-align":"center"},attrs:{slot:"header"},slot:"header"},[n("Icon",{attrs:{type:"information-circled"}}),n("span",[o._v("删除确认")])],1),n("div",{staticStyle:{"text-align":"center"}},[n("p",[o._v("此任务删除后，下游 10 个任务将无法执行。")]),n("p",[o._v("是否继续删除？")])]),n("div",{attrs:{slot:"footer"},slot:"footer"},[n("Button",{attrs:{type:"error",size:"large",long:"",loading:o.modal_loading},on:{click:o.del}},[o._v("Delete")])],1)]),n("Button",{on:{click:function(t){o.modal3=!0}}},[o._v("No title bar")]),n("Modal",{model:{value:o.modal3,callback:function(t){o.modal3=t},expression:"modal3"}},[n("p",[o._v("Content of dialog")]),n("p",[o._v("Content of dialog")]),n("p",[o._v("Content of dialog")])]),n("Button",{on:{click:function(t){o.modal4=!0}}},[o._v("Internationalization")]),n("Modal",{attrs:{title:"Modal Title","ok-text":"OK","cancel-text":"Cancel"},model:{value:o.modal4,callback:function(t){o.modal4=t},expression:"modal4"}},[n("p",[o._v("Something...")]),n("p",[o._v("Something...")]),n("p",[o._v("Something...")])]),n("Button",{on:{click:function(t){o.modal5=!0}}},[o._v("Set the width")]),n("Modal",{attrs:{title:"Custom width",width:"300"},model:{value:o.modal5,callback:function(t){o.modal5=t},expression:"modal5"}},[n("p",[o._v("Customize width, unit px, default 520px.")]),n("p",[o._v(" The width of the dialog box is responsive, and the width becomes "),n("code",[o._v("auto")]),o._v(" when the screen size is less than 768px. ")])]),n("div",{staticClass:"page-sub-title"},[o._v(" 给Modal添加属性loading后，点击确定按钮对话框不会自动消失， 并显示 loading 状态，需要手动关闭对话框，常用于表单提交。 ")]),n("Button",{attrs:{type:"primary"},on:{click:function(t){o.modal6=!0}}},[o._v("Display dialog box")]),n("Modal",{attrs:{title:"Title",loading:o.loading},on:{"on-ok":o.asyncOK},model:{value:o.modal6,callback:function(t){o.modal6=t},expression:"modal6"}},[n("p",[o._v("After you click ok, the dialog box will close in 2 seconds.")])]),n("div",{staticClass:"page-sub-title"},[o._v("可以禁用关闭和遮罩层关闭")]),n("Button",{on:{click:function(t){o.modal7=!0}}},[o._v("Disable upper right corner (including Esc key)")]),n("Modal",{attrs:{title:"Title",closable:!1},model:{value:o.modal7,callback:function(t){o.modal7=t},expression:"modal7"}},[n("p",[o._v("Content of dialog")]),n("p",[o._v("Content of dialog")]),n("p",[o._v("Content of dialog")])]),n("Button",{on:{click:function(t){o.modal8=!0}}},[o._v("Disable mask layer closure")]),n("Modal",{attrs:{title:"Title","mask-closable":!1},model:{value:o.modal8,callback:function(t){o.modal8=t},expression:"modal8"}},[n("p",[o._v("Content of dialog")]),n("p",[o._v("Content of dialog")]),n("p",[o._v("Content of dialog")])]),n("div",{staticClass:"page-sub-title"},[o._v(" 除了上述通过标准组件的使用方法，我还精心封装了一些实例方法，用来创建一次性的轻量级对话框。 实例以隐式创建 Vue 组件的方式在全局创建一个对话框，并在消失时移除，所以同时只能操作一个对话框。 ")]),n("Button",{on:{click:function(t){return o.instance("info")}}},[o._v("Info")]),n("Button",{on:{click:function(t){return o.instance("success")}}},[o._v("Success")]),n("Button",{on:{click:function(t){return o.instance("warning")}}},[o._v("Warning")]),n("Button",{on:{click:function(t){return o.instance("error")}}},[o._v("Error")]),n("div",{staticClass:"page-sub-title"},[o._v("快速弹出确认对话框，并且可以自定义按钮文字及异步关闭。")]),n("Button",{on:{click:function(t){return o.instance("confirm")}}},[o._v("Confirm")]),n("Button",{on:{click:o.custom}},[o._v("Custom button text")]),n("Button",{on:{click:o.async}},[o._v("Asynchronous closing")])],1)},l=[],a={data:function(){return{modal1:!1,modal2:!1,modal_loading:!1,modal3:!1,modal4:!1,modal5:!1,modal6:!1,loading:!0,modal7:!1,modal8:!1}},methods:{ok:function(){this.$Message.info("Clicked ok")},cancel:function(){this.$Message.info("Clicked cancel")},del:function(){var o=this;this.modal_loading=!0,setTimeout((function(){o.modal_loading=!1,o.modal2=!1,o.$Message.success("Successfully delete")}),2e3)},asyncOK:function(){var o=this;setTimeout((function(){o.modal6=!1}),2e3)},instance:function(o){var t=this,n="对话框的标题",e="<p>一些对话框内容</p><p>一些对话框内容</p><p>一些对话框内容</p>";switch(o){case"info":this.$Modal.info({title:n,content:e});break;case"success":this.$Modal.success({title:n,content:e});break;case"warning":this.$Modal.warning({title:n,content:e});break;case"error":this.$Modal.error({title:n,content:e});break;case"confirm":this.$Modal.confirm({title:n,content:e,onOk:function(){t.$Message.info("Clicked ok")},onCancel:function(){t.$Message.info("Clicked cancel")}});break}},custom:function(){this.$Modal.confirm({title:"Title",content:"<p>Content of dialog</p><p>Content of dialog</p>",okText:"OK",cancelText:"Cancel"})},async:function(){var o=this;this.$Modal.confirm({title:"Title",content:"<p>The dialog box will be closed after 2 seconds</p>",loading:!0,onOk:function(){setTimeout((function(){o.$Modal.remove(),o.$Message.info("Asynchronously close the dialog box")}),2e3)}})}}},i=a,c=n("2be6"),s=Object(c["a"])(i,e,l,!1,null,null,null);t["default"]=s.exports}}]);