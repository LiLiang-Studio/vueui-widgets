
(function(l, i, v, e) { v = l.createElement(i); v.async = 1; v.src = '//' + (location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; e = l.getElementsByTagName(i)[0]; e.parentNode.insertBefore(v, e)})(document, 'script');
(function (factory) {
            typeof define === 'function' && define.amd ? define(factory) :
            factory();
}(function () { 'use strict';

            var global$1 = (typeof global !== "undefined" ? global :
                        typeof self !== "undefined" ? self :
                        typeof window !== "undefined" ? window : {});

            // shim for using process in browser
            // based off https://github.com/defunctzombie/node-process/blob/master/browser.js

            function defaultSetTimout() {
                throw new Error('setTimeout has not been defined');
            }
            function defaultClearTimeout () {
                throw new Error('clearTimeout has not been defined');
            }
            var cachedSetTimeout = defaultSetTimout;
            var cachedClearTimeout = defaultClearTimeout;
            if (typeof global$1.setTimeout === 'function') {
                cachedSetTimeout = setTimeout;
            }
            if (typeof global$1.clearTimeout === 'function') {
                cachedClearTimeout = clearTimeout;
            }

            function runTimeout(fun) {
                if (cachedSetTimeout === setTimeout) {
                    //normal enviroments in sane situations
                    return setTimeout(fun, 0);
                }
                // if setTimeout wasn't available but was latter defined
                if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
                    cachedSetTimeout = setTimeout;
                    return setTimeout(fun, 0);
                }
                try {
                    // when when somebody has screwed with setTimeout but no I.E. maddness
                    return cachedSetTimeout(fun, 0);
                } catch(e){
                    try {
                        // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                        return cachedSetTimeout.call(null, fun, 0);
                    } catch(e){
                        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                        return cachedSetTimeout.call(this, fun, 0);
                    }
                }


            }
            function runClearTimeout(marker) {
                if (cachedClearTimeout === clearTimeout) {
                    //normal enviroments in sane situations
                    return clearTimeout(marker);
                }
                // if clearTimeout wasn't available but was latter defined
                if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
                    cachedClearTimeout = clearTimeout;
                    return clearTimeout(marker);
                }
                try {
                    // when when somebody has screwed with setTimeout but no I.E. maddness
                    return cachedClearTimeout(marker);
                } catch (e){
                    try {
                        // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                        return cachedClearTimeout.call(null, marker);
                    } catch (e){
                        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                        // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                        return cachedClearTimeout.call(this, marker);
                    }
                }



            }
            var queue = [];
            var draining = false;
            var currentQueue;
            var queueIndex = -1;

            function cleanUpNextTick() {
                if (!draining || !currentQueue) {
                    return;
                }
                draining = false;
                if (currentQueue.length) {
                    queue = currentQueue.concat(queue);
                } else {
                    queueIndex = -1;
                }
                if (queue.length) {
                    drainQueue();
                }
            }

            function drainQueue() {
                if (draining) {
                    return;
                }
                var timeout = runTimeout(cleanUpNextTick);
                draining = true;

                var len = queue.length;
                while(len) {
                    currentQueue = queue;
                    queue = [];
                    while (++queueIndex < len) {
                        if (currentQueue) {
                            currentQueue[queueIndex].run();
                        }
                    }
                    queueIndex = -1;
                    len = queue.length;
                }
                currentQueue = null;
                draining = false;
                runClearTimeout(timeout);
            }
            function nextTick(fun) {
                var arguments$1 = arguments;

                var args = new Array(arguments.length - 1);
                if (arguments.length > 1) {
                    for (var i = 1; i < arguments.length; i++) {
                        args[i - 1] = arguments$1[i];
                    }
                }
                queue.push(new Item(fun, args));
                if (queue.length === 1 && !draining) {
                    runTimeout(drainQueue);
                }
            }
            // v8 likes predictible objects
            function Item(fun, array) {
                this.fun = fun;
                this.array = array;
            }
            Item.prototype.run = function () {
                this.fun.apply(null, this.array);
            };
            var title = 'browser';
            var platform = 'browser';
            var browser = true;
            var env = {};
            var argv = [];
            var version = ''; // empty string to avoid regexp issues
            var versions = {};
            var release = {};
            var config = {};

            function noop() {}

            var on = noop;
            var addListener = noop;
            var once = noop;
            var off = noop;
            var removeListener = noop;
            var removeAllListeners = noop;
            var emit = noop;

            function binding(name) {
                throw new Error('process.binding is not supported');
            }

            function cwd () { return '/' }
            function chdir (dir) {
                throw new Error('process.chdir is not supported');
            }function umask() { return 0; }

            // from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js
            var performance = global$1.performance || {};
            var performanceNow =
              performance.now        ||
              performance.mozNow     ||
              performance.msNow      ||
              performance.oNow       ||
              performance.webkitNow  ||
              function(){ return (new Date()).getTime() };

            // generate timestamp or delta
            // see http://nodejs.org/api/process.html#process_process_hrtime
            function hrtime(previousTimestamp){
              var clocktime = performanceNow.call(performance)*1e-3;
              var seconds = Math.floor(clocktime);
              var nanoseconds = Math.floor((clocktime%1)*1e9);
              if (previousTimestamp) {
                seconds = seconds - previousTimestamp[0];
                nanoseconds = nanoseconds - previousTimestamp[1];
                if (nanoseconds<0) {
                  seconds--;
                  nanoseconds += 1e9;
                }
              }
              return [seconds,nanoseconds]
            }

            var startTime = new Date();
            function uptime() {
              var currentTime = new Date();
              var dif = currentTime - startTime;
              return dif / 1000;
            }

            var process = {
              nextTick: nextTick,
              title: title,
              browser: browser,
              env: env,
              argv: argv,
              version: version,
              versions: versions,
              on: on,
              addListener: addListener,
              once: once,
              off: off,
              removeListener: removeListener,
              removeAllListeners: removeAllListeners,
              emit: emit,
              binding: binding,
              cwd: cwd,
              chdir: chdir,
              umask: umask,
              hrtime: hrtime,
              platform: platform,
              release: release,
              config: config,
              uptime: uptime
            };

            /*!
             * Vue.js v2.6.10
             * (c) 2014-2019 Evan You
             * Released under the MIT License.
             */
            /*  */

            var emptyObject = Object.freeze({});

            // These helpers produce better VM code in JS engines due to their
            // explicitness and function inlining.
            function isUndef (v) {
              return v === undefined || v === null
            }

            function isDef (v) {
              return v !== undefined && v !== null
            }

            function isTrue (v) {
              return v === true
            }

            function isFalse (v) {
              return v === false
            }

            /**
             * Check if value is primitive.
             */
            function isPrimitive (value) {
              return (
                typeof value === 'string' ||
                typeof value === 'number' ||
                // $flow-disable-line
                typeof value === 'symbol' ||
                typeof value === 'boolean'
              )
            }

            /**
             * Quick object check - this is primarily used to tell
             * Objects from primitive values when we know the value
             * is a JSON-compliant type.
             */
            function isObject (obj) {
              return obj !== null && typeof obj === 'object'
            }

            /**
             * Get the raw type string of a value, e.g., [object Object].
             */
            var _toString = Object.prototype.toString;

            function toRawType (value) {
              return _toString.call(value).slice(8, -1)
            }

            /**
             * Strict object type check. Only returns true
             * for plain JavaScript objects.
             */
            function isPlainObject (obj) {
              return _toString.call(obj) === '[object Object]'
            }

            function isRegExp (v) {
              return _toString.call(v) === '[object RegExp]'
            }

            /**
             * Check if val is a valid array index.
             */
            function isValidArrayIndex (val) {
              var n = parseFloat(String(val));
              return n >= 0 && Math.floor(n) === n && isFinite(val)
            }

            function isPromise (val) {
              return (
                isDef(val) &&
                typeof val.then === 'function' &&
                typeof val.catch === 'function'
              )
            }

            /**
             * Convert a value to a string that is actually rendered.
             */
            function toString (val) {
              return val == null
                ? ''
                : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
                  ? JSON.stringify(val, null, 2)
                  : String(val)
            }

            /**
             * Convert an input value to a number for persistence.
             * If the conversion fails, return original string.
             */
            function toNumber (val) {
              var n = parseFloat(val);
              return isNaN(n) ? val : n
            }

            /**
             * Make a map and return a function for checking if a key
             * is in that map.
             */
            function makeMap (
              str,
              expectsLowerCase
            ) {
              var map = Object.create(null);
              var list = str.split(',');
              for (var i = 0; i < list.length; i++) {
                map[list[i]] = true;
              }
              return expectsLowerCase
                ? function (val) { return map[val.toLowerCase()]; }
                : function (val) { return map[val]; }
            }

            /**
             * Check if a tag is a built-in tag.
             */
            var isBuiltInTag = makeMap('slot,component', true);

            /**
             * Check if an attribute is a reserved attribute.
             */
            var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

            /**
             * Remove an item from an array.
             */
            function remove (arr, item) {
              if (arr.length) {
                var index = arr.indexOf(item);
                if (index > -1) {
                  return arr.splice(index, 1)
                }
              }
            }

            /**
             * Check whether an object has the property.
             */
            var hasOwnProperty = Object.prototype.hasOwnProperty;
            function hasOwn (obj, key) {
              return hasOwnProperty.call(obj, key)
            }

            /**
             * Create a cached version of a pure function.
             */
            function cached (fn) {
              var cache = Object.create(null);
              return (function cachedFn (str) {
                var hit = cache[str];
                return hit || (cache[str] = fn(str))
              })
            }

            /**
             * Camelize a hyphen-delimited string.
             */
            var camelizeRE = /-(\w)/g;
            var camelize = cached(function (str) {
              return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
            });

            /**
             * Capitalize a string.
             */
            var capitalize = cached(function (str) {
              return str.charAt(0).toUpperCase() + str.slice(1)
            });

            /**
             * Hyphenate a camelCase string.
             */
            var hyphenateRE = /\B([A-Z])/g;
            var hyphenate = cached(function (str) {
              return str.replace(hyphenateRE, '-$1').toLowerCase()
            });

            /**
             * Simple bind polyfill for environments that do not support it,
             * e.g., PhantomJS 1.x. Technically, we don't need this anymore
             * since native bind is now performant enough in most browsers.
             * But removing it would mean breaking code that was able to run in
             * PhantomJS 1.x, so this must be kept for backward compatibility.
             */

            /* istanbul ignore next */
            function polyfillBind (fn, ctx) {
              function boundFn (a) {
                var l = arguments.length;
                return l
                  ? l > 1
                    ? fn.apply(ctx, arguments)
                    : fn.call(ctx, a)
                  : fn.call(ctx)
              }

              boundFn._length = fn.length;
              return boundFn
            }

            function nativeBind (fn, ctx) {
              return fn.bind(ctx)
            }

            var bind = Function.prototype.bind
              ? nativeBind
              : polyfillBind;

            /**
             * Convert an Array-like object to a real Array.
             */
            function toArray (list, start) {
              start = start || 0;
              var i = list.length - start;
              var ret = new Array(i);
              while (i--) {
                ret[i] = list[i + start];
              }
              return ret
            }

            /**
             * Mix properties into target object.
             */
            function extend (to, _from) {
              for (var key in _from) {
                to[key] = _from[key];
              }
              return to
            }

            /**
             * Merge an Array of Objects into a single Object.
             */
            function toObject (arr) {
              var res = {};
              for (var i = 0; i < arr.length; i++) {
                if (arr[i]) {
                  extend(res, arr[i]);
                }
              }
              return res
            }

            /* eslint-disable no-unused-vars */

            /**
             * Perform no operation.
             * Stubbing args to make Flow happy without leaving useless transpiled code
             * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
             */
            function noop$1 (a, b, c) {}

            /**
             * Always return false.
             */
            var no = function (a, b, c) { return false; };

            /* eslint-enable no-unused-vars */

            /**
             * Return the same value.
             */
            var identity = function (_) { return _; };

            /**
             * Check if two values are loosely equal - that is,
             * if they are plain objects, do they have the same shape?
             */
            function looseEqual (a, b) {
              if (a === b) { return true }
              var isObjectA = isObject(a);
              var isObjectB = isObject(b);
              if (isObjectA && isObjectB) {
                try {
                  var isArrayA = Array.isArray(a);
                  var isArrayB = Array.isArray(b);
                  if (isArrayA && isArrayB) {
                    return a.length === b.length && a.every(function (e, i) {
                      return looseEqual(e, b[i])
                    })
                  } else if (a instanceof Date && b instanceof Date) {
                    return a.getTime() === b.getTime()
                  } else if (!isArrayA && !isArrayB) {
                    var keysA = Object.keys(a);
                    var keysB = Object.keys(b);
                    return keysA.length === keysB.length && keysA.every(function (key) {
                      return looseEqual(a[key], b[key])
                    })
                  } else {
                    /* istanbul ignore next */
                    return false
                  }
                } catch (e) {
                  /* istanbul ignore next */
                  return false
                }
              } else if (!isObjectA && !isObjectB) {
                return String(a) === String(b)
              } else {
                return false
              }
            }

            /**
             * Return the first index at which a loosely equal value can be
             * found in the array (if value is a plain object, the array must
             * contain an object of the same shape), or -1 if it is not present.
             */
            function looseIndexOf (arr, val) {
              for (var i = 0; i < arr.length; i++) {
                if (looseEqual(arr[i], val)) { return i }
              }
              return -1
            }

            /**
             * Ensure a function is called only once.
             */
            function once$1 (fn) {
              var called = false;
              return function () {
                if (!called) {
                  called = true;
                  fn.apply(this, arguments);
                }
              }
            }

            var SSR_ATTR = 'data-server-rendered';

            var ASSET_TYPES = [
              'component',
              'directive',
              'filter'
            ];

            var LIFECYCLE_HOOKS = [
              'beforeCreate',
              'created',
              'beforeMount',
              'mounted',
              'beforeUpdate',
              'updated',
              'beforeDestroy',
              'destroyed',
              'activated',
              'deactivated',
              'errorCaptured',
              'serverPrefetch'
            ];

            /*  */



            var config$1 = ({
              /**
               * Option merge strategies (used in core/util/options)
               */
              // $flow-disable-line
              optionMergeStrategies: Object.create(null),

              /**
               * Whether to suppress warnings.
               */
              silent: false,

              /**
               * Show production mode tip message on boot?
               */
              productionTip: process.env.NODE_ENV !== 'production',

              /**
               * Whether to enable devtools
               */
              devtools: process.env.NODE_ENV !== 'production',

              /**
               * Whether to record perf
               */
              performance: false,

              /**
               * Error handler for watcher errors
               */
              errorHandler: null,

              /**
               * Warn handler for watcher warns
               */
              warnHandler: null,

              /**
               * Ignore certain custom elements
               */
              ignoredElements: [],

              /**
               * Custom user key aliases for v-on
               */
              // $flow-disable-line
              keyCodes: Object.create(null),

              /**
               * Check if a tag is reserved so that it cannot be registered as a
               * component. This is platform-dependent and may be overwritten.
               */
              isReservedTag: no,

              /**
               * Check if an attribute is reserved so that it cannot be used as a component
               * prop. This is platform-dependent and may be overwritten.
               */
              isReservedAttr: no,

              /**
               * Check if a tag is an unknown element.
               * Platform-dependent.
               */
              isUnknownElement: no,

              /**
               * Get the namespace of an element
               */
              getTagNamespace: noop$1,

              /**
               * Parse the real tag name for the specific platform.
               */
              parsePlatformTagName: identity,

              /**
               * Check if an attribute must be bound using property, e.g. value
               * Platform-dependent.
               */
              mustUseProp: no,

              /**
               * Perform updates asynchronously. Intended to be used by Vue Test Utils
               * This will significantly reduce performance if set to false.
               */
              async: true,

              /**
               * Exposed for legacy reasons
               */
              _lifecycleHooks: LIFECYCLE_HOOKS
            });

            /*  */

            /**
             * unicode letters used for parsing html tags, component names and property paths.
             * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
             * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
             */
            var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

            /**
             * Check if a string starts with $ or _
             */
            function isReserved (str) {
              var c = (str + '').charCodeAt(0);
              return c === 0x24 || c === 0x5F
            }

            /**
             * Define a property.
             */
            function def (obj, key, val, enumerable) {
              Object.defineProperty(obj, key, {
                value: val,
                enumerable: !!enumerable,
                writable: true,
                configurable: true
              });
            }

            /**
             * Parse simple path.
             */
            var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
            function parsePath (path) {
              if (bailRE.test(path)) {
                return
              }
              var segments = path.split('.');
              return function (obj) {
                for (var i = 0; i < segments.length; i++) {
                  if (!obj) { return }
                  obj = obj[segments[i]];
                }
                return obj
              }
            }

            /*  */

            // can we use __proto__?
            var hasProto = '__proto__' in {};

            // Browser environment sniffing
            var inBrowser = typeof window !== 'undefined';
            var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
            var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
            var UA = inBrowser && window.navigator.userAgent.toLowerCase();
            var isIE = UA && /msie|trident/.test(UA);
            var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
            var isEdge = UA && UA.indexOf('edge/') > 0;
            var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
            var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
            var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
            var isPhantomJS = UA && /phantomjs/.test(UA);
            var isFF = UA && UA.match(/firefox\/(\d+)/);

            // Firefox has a "watch" function on Object.prototype...
            var nativeWatch = ({}).watch;

            var supportsPassive = false;
            if (inBrowser) {
              try {
                var opts = {};
                Object.defineProperty(opts, 'passive', ({
                  get: function get () {
                    /* istanbul ignore next */
                    supportsPassive = true;
                  }
                })); // https://github.com/facebook/flow/issues/285
                window.addEventListener('test-passive', null, opts);
              } catch (e) {}
            }

            // this needs to be lazy-evaled because vue may be required before
            // vue-server-renderer can set VUE_ENV
            var _isServer;
            var isServerRendering = function () {
              if (_isServer === undefined) {
                /* istanbul ignore if */
                if (!inBrowser && !inWeex && typeof global$1 !== 'undefined') {
                  // detect presence of vue-server-renderer and avoid
                  // Webpack shimming the process
                  _isServer = global$1['process'] && global$1['process'].env.VUE_ENV === 'server';
                } else {
                  _isServer = false;
                }
              }
              return _isServer
            };

            // detect devtools
            var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

            /* istanbul ignore next */
            function isNative (Ctor) {
              return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
            }

            var hasSymbol =
              typeof Symbol !== 'undefined' && isNative(Symbol) &&
              typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

            var _Set;
            /* istanbul ignore if */ // $flow-disable-line
            if (typeof Set !== 'undefined' && isNative(Set)) {
              // use native Set when available.
              _Set = Set;
            } else {
              // a non-standard Set polyfill that only works with primitive keys.
              _Set = /*@__PURE__*/(function () {
                function Set () {
                  this.set = Object.create(null);
                }
                Set.prototype.has = function has (key) {
                  return this.set[key] === true
                };
                Set.prototype.add = function add (key) {
                  this.set[key] = true;
                };
                Set.prototype.clear = function clear () {
                  this.set = Object.create(null);
                };

                return Set;
              }());
            }

            /*  */

            var warn = noop$1;
            var tip = noop$1;
            var generateComponentTrace = (noop$1); // work around flow check
            var formatComponentName = (noop$1);

            {
              var hasConsole = typeof console !== 'undefined';
              var classifyRE = /(?:^|[-_])(\w)/g;
              var classify = function (str) { return str
                .replace(classifyRE, function (c) { return c.toUpperCase(); })
                .replace(/[-_]/g, ''); };

              warn = function (msg, vm) {
                var trace = vm ? generateComponentTrace(vm) : '';

                if (config$1.warnHandler) {
                  config$1.warnHandler.call(null, msg, vm, trace);
                } else if (hasConsole && (!config$1.silent)) {
                  console.error(("[Vue warn]: " + msg + trace));
                }
              };

              tip = function (msg, vm) {
                if (hasConsole && (!config$1.silent)) {
                  console.warn("[Vue tip]: " + msg + (
                    vm ? generateComponentTrace(vm) : ''
                  ));
                }
              };

              formatComponentName = function (vm, includeFile) {
                if (vm.$root === vm) {
                  return '<Root>'
                }
                var options = typeof vm === 'function' && vm.cid != null
                  ? vm.options
                  : vm._isVue
                    ? vm.$options || vm.constructor.options
                    : vm;
                var name = options.name || options._componentTag;
                var file = options.__file;
                if (!name && file) {
                  var match = file.match(/([^/\\]+)\.vue$/);
                  name = match && match[1];
                }

                return (
                  (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
                  (file && includeFile !== false ? (" at " + file) : '')
                )
              };

              var repeat = function (str, n) {
                var res = '';
                while (n) {
                  if (n % 2 === 1) { res += str; }
                  if (n > 1) { str += str; }
                  n >>= 1;
                }
                return res
              };

              generateComponentTrace = function (vm) {
                if (vm._isVue && vm.$parent) {
                  var tree = [];
                  var currentRecursiveSequence = 0;
                  while (vm) {
                    if (tree.length > 0) {
                      var last = tree[tree.length - 1];
                      if (last.constructor === vm.constructor) {
                        currentRecursiveSequence++;
                        vm = vm.$parent;
                        continue
                      } else if (currentRecursiveSequence > 0) {
                        tree[tree.length - 1] = [last, currentRecursiveSequence];
                        currentRecursiveSequence = 0;
                      }
                    }
                    tree.push(vm);
                    vm = vm.$parent;
                  }
                  return '\n\nfound in\n\n' + tree
                    .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
                        ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
                        : formatComponentName(vm))); })
                    .join('\n')
                } else {
                  return ("\n\n(found in " + (formatComponentName(vm)) + ")")
                }
              };
            }

            /*  */

            var uid = 0;

            /**
             * A dep is an observable that can have multiple
             * directives subscribing to it.
             */
            var Dep = function Dep () {
              this.id = uid++;
              this.subs = [];
            };

            Dep.prototype.addSub = function addSub (sub) {
              this.subs.push(sub);
            };

            Dep.prototype.removeSub = function removeSub (sub) {
              remove(this.subs, sub);
            };

            Dep.prototype.depend = function depend () {
              if (Dep.target) {
                Dep.target.addDep(this);
              }
            };

            Dep.prototype.notify = function notify () {
              // stabilize the subscriber list first
              var subs = this.subs.slice();
              if ( !config$1.async) {
                // subs aren't sorted in scheduler if not running async
                // we need to sort them now to make sure they fire in correct
                // order
                subs.sort(function (a, b) { return a.id - b.id; });
              }
              for (var i = 0, l = subs.length; i < l; i++) {
                subs[i].update();
              }
            };

            // The current target watcher being evaluated.
            // This is globally unique because only one watcher
            // can be evaluated at a time.
            Dep.target = null;
            var targetStack = [];

            function pushTarget (target) {
              targetStack.push(target);
              Dep.target = target;
            }

            function popTarget () {
              targetStack.pop();
              Dep.target = targetStack[targetStack.length - 1];
            }

            /*  */

            var VNode = function VNode (
              tag,
              data,
              children,
              text,
              elm,
              context,
              componentOptions,
              asyncFactory
            ) {
              this.tag = tag;
              this.data = data;
              this.children = children;
              this.text = text;
              this.elm = elm;
              this.ns = undefined;
              this.context = context;
              this.fnContext = undefined;
              this.fnOptions = undefined;
              this.fnScopeId = undefined;
              this.key = data && data.key;
              this.componentOptions = componentOptions;
              this.componentInstance = undefined;
              this.parent = undefined;
              this.raw = false;
              this.isStatic = false;
              this.isRootInsert = true;
              this.isComment = false;
              this.isCloned = false;
              this.isOnce = false;
              this.asyncFactory = asyncFactory;
              this.asyncMeta = undefined;
              this.isAsyncPlaceholder = false;
            };

            var prototypeAccessors = { child: { configurable: true } };

            // DEPRECATED: alias for componentInstance for backwards compat.
            /* istanbul ignore next */
            prototypeAccessors.child.get = function () {
              return this.componentInstance
            };

            Object.defineProperties( VNode.prototype, prototypeAccessors );

            var createEmptyVNode = function (text) {
              if ( text === void 0 ) { text = ''; }

              var node = new VNode();
              node.text = text;
              node.isComment = true;
              return node
            };

            function createTextVNode (val) {
              return new VNode(undefined, undefined, undefined, String(val))
            }

            // optimized shallow clone
            // used for static nodes and slot nodes because they may be reused across
            // multiple renders, cloning them avoids errors when DOM manipulations rely
            // on their elm reference.
            function cloneVNode (vnode) {
              var cloned = new VNode(
                vnode.tag,
                vnode.data,
                // #7975
                // clone children array to avoid mutating original in case of cloning
                // a child.
                vnode.children && vnode.children.slice(),
                vnode.text,
                vnode.elm,
                vnode.context,
                vnode.componentOptions,
                vnode.asyncFactory
              );
              cloned.ns = vnode.ns;
              cloned.isStatic = vnode.isStatic;
              cloned.key = vnode.key;
              cloned.isComment = vnode.isComment;
              cloned.fnContext = vnode.fnContext;
              cloned.fnOptions = vnode.fnOptions;
              cloned.fnScopeId = vnode.fnScopeId;
              cloned.asyncMeta = vnode.asyncMeta;
              cloned.isCloned = true;
              return cloned
            }

            /*
             * not type checking this file because flow doesn't play well with
             * dynamically accessing methods on Array prototype
             */

            var arrayProto = Array.prototype;
            var arrayMethods = Object.create(arrayProto);

            var methodsToPatch = [
              'push',
              'pop',
              'shift',
              'unshift',
              'splice',
              'sort',
              'reverse'
            ];

            /**
             * Intercept mutating methods and emit events
             */
            methodsToPatch.forEach(function (method) {
              // cache original method
              var original = arrayProto[method];
              def(arrayMethods, method, function mutator () {
                var arguments$1 = arguments;

                var args = [], len = arguments.length;
                while ( len-- ) { args[ len ] = arguments$1[ len ]; }

                var result = original.apply(this, args);
                var ob = this.__ob__;
                var inserted;
                switch (method) {
                  case 'push':
                  case 'unshift':
                    inserted = args;
                    break
                  case 'splice':
                    inserted = args.slice(2);
                    break
                }
                if (inserted) { ob.observeArray(inserted); }
                // notify change
                ob.dep.notify();
                return result
              });
            });

            /*  */

            var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

            /**
             * In some cases we may want to disable observation inside a component's
             * update computation.
             */
            var shouldObserve = true;

            function toggleObserving (value) {
              shouldObserve = value;
            }

            /**
             * Observer class that is attached to each observed
             * object. Once attached, the observer converts the target
             * object's property keys into getter/setters that
             * collect dependencies and dispatch updates.
             */
            var Observer = function Observer (value) {
              this.value = value;
              this.dep = new Dep();
              this.vmCount = 0;
              def(value, '__ob__', this);
              if (Array.isArray(value)) {
                if (hasProto) {
                  protoAugment(value, arrayMethods);
                } else {
                  copyAugment(value, arrayMethods, arrayKeys);
                }
                this.observeArray(value);
              } else {
                this.walk(value);
              }
            };

            /**
             * Walk through all properties and convert them into
             * getter/setters. This method should only be called when
             * value type is Object.
             */
            Observer.prototype.walk = function walk (obj) {
              var keys = Object.keys(obj);
              for (var i = 0; i < keys.length; i++) {
                defineReactive$$1(obj, keys[i]);
              }
            };

            /**
             * Observe a list of Array items.
             */
            Observer.prototype.observeArray = function observeArray (items) {
              for (var i = 0, l = items.length; i < l; i++) {
                observe(items[i]);
              }
            };

            // helpers

            /**
             * Augment a target Object or Array by intercepting
             * the prototype chain using __proto__
             */
            function protoAugment (target, src) {
              /* eslint-disable no-proto */
              target.__proto__ = src;
              /* eslint-enable no-proto */
            }

            /**
             * Augment a target Object or Array by defining
             * hidden properties.
             */
            /* istanbul ignore next */
            function copyAugment (target, src, keys) {
              for (var i = 0, l = keys.length; i < l; i++) {
                var key = keys[i];
                def(target, key, src[key]);
              }
            }

            /**
             * Attempt to create an observer instance for a value,
             * returns the new observer if successfully observed,
             * or the existing observer if the value already has one.
             */
            function observe (value, asRootData) {
              if (!isObject(value) || value instanceof VNode) {
                return
              }
              var ob;
              if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
                ob = value.__ob__;
              } else if (
                shouldObserve &&
                !isServerRendering() &&
                (Array.isArray(value) || isPlainObject(value)) &&
                Object.isExtensible(value) &&
                !value._isVue
              ) {
                ob = new Observer(value);
              }
              if (asRootData && ob) {
                ob.vmCount++;
              }
              return ob
            }

            /**
             * Define a reactive property on an Object.
             */
            function defineReactive$$1 (
              obj,
              key,
              val,
              customSetter,
              shallow
            ) {
              var dep = new Dep();

              var property = Object.getOwnPropertyDescriptor(obj, key);
              if (property && property.configurable === false) {
                return
              }

              // cater for pre-defined getter/setters
              var getter = property && property.get;
              var setter = property && property.set;
              if ((!getter || setter) && arguments.length === 2) {
                val = obj[key];
              }

              var childOb = !shallow && observe(val);
              Object.defineProperty(obj, key, {
                enumerable: true,
                configurable: true,
                get: function reactiveGetter () {
                  var value = getter ? getter.call(obj) : val;
                  if (Dep.target) {
                    dep.depend();
                    if (childOb) {
                      childOb.dep.depend();
                      if (Array.isArray(value)) {
                        dependArray(value);
                      }
                    }
                  }
                  return value
                },
                set: function reactiveSetter (newVal) {
                  var value = getter ? getter.call(obj) : val;
                  /* eslint-disable no-self-compare */
                  if (newVal === value || (newVal !== newVal && value !== value)) {
                    return
                  }
                  /* eslint-enable no-self-compare */
                  if ( customSetter) {
                    customSetter();
                  }
                  // #7981: for accessor properties without setter
                  if (getter && !setter) { return }
                  if (setter) {
                    setter.call(obj, newVal);
                  } else {
                    val = newVal;
                  }
                  childOb = !shallow && observe(newVal);
                  dep.notify();
                }
              });
            }

            /**
             * Set a property on an object. Adds the new property and
             * triggers change notification if the property doesn't
             * already exist.
             */
            function set (target, key, val) {
              if (
                (isUndef(target) || isPrimitive(target))
              ) {
                warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
              }
              if (Array.isArray(target) && isValidArrayIndex(key)) {
                target.length = Math.max(target.length, key);
                target.splice(key, 1, val);
                return val
              }
              if (key in target && !(key in Object.prototype)) {
                target[key] = val;
                return val
              }
              var ob = (target).__ob__;
              if (target._isVue || (ob && ob.vmCount)) {
                 warn(
                  'Avoid adding reactive properties to a Vue instance or its root $data ' +
                  'at runtime - declare it upfront in the data option.'
                );
                return val
              }
              if (!ob) {
                target[key] = val;
                return val
              }
              defineReactive$$1(ob.value, key, val);
              ob.dep.notify();
              return val
            }

            /**
             * Delete a property and trigger change if necessary.
             */
            function del (target, key) {
              if (
                (isUndef(target) || isPrimitive(target))
              ) {
                warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
              }
              if (Array.isArray(target) && isValidArrayIndex(key)) {
                target.splice(key, 1);
                return
              }
              var ob = (target).__ob__;
              if (target._isVue || (ob && ob.vmCount)) {
                 warn(
                  'Avoid deleting properties on a Vue instance or its root $data ' +
                  '- just set it to null.'
                );
                return
              }
              if (!hasOwn(target, key)) {
                return
              }
              delete target[key];
              if (!ob) {
                return
              }
              ob.dep.notify();
            }

            /**
             * Collect dependencies on array elements when the array is touched, since
             * we cannot intercept array element access like property getters.
             */
            function dependArray (value) {
              for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
                e = value[i];
                e && e.__ob__ && e.__ob__.dep.depend();
                if (Array.isArray(e)) {
                  dependArray(e);
                }
              }
            }

            /*  */

            /**
             * Option overwriting strategies are functions that handle
             * how to merge a parent option value and a child option
             * value into the final value.
             */
            var strats = config$1.optionMergeStrategies;

            /**
             * Options with restrictions
             */
            {
              strats.el = strats.propsData = function (parent, child, vm, key) {
                if (!vm) {
                  warn(
                    "option \"" + key + "\" can only be used during instance " +
                    'creation with the `new` keyword.'
                  );
                }
                return defaultStrat(parent, child)
              };
            }

            /**
             * Helper that recursively merges two data objects together.
             */
            function mergeData (to, from) {
              if (!from) { return to }
              var key, toVal, fromVal;

              var keys = hasSymbol
                ? Reflect.ownKeys(from)
                : Object.keys(from);

              for (var i = 0; i < keys.length; i++) {
                key = keys[i];
                // in case the object is already observed...
                if (key === '__ob__') { continue }
                toVal = to[key];
                fromVal = from[key];
                if (!hasOwn(to, key)) {
                  set(to, key, fromVal);
                } else if (
                  toVal !== fromVal &&
                  isPlainObject(toVal) &&
                  isPlainObject(fromVal)
                ) {
                  mergeData(toVal, fromVal);
                }
              }
              return to
            }

            /**
             * Data
             */
            function mergeDataOrFn (
              parentVal,
              childVal,
              vm
            ) {
              if (!vm) {
                // in a Vue.extend merge, both should be functions
                if (!childVal) {
                  return parentVal
                }
                if (!parentVal) {
                  return childVal
                }
                // when parentVal & childVal are both present,
                // we need to return a function that returns the
                // merged result of both functions... no need to
                // check if parentVal is a function here because
                // it has to be a function to pass previous merges.
                return function mergedDataFn () {
                  return mergeData(
                    typeof childVal === 'function' ? childVal.call(this, this) : childVal,
                    typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
                  )
                }
              } else {
                return function mergedInstanceDataFn () {
                  // instance merge
                  var instanceData = typeof childVal === 'function'
                    ? childVal.call(vm, vm)
                    : childVal;
                  var defaultData = typeof parentVal === 'function'
                    ? parentVal.call(vm, vm)
                    : parentVal;
                  if (instanceData) {
                    return mergeData(instanceData, defaultData)
                  } else {
                    return defaultData
                  }
                }
              }
            }

            strats.data = function (
              parentVal,
              childVal,
              vm
            ) {
              if (!vm) {
                if (childVal && typeof childVal !== 'function') {
                   warn(
                    'The "data" option should be a function ' +
                    'that returns a per-instance value in component ' +
                    'definitions.',
                    vm
                  );

                  return parentVal
                }
                return mergeDataOrFn(parentVal, childVal)
              }

              return mergeDataOrFn(parentVal, childVal, vm)
            };

            /**
             * Hooks and props are merged as arrays.
             */
            function mergeHook (
              parentVal,
              childVal
            ) {
              var res = childVal
                ? parentVal
                  ? parentVal.concat(childVal)
                  : Array.isArray(childVal)
                    ? childVal
                    : [childVal]
                : parentVal;
              return res
                ? dedupeHooks(res)
                : res
            }

            function dedupeHooks (hooks) {
              var res = [];
              for (var i = 0; i < hooks.length; i++) {
                if (res.indexOf(hooks[i]) === -1) {
                  res.push(hooks[i]);
                }
              }
              return res
            }

            LIFECYCLE_HOOKS.forEach(function (hook) {
              strats[hook] = mergeHook;
            });

            /**
             * Assets
             *
             * When a vm is present (instance creation), we need to do
             * a three-way merge between constructor options, instance
             * options and parent options.
             */
            function mergeAssets (
              parentVal,
              childVal,
              vm,
              key
            ) {
              var res = Object.create(parentVal || null);
              if (childVal) {
                 assertObjectType(key, childVal, vm);
                return extend(res, childVal)
              } else {
                return res
              }
            }

            ASSET_TYPES.forEach(function (type) {
              strats[type + 's'] = mergeAssets;
            });

            /**
             * Watchers.
             *
             * Watchers hashes should not overwrite one
             * another, so we merge them as arrays.
             */
            strats.watch = function (
              parentVal,
              childVal,
              vm,
              key
            ) {
              // work around Firefox's Object.prototype.watch...
              if (parentVal === nativeWatch) { parentVal = undefined; }
              if (childVal === nativeWatch) { childVal = undefined; }
              /* istanbul ignore if */
              if (!childVal) { return Object.create(parentVal || null) }
              {
                assertObjectType(key, childVal, vm);
              }
              if (!parentVal) { return childVal }
              var ret = {};
              extend(ret, parentVal);
              for (var key$1 in childVal) {
                var parent = ret[key$1];
                var child = childVal[key$1];
                if (parent && !Array.isArray(parent)) {
                  parent = [parent];
                }
                ret[key$1] = parent
                  ? parent.concat(child)
                  : Array.isArray(child) ? child : [child];
              }
              return ret
            };

            /**
             * Other object hashes.
             */
            strats.props =
            strats.methods =
            strats.inject =
            strats.computed = function (
              parentVal,
              childVal,
              vm,
              key
            ) {
              if (childVal && process.env.NODE_ENV !== 'production') {
                assertObjectType(key, childVal, vm);
              }
              if (!parentVal) { return childVal }
              var ret = Object.create(null);
              extend(ret, parentVal);
              if (childVal) { extend(ret, childVal); }
              return ret
            };
            strats.provide = mergeDataOrFn;

            /**
             * Default strategy.
             */
            var defaultStrat = function (parentVal, childVal) {
              return childVal === undefined
                ? parentVal
                : childVal
            };

            /**
             * Validate component names
             */
            function checkComponents (options) {
              for (var key in options.components) {
                validateComponentName(key);
              }
            }

            function validateComponentName (name) {
              if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
                warn(
                  'Invalid component name: "' + name + '". Component names ' +
                  'should conform to valid custom element name in html5 specification.'
                );
              }
              if (isBuiltInTag(name) || config$1.isReservedTag(name)) {
                warn(
                  'Do not use built-in or reserved HTML elements as component ' +
                  'id: ' + name
                );
              }
            }

            /**
             * Ensure all props option syntax are normalized into the
             * Object-based format.
             */
            function normalizeProps (options, vm) {
              var props = options.props;
              if (!props) { return }
              var res = {};
              var i, val, name;
              if (Array.isArray(props)) {
                i = props.length;
                while (i--) {
                  val = props[i];
                  if (typeof val === 'string') {
                    name = camelize(val);
                    res[name] = { type: null };
                  } else {
                    warn('props must be strings when using array syntax.');
                  }
                }
              } else if (isPlainObject(props)) {
                for (var key in props) {
                  val = props[key];
                  name = camelize(key);
                  res[name] = isPlainObject(val)
                    ? val
                    : { type: val };
                }
              } else {
                warn(
                  "Invalid value for option \"props\": expected an Array or an Object, " +
                  "but got " + (toRawType(props)) + ".",
                  vm
                );
              }
              options.props = res;
            }

            /**
             * Normalize all injections into Object-based format
             */
            function normalizeInject (options, vm) {
              var inject = options.inject;
              if (!inject) { return }
              var normalized = options.inject = {};
              if (Array.isArray(inject)) {
                for (var i = 0; i < inject.length; i++) {
                  normalized[inject[i]] = { from: inject[i] };
                }
              } else if (isPlainObject(inject)) {
                for (var key in inject) {
                  var val = inject[key];
                  normalized[key] = isPlainObject(val)
                    ? extend({ from: key }, val)
                    : { from: val };
                }
              } else {
                warn(
                  "Invalid value for option \"inject\": expected an Array or an Object, " +
                  "but got " + (toRawType(inject)) + ".",
                  vm
                );
              }
            }

            /**
             * Normalize raw function directives into object format.
             */
            function normalizeDirectives (options) {
              var dirs = options.directives;
              if (dirs) {
                for (var key in dirs) {
                  var def$$1 = dirs[key];
                  if (typeof def$$1 === 'function') {
                    dirs[key] = { bind: def$$1, update: def$$1 };
                  }
                }
              }
            }

            function assertObjectType (name, value, vm) {
              if (!isPlainObject(value)) {
                warn(
                  "Invalid value for option \"" + name + "\": expected an Object, " +
                  "but got " + (toRawType(value)) + ".",
                  vm
                );
              }
            }

            /**
             * Merge two option objects into a new one.
             * Core utility used in both instantiation and inheritance.
             */
            function mergeOptions (
              parent,
              child,
              vm
            ) {
              {
                checkComponents(child);
              }

              if (typeof child === 'function') {
                child = child.options;
              }

              normalizeProps(child, vm);
              normalizeInject(child, vm);
              normalizeDirectives(child);

              // Apply extends and mixins on the child options,
              // but only if it is a raw options object that isn't
              // the result of another mergeOptions call.
              // Only merged options has the _base property.
              if (!child._base) {
                if (child.extends) {
                  parent = mergeOptions(parent, child.extends, vm);
                }
                if (child.mixins) {
                  for (var i = 0, l = child.mixins.length; i < l; i++) {
                    parent = mergeOptions(parent, child.mixins[i], vm);
                  }
                }
              }

              var options = {};
              var key;
              for (key in parent) {
                mergeField(key);
              }
              for (key in child) {
                if (!hasOwn(parent, key)) {
                  mergeField(key);
                }
              }
              function mergeField (key) {
                var strat = strats[key] || defaultStrat;
                options[key] = strat(parent[key], child[key], vm, key);
              }
              return options
            }

            /**
             * Resolve an asset.
             * This function is used because child instances need access
             * to assets defined in its ancestor chain.
             */
            function resolveAsset (
              options,
              type,
              id,
              warnMissing
            ) {
              /* istanbul ignore if */
              if (typeof id !== 'string') {
                return
              }
              var assets = options[type];
              // check local registration variations first
              if (hasOwn(assets, id)) { return assets[id] }
              var camelizedId = camelize(id);
              if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
              var PascalCaseId = capitalize(camelizedId);
              if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
              // fallback to prototype chain
              var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
              if ( warnMissing && !res) {
                warn(
                  'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
                  options
                );
              }
              return res
            }

            /*  */



            function validateProp (
              key,
              propOptions,
              propsData,
              vm
            ) {
              var prop = propOptions[key];
              var absent = !hasOwn(propsData, key);
              var value = propsData[key];
              // boolean casting
              var booleanIndex = getTypeIndex(Boolean, prop.type);
              if (booleanIndex > -1) {
                if (absent && !hasOwn(prop, 'default')) {
                  value = false;
                } else if (value === '' || value === hyphenate(key)) {
                  // only cast empty string / same name to boolean if
                  // boolean has higher priority
                  var stringIndex = getTypeIndex(String, prop.type);
                  if (stringIndex < 0 || booleanIndex < stringIndex) {
                    value = true;
                  }
                }
              }
              // check default value
              if (value === undefined) {
                value = getPropDefaultValue(vm, prop, key);
                // since the default value is a fresh copy,
                // make sure to observe it.
                var prevShouldObserve = shouldObserve;
                toggleObserving(true);
                observe(value);
                toggleObserving(prevShouldObserve);
              }
              {
                assertProp(prop, key, value, vm, absent);
              }
              return value
            }

            /**
             * Get the default value of a prop.
             */
            function getPropDefaultValue (vm, prop, key) {
              // no default, return undefined
              if (!hasOwn(prop, 'default')) {
                return undefined
              }
              var def = prop.default;
              // warn against non-factory defaults for Object & Array
              if ( isObject(def)) {
                warn(
                  'Invalid default value for prop "' + key + '": ' +
                  'Props with type Object/Array must use a factory function ' +
                  'to return the default value.',
                  vm
                );
              }
              // the raw prop value was also undefined from previous render,
              // return previous default value to avoid unnecessary watcher trigger
              if (vm && vm.$options.propsData &&
                vm.$options.propsData[key] === undefined &&
                vm._props[key] !== undefined
              ) {
                return vm._props[key]
              }
              // call factory function for non-Function types
              // a value is Function if its prototype is function even across different execution context
              return typeof def === 'function' && getType(prop.type) !== 'Function'
                ? def.call(vm)
                : def
            }

            /**
             * Assert whether a prop is valid.
             */
            function assertProp (
              prop,
              name,
              value,
              vm,
              absent
            ) {
              if (prop.required && absent) {
                warn(
                  'Missing required prop: "' + name + '"',
                  vm
                );
                return
              }
              if (value == null && !prop.required) {
                return
              }
              var type = prop.type;
              var valid = !type || type === true;
              var expectedTypes = [];
              if (type) {
                if (!Array.isArray(type)) {
                  type = [type];
                }
                for (var i = 0; i < type.length && !valid; i++) {
                  var assertedType = assertType(value, type[i]);
                  expectedTypes.push(assertedType.expectedType || '');
                  valid = assertedType.valid;
                }
              }

              if (!valid) {
                warn(
                  getInvalidTypeMessage(name, value, expectedTypes),
                  vm
                );
                return
              }
              var validator = prop.validator;
              if (validator) {
                if (!validator(value)) {
                  warn(
                    'Invalid prop: custom validator check failed for prop "' + name + '".',
                    vm
                  );
                }
              }
            }

            var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

            function assertType (value, type) {
              var valid;
              var expectedType = getType(type);
              if (simpleCheckRE.test(expectedType)) {
                var t = typeof value;
                valid = t === expectedType.toLowerCase();
                // for primitive wrapper objects
                if (!valid && t === 'object') {
                  valid = value instanceof type;
                }
              } else if (expectedType === 'Object') {
                valid = isPlainObject(value);
              } else if (expectedType === 'Array') {
                valid = Array.isArray(value);
              } else {
                valid = value instanceof type;
              }
              return {
                valid: valid,
                expectedType: expectedType
              }
            }

            /**
             * Use function string name to check built-in types,
             * because a simple equality check will fail when running
             * across different vms / iframes.
             */
            function getType (fn) {
              var match = fn && fn.toString().match(/^\s*function (\w+)/);
              return match ? match[1] : ''
            }

            function isSameType (a, b) {
              return getType(a) === getType(b)
            }

            function getTypeIndex (type, expectedTypes) {
              if (!Array.isArray(expectedTypes)) {
                return isSameType(expectedTypes, type) ? 0 : -1
              }
              for (var i = 0, len = expectedTypes.length; i < len; i++) {
                if (isSameType(expectedTypes[i], type)) {
                  return i
                }
              }
              return -1
            }

            function getInvalidTypeMessage (name, value, expectedTypes) {
              var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
                " Expected " + (expectedTypes.map(capitalize).join(', '));
              var expectedType = expectedTypes[0];
              var receivedType = toRawType(value);
              var expectedValue = styleValue(value, expectedType);
              var receivedValue = styleValue(value, receivedType);
              // check if we need to specify expected value
              if (expectedTypes.length === 1 &&
                  isExplicable(expectedType) &&
                  !isBoolean(expectedType, receivedType)) {
                message += " with value " + expectedValue;
              }
              message += ", got " + receivedType + " ";
              // check if we need to specify received value
              if (isExplicable(receivedType)) {
                message += "with value " + receivedValue + ".";
              }
              return message
            }

            function styleValue (value, type) {
              if (type === 'String') {
                return ("\"" + value + "\"")
              } else if (type === 'Number') {
                return ("" + (Number(value)))
              } else {
                return ("" + value)
              }
            }

            function isExplicable (value) {
              var explicitTypes = ['string', 'number', 'boolean'];
              return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })
            }

            function isBoolean () {
              var arguments$1 = arguments;

              var args = [], len = arguments.length;
              while ( len-- ) { args[ len ] = arguments$1[ len ]; }

              return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
            }

            /*  */

            function handleError (err, vm, info) {
              // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
              // See: https://github.com/vuejs/vuex/issues/1505
              pushTarget();
              try {
                if (vm) {
                  var cur = vm;
                  while ((cur = cur.$parent)) {
                    var hooks = cur.$options.errorCaptured;
                    if (hooks) {
                      for (var i = 0; i < hooks.length; i++) {
                        try {
                          var capture = hooks[i].call(cur, err, vm, info) === false;
                          if (capture) { return }
                        } catch (e) {
                          globalHandleError(e, cur, 'errorCaptured hook');
                        }
                      }
                    }
                  }
                }
                globalHandleError(err, vm, info);
              } finally {
                popTarget();
              }
            }

            function invokeWithErrorHandling (
              handler,
              context,
              args,
              vm,
              info
            ) {
              var res;
              try {
                res = args ? handler.apply(context, args) : handler.call(context);
                if (res && !res._isVue && isPromise(res) && !res._handled) {
                  res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
                  // issue #9511
                  // avoid catch triggering multiple times when nested calls
                  res._handled = true;
                }
              } catch (e) {
                handleError(e, vm, info);
              }
              return res
            }

            function globalHandleError (err, vm, info) {
              if (config$1.errorHandler) {
                try {
                  return config$1.errorHandler.call(null, err, vm, info)
                } catch (e) {
                  // if the user intentionally throws the original error in the handler,
                  // do not log it twice
                  if (e !== err) {
                    logError(e, null, 'config.errorHandler');
                  }
                }
              }
              logError(err, vm, info);
            }

            function logError (err, vm, info) {
              {
                warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
              }
              /* istanbul ignore else */
              if ((inBrowser || inWeex) && typeof console !== 'undefined') {
                console.error(err);
              } else {
                throw err
              }
            }

            /*  */

            var isUsingMicroTask = false;

            var callbacks = [];
            var pending = false;

            function flushCallbacks () {
              pending = false;
              var copies = callbacks.slice(0);
              callbacks.length = 0;
              for (var i = 0; i < copies.length; i++) {
                copies[i]();
              }
            }

            // Here we have async deferring wrappers using microtasks.
            // In 2.5 we used (macro) tasks (in combination with microtasks).
            // However, it has subtle problems when state is changed right before repaint
            // (e.g. #6813, out-in transitions).
            // Also, using (macro) tasks in event handler would cause some weird behaviors
            // that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
            // So we now use microtasks everywhere, again.
            // A major drawback of this tradeoff is that there are some scenarios
            // where microtasks have too high a priority and fire in between supposedly
            // sequential events (e.g. #4521, #6690, which have workarounds)
            // or even between bubbling of the same event (#6566).
            var timerFunc;

            // The nextTick behavior leverages the microtask queue, which can be accessed
            // via either native Promise.then or MutationObserver.
            // MutationObserver has wider support, however it is seriously bugged in
            // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
            // completely stops working after triggering a few times... so, if native
            // Promise is available, we will use it:
            /* istanbul ignore next, $flow-disable-line */
            if (typeof Promise !== 'undefined' && isNative(Promise)) {
              var p = Promise.resolve();
              timerFunc = function () {
                p.then(flushCallbacks);
                // In problematic UIWebViews, Promise.then doesn't completely break, but
                // it can get stuck in a weird state where callbacks are pushed into the
                // microtask queue but the queue isn't being flushed, until the browser
                // needs to do some other work, e.g. handle a timer. Therefore we can
                // "force" the microtask queue to be flushed by adding an empty timer.
                if (isIOS) { setTimeout(noop$1); }
              };
              isUsingMicroTask = true;
            } else if (!isIE && typeof MutationObserver !== 'undefined' && (
              isNative(MutationObserver) ||
              // PhantomJS and iOS 7.x
              MutationObserver.toString() === '[object MutationObserverConstructor]'
            )) {
              // Use MutationObserver where native Promise is not available,
              // e.g. PhantomJS, iOS7, Android 4.4
              // (#6466 MutationObserver is unreliable in IE11)
              var counter = 1;
              var observer = new MutationObserver(flushCallbacks);
              var textNode = document.createTextNode(String(counter));
              observer.observe(textNode, {
                characterData: true
              });
              timerFunc = function () {
                counter = (counter + 1) % 2;
                textNode.data = String(counter);
              };
              isUsingMicroTask = true;
            } else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
              // Fallback to setImmediate.
              // Techinically it leverages the (macro) task queue,
              // but it is still a better choice than setTimeout.
              timerFunc = function () {
                setImmediate(flushCallbacks);
              };
            } else {
              // Fallback to setTimeout.
              timerFunc = function () {
                setTimeout(flushCallbacks, 0);
              };
            }

            function nextTick$1 (cb, ctx) {
              var _resolve;
              callbacks.push(function () {
                if (cb) {
                  try {
                    cb.call(ctx);
                  } catch (e) {
                    handleError(e, ctx, 'nextTick');
                  }
                } else if (_resolve) {
                  _resolve(ctx);
                }
              });
              if (!pending) {
                pending = true;
                timerFunc();
              }
              // $flow-disable-line
              if (!cb && typeof Promise !== 'undefined') {
                return new Promise(function (resolve) {
                  _resolve = resolve;
                })
              }
            }

            /*  */

            /* not type checking this file because flow doesn't play well with Proxy */

            var initProxy;

            {
              var allowedGlobals = makeMap(
                'Infinity,undefined,NaN,isFinite,isNaN,' +
                'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
                'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
                'require' // for Webpack/Browserify
              );

              var warnNonPresent = function (target, key) {
                warn(
                  "Property or method \"" + key + "\" is not defined on the instance but " +
                  'referenced during render. Make sure that this property is reactive, ' +
                  'either in the data option, or for class-based components, by ' +
                  'initializing the property. ' +
                  'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
                  target
                );
              };

              var warnReservedPrefix = function (target, key) {
                warn(
                  "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
                  'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
                  'prevent conflicts with Vue internals' +
                  'See: https://vuejs.org/v2/api/#data',
                  target
                );
              };

              var hasProxy =
                typeof Proxy !== 'undefined' && isNative(Proxy);

              if (hasProxy) {
                var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
                config$1.keyCodes = new Proxy(config$1.keyCodes, {
                  set: function set (target, key, value) {
                    if (isBuiltInModifier(key)) {
                      warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
                      return false
                    } else {
                      target[key] = value;
                      return true
                    }
                  }
                });
              }

              var hasHandler = {
                has: function has (target, key) {
                  var has = key in target;
                  var isAllowed = allowedGlobals(key) ||
                    (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
                  if (!has && !isAllowed) {
                    if (key in target.$data) { warnReservedPrefix(target, key); }
                    else { warnNonPresent(target, key); }
                  }
                  return has || !isAllowed
                }
              };

              var getHandler = {
                get: function get (target, key) {
                  if (typeof key === 'string' && !(key in target)) {
                    if (key in target.$data) { warnReservedPrefix(target, key); }
                    else { warnNonPresent(target, key); }
                  }
                  return target[key]
                }
              };

              initProxy = function initProxy (vm) {
                if (hasProxy) {
                  // determine which proxy handler to use
                  var options = vm.$options;
                  var handlers = options.render && options.render._withStripped
                    ? getHandler
                    : hasHandler;
                  vm._renderProxy = new Proxy(vm, handlers);
                } else {
                  vm._renderProxy = vm;
                }
              };
            }

            /*  */

            var seenObjects = new _Set();

            /**
             * Recursively traverse an object to evoke all converted
             * getters, so that every nested property inside the object
             * is collected as a "deep" dependency.
             */
            function traverse (val) {
              _traverse(val, seenObjects);
              seenObjects.clear();
            }

            function _traverse (val, seen) {
              var i, keys;
              var isA = Array.isArray(val);
              if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
                return
              }
              if (val.__ob__) {
                var depId = val.__ob__.dep.id;
                if (seen.has(depId)) {
                  return
                }
                seen.add(depId);
              }
              if (isA) {
                i = val.length;
                while (i--) { _traverse(val[i], seen); }
              } else {
                keys = Object.keys(val);
                i = keys.length;
                while (i--) { _traverse(val[keys[i]], seen); }
              }
            }

            var mark;
            var measure;

            {
              var perf = inBrowser && window.performance;
              /* istanbul ignore if */
              if (
                perf &&
                perf.mark &&
                perf.measure &&
                perf.clearMarks &&
                perf.clearMeasures
              ) {
                mark = function (tag) { return perf.mark(tag); };
                measure = function (name, startTag, endTag) {
                  perf.measure(name, startTag, endTag);
                  perf.clearMarks(startTag);
                  perf.clearMarks(endTag);
                  // perf.clearMeasures(name)
                };
              }
            }

            /*  */

            var normalizeEvent = cached(function (name) {
              var passive = name.charAt(0) === '&';
              name = passive ? name.slice(1) : name;
              var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
              name = once$$1 ? name.slice(1) : name;
              var capture = name.charAt(0) === '!';
              name = capture ? name.slice(1) : name;
              return {
                name: name,
                once: once$$1,
                capture: capture,
                passive: passive
              }
            });

            function createFnInvoker (fns, vm) {
              function invoker () {
                var arguments$1 = arguments;

                var fns = invoker.fns;
                if (Array.isArray(fns)) {
                  var cloned = fns.slice();
                  for (var i = 0; i < cloned.length; i++) {
                    invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
                  }
                } else {
                  // return handler return value for single handlers
                  return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
                }
              }
              invoker.fns = fns;
              return invoker
            }

            function updateListeners (
              on,
              oldOn,
              add,
              remove$$1,
              createOnceHandler,
              vm
            ) {
              var name, def$$1, cur, old, event;
              for (name in on) {
                def$$1 = cur = on[name];
                old = oldOn[name];
                event = normalizeEvent(name);
                if (isUndef(cur)) {
                   warn(
                    "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
                    vm
                  );
                } else if (isUndef(old)) {
                  if (isUndef(cur.fns)) {
                    cur = on[name] = createFnInvoker(cur, vm);
                  }
                  if (isTrue(event.once)) {
                    cur = on[name] = createOnceHandler(event.name, cur, event.capture);
                  }
                  add(event.name, cur, event.capture, event.passive, event.params);
                } else if (cur !== old) {
                  old.fns = cur;
                  on[name] = old;
                }
              }
              for (name in oldOn) {
                if (isUndef(on[name])) {
                  event = normalizeEvent(name);
                  remove$$1(event.name, oldOn[name], event.capture);
                }
              }
            }

            /*  */

            function mergeVNodeHook (def, hookKey, hook) {
              if (def instanceof VNode) {
                def = def.data.hook || (def.data.hook = {});
              }
              var invoker;
              var oldHook = def[hookKey];

              function wrappedHook () {
                hook.apply(this, arguments);
                // important: remove merged hook to ensure it's called only once
                // and prevent memory leak
                remove(invoker.fns, wrappedHook);
              }

              if (isUndef(oldHook)) {
                // no existing hook
                invoker = createFnInvoker([wrappedHook]);
              } else {
                /* istanbul ignore if */
                if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
                  // already a merged invoker
                  invoker = oldHook;
                  invoker.fns.push(wrappedHook);
                } else {
                  // existing plain hook
                  invoker = createFnInvoker([oldHook, wrappedHook]);
                }
              }

              invoker.merged = true;
              def[hookKey] = invoker;
            }

            /*  */

            function extractPropsFromVNodeData (
              data,
              Ctor,
              tag
            ) {
              // we are only extracting raw values here.
              // validation and default values are handled in the child
              // component itself.
              var propOptions = Ctor.options.props;
              if (isUndef(propOptions)) {
                return
              }
              var res = {};
              var attrs = data.attrs;
              var props = data.props;
              if (isDef(attrs) || isDef(props)) {
                for (var key in propOptions) {
                  var altKey = hyphenate(key);
                  {
                    var keyInLowerCase = key.toLowerCase();
                    if (
                      key !== keyInLowerCase &&
                      attrs && hasOwn(attrs, keyInLowerCase)
                    ) {
                      tip(
                        "Prop \"" + keyInLowerCase + "\" is passed to component " +
                        (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
                        " \"" + key + "\". " +
                        "Note that HTML attributes are case-insensitive and camelCased " +
                        "props need to use their kebab-case equivalents when using in-DOM " +
                        "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
                      );
                    }
                  }
                  checkProp(res, props, key, altKey, true) ||
                  checkProp(res, attrs, key, altKey, false);
                }
              }
              return res
            }

            function checkProp (
              res,
              hash,
              key,
              altKey,
              preserve
            ) {
              if (isDef(hash)) {
                if (hasOwn(hash, key)) {
                  res[key] = hash[key];
                  if (!preserve) {
                    delete hash[key];
                  }
                  return true
                } else if (hasOwn(hash, altKey)) {
                  res[key] = hash[altKey];
                  if (!preserve) {
                    delete hash[altKey];
                  }
                  return true
                }
              }
              return false
            }

            /*  */

            // The template compiler attempts to minimize the need for normalization by
            // statically analyzing the template at compile time.
            //
            // For plain HTML markup, normalization can be completely skipped because the
            // generated render function is guaranteed to return Array<VNode>. There are
            // two cases where extra normalization is needed:

            // 1. When the children contains components - because a functional component
            // may return an Array instead of a single root. In this case, just a simple
            // normalization is needed - if any child is an Array, we flatten the whole
            // thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
            // because functional components already normalize their own children.
            function simpleNormalizeChildren (children) {
              for (var i = 0; i < children.length; i++) {
                if (Array.isArray(children[i])) {
                  return Array.prototype.concat.apply([], children)
                }
              }
              return children
            }

            // 2. When the children contains constructs that always generated nested Arrays,
            // e.g. <template>, <slot>, v-for, or when the children is provided by user
            // with hand-written render functions / JSX. In such cases a full normalization
            // is needed to cater to all possible types of children values.
            function normalizeChildren (children) {
              return isPrimitive(children)
                ? [createTextVNode(children)]
                : Array.isArray(children)
                  ? normalizeArrayChildren(children)
                  : undefined
            }

            function isTextNode (node) {
              return isDef(node) && isDef(node.text) && isFalse(node.isComment)
            }

            function normalizeArrayChildren (children, nestedIndex) {
              var res = [];
              var i, c, lastIndex, last;
              for (i = 0; i < children.length; i++) {
                c = children[i];
                if (isUndef(c) || typeof c === 'boolean') { continue }
                lastIndex = res.length - 1;
                last = res[lastIndex];
                //  nested
                if (Array.isArray(c)) {
                  if (c.length > 0) {
                    c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
                    // merge adjacent text nodes
                    if (isTextNode(c[0]) && isTextNode(last)) {
                      res[lastIndex] = createTextVNode(last.text + (c[0]).text);
                      c.shift();
                    }
                    res.push.apply(res, c);
                  }
                } else if (isPrimitive(c)) {
                  if (isTextNode(last)) {
                    // merge adjacent text nodes
                    // this is necessary for SSR hydration because text nodes are
                    // essentially merged when rendered to HTML strings
                    res[lastIndex] = createTextVNode(last.text + c);
                  } else if (c !== '') {
                    // convert primitive to vnode
                    res.push(createTextVNode(c));
                  }
                } else {
                  if (isTextNode(c) && isTextNode(last)) {
                    // merge adjacent text nodes
                    res[lastIndex] = createTextVNode(last.text + c.text);
                  } else {
                    // default key for nested array children (likely generated by v-for)
                    if (isTrue(children._isVList) &&
                      isDef(c.tag) &&
                      isUndef(c.key) &&
                      isDef(nestedIndex)) {
                      c.key = "__vlist" + nestedIndex + "_" + i + "__";
                    }
                    res.push(c);
                  }
                }
              }
              return res
            }

            /*  */

            function initProvide (vm) {
              var provide = vm.$options.provide;
              if (provide) {
                vm._provided = typeof provide === 'function'
                  ? provide.call(vm)
                  : provide;
              }
            }

            function initInjections (vm) {
              var result = resolveInject(vm.$options.inject, vm);
              if (result) {
                toggleObserving(false);
                Object.keys(result).forEach(function (key) {
                  /* istanbul ignore else */
                  {
                    defineReactive$$1(vm, key, result[key], function () {
                      warn(
                        "Avoid mutating an injected value directly since the changes will be " +
                        "overwritten whenever the provided component re-renders. " +
                        "injection being mutated: \"" + key + "\"",
                        vm
                      );
                    });
                  }
                });
                toggleObserving(true);
              }
            }

            function resolveInject (inject, vm) {
              if (inject) {
                // inject is :any because flow is not smart enough to figure out cached
                var result = Object.create(null);
                var keys = hasSymbol
                  ? Reflect.ownKeys(inject)
                  : Object.keys(inject);

                for (var i = 0; i < keys.length; i++) {
                  var key = keys[i];
                  // #6574 in case the inject object is observed...
                  if (key === '__ob__') { continue }
                  var provideKey = inject[key].from;
                  var source = vm;
                  while (source) {
                    if (source._provided && hasOwn(source._provided, provideKey)) {
                      result[key] = source._provided[provideKey];
                      break
                    }
                    source = source.$parent;
                  }
                  if (!source) {
                    if ('default' in inject[key]) {
                      var provideDefault = inject[key].default;
                      result[key] = typeof provideDefault === 'function'
                        ? provideDefault.call(vm)
                        : provideDefault;
                    } else {
                      warn(("Injection \"" + key + "\" not found"), vm);
                    }
                  }
                }
                return result
              }
            }

            /*  */



            /**
             * Runtime helper for resolving raw children VNodes into a slot object.
             */
            function resolveSlots (
              children,
              context
            ) {
              if (!children || !children.length) {
                return {}
              }
              var slots = {};
              for (var i = 0, l = children.length; i < l; i++) {
                var child = children[i];
                var data = child.data;
                // remove slot attribute if the node is resolved as a Vue slot node
                if (data && data.attrs && data.attrs.slot) {
                  delete data.attrs.slot;
                }
                // named slots should only be respected if the vnode was rendered in the
                // same context.
                if ((child.context === context || child.fnContext === context) &&
                  data && data.slot != null
                ) {
                  var name = data.slot;
                  var slot = (slots[name] || (slots[name] = []));
                  if (child.tag === 'template') {
                    slot.push.apply(slot, child.children || []);
                  } else {
                    slot.push(child);
                  }
                } else {
                  (slots.default || (slots.default = [])).push(child);
                }
              }
              // ignore slots that contains only whitespace
              for (var name$1 in slots) {
                if (slots[name$1].every(isWhitespace)) {
                  delete slots[name$1];
                }
              }
              return slots
            }

            function isWhitespace (node) {
              return (node.isComment && !node.asyncFactory) || node.text === ' '
            }

            /*  */

            function normalizeScopedSlots (
              slots,
              normalSlots,
              prevSlots
            ) {
              var res;
              var hasNormalSlots = Object.keys(normalSlots).length > 0;
              var isStable = slots ? !!slots.$stable : !hasNormalSlots;
              var key = slots && slots.$key;
              if (!slots) {
                res = {};
              } else if (slots._normalized) {
                // fast path 1: child component re-render only, parent did not change
                return slots._normalized
              } else if (
                isStable &&
                prevSlots &&
                prevSlots !== emptyObject &&
                key === prevSlots.$key &&
                !hasNormalSlots &&
                !prevSlots.$hasNormal
              ) {
                // fast path 2: stable scoped slots w/ no normal slots to proxy,
                // only need to normalize once
                return prevSlots
              } else {
                res = {};
                for (var key$1 in slots) {
                  if (slots[key$1] && key$1[0] !== '$') {
                    res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
                  }
                }
              }
              // expose normal slots on scopedSlots
              for (var key$2 in normalSlots) {
                if (!(key$2 in res)) {
                  res[key$2] = proxyNormalSlot(normalSlots, key$2);
                }
              }
              // avoriaz seems to mock a non-extensible $scopedSlots object
              // and when that is passed down this would cause an error
              if (slots && Object.isExtensible(slots)) {
                (slots)._normalized = res;
              }
              def(res, '$stable', isStable);
              def(res, '$key', key);
              def(res, '$hasNormal', hasNormalSlots);
              return res
            }

            function normalizeScopedSlot(normalSlots, key, fn) {
              var normalized = function () {
                var res = arguments.length ? fn.apply(null, arguments) : fn({});
                res = res && typeof res === 'object' && !Array.isArray(res)
                  ? [res] // single vnode
                  : normalizeChildren(res);
                return res && (
                  res.length === 0 ||
                  (res.length === 1 && res[0].isComment) // #9658
                ) ? undefined
                  : res
              };
              // this is a slot using the new v-slot syntax without scope. although it is
              // compiled as a scoped slot, render fn users would expect it to be present
              // on this.$slots because the usage is semantically a normal slot.
              if (fn.proxy) {
                Object.defineProperty(normalSlots, key, {
                  get: normalized,
                  enumerable: true,
                  configurable: true
                });
              }
              return normalized
            }

            function proxyNormalSlot(slots, key) {
              return function () { return slots[key]; }
            }

            /*  */

            /**
             * Runtime helper for rendering v-for lists.
             */
            function renderList (
              val,
              render
            ) {
              var ret, i, l, keys, key;
              if (Array.isArray(val) || typeof val === 'string') {
                ret = new Array(val.length);
                for (i = 0, l = val.length; i < l; i++) {
                  ret[i] = render(val[i], i);
                }
              } else if (typeof val === 'number') {
                ret = new Array(val);
                for (i = 0; i < val; i++) {
                  ret[i] = render(i + 1, i);
                }
              } else if (isObject(val)) {
                if (hasSymbol && val[Symbol.iterator]) {
                  ret = [];
                  var iterator = val[Symbol.iterator]();
                  var result = iterator.next();
                  while (!result.done) {
                    ret.push(render(result.value, ret.length));
                    result = iterator.next();
                  }
                } else {
                  keys = Object.keys(val);
                  ret = new Array(keys.length);
                  for (i = 0, l = keys.length; i < l; i++) {
                    key = keys[i];
                    ret[i] = render(val[key], key, i);
                  }
                }
              }
              if (!isDef(ret)) {
                ret = [];
              }
              (ret)._isVList = true;
              return ret
            }

            /*  */

            /**
             * Runtime helper for rendering <slot>
             */
            function renderSlot (
              name,
              fallback,
              props,
              bindObject
            ) {
              var scopedSlotFn = this.$scopedSlots[name];
              var nodes;
              if (scopedSlotFn) { // scoped slot
                props = props || {};
                if (bindObject) {
                  if ( !isObject(bindObject)) {
                    warn(
                      'slot v-bind without argument expects an Object',
                      this
                    );
                  }
                  props = extend(extend({}, bindObject), props);
                }
                nodes = scopedSlotFn(props) || fallback;
              } else {
                nodes = this.$slots[name] || fallback;
              }

              var target = props && props.slot;
              if (target) {
                return this.$createElement('template', { slot: target }, nodes)
              } else {
                return nodes
              }
            }

            /*  */

            /**
             * Runtime helper for resolving filters
             */
            function resolveFilter (id) {
              return resolveAsset(this.$options, 'filters', id, true) || identity
            }

            /*  */

            function isKeyNotMatch (expect, actual) {
              if (Array.isArray(expect)) {
                return expect.indexOf(actual) === -1
              } else {
                return expect !== actual
              }
            }

            /**
             * Runtime helper for checking keyCodes from config.
             * exposed as Vue.prototype._k
             * passing in eventKeyName as last argument separately for backwards compat
             */
            function checkKeyCodes (
              eventKeyCode,
              key,
              builtInKeyCode,
              eventKeyName,
              builtInKeyName
            ) {
              var mappedKeyCode = config$1.keyCodes[key] || builtInKeyCode;
              if (builtInKeyName && eventKeyName && !config$1.keyCodes[key]) {
                return isKeyNotMatch(builtInKeyName, eventKeyName)
              } else if (mappedKeyCode) {
                return isKeyNotMatch(mappedKeyCode, eventKeyCode)
              } else if (eventKeyName) {
                return hyphenate(eventKeyName) !== key
              }
            }

            /*  */

            /**
             * Runtime helper for merging v-bind="object" into a VNode's data.
             */
            function bindObjectProps (
              data,
              tag,
              value,
              asProp,
              isSync
            ) {
              if (value) {
                if (!isObject(value)) {
                   warn(
                    'v-bind without argument expects an Object or Array value',
                    this
                  );
                } else {
                  if (Array.isArray(value)) {
                    value = toObject(value);
                  }
                  var hash;
                  var loop = function ( key ) {
                    if (
                      key === 'class' ||
                      key === 'style' ||
                      isReservedAttribute(key)
                    ) {
                      hash = data;
                    } else {
                      var type = data.attrs && data.attrs.type;
                      hash = asProp || config$1.mustUseProp(tag, type, key)
                        ? data.domProps || (data.domProps = {})
                        : data.attrs || (data.attrs = {});
                    }
                    var camelizedKey = camelize(key);
                    var hyphenatedKey = hyphenate(key);
                    if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
                      hash[key] = value[key];

                      if (isSync) {
                        var on = data.on || (data.on = {});
                        on[("update:" + key)] = function ($event) {
                          value[key] = $event;
                        };
                      }
                    }
                  };

                  for (var key in value) { loop( key ); }
                }
              }
              return data
            }

            /*  */

            /**
             * Runtime helper for rendering static trees.
             */
            function renderStatic (
              index,
              isInFor
            ) {
              var cached = this._staticTrees || (this._staticTrees = []);
              var tree = cached[index];
              // if has already-rendered static tree and not inside v-for,
              // we can reuse the same tree.
              if (tree && !isInFor) {
                return tree
              }
              // otherwise, render a fresh tree.
              tree = cached[index] = this.$options.staticRenderFns[index].call(
                this._renderProxy,
                null,
                this // for render fns generated for functional component templates
              );
              markStatic(tree, ("__static__" + index), false);
              return tree
            }

            /**
             * Runtime helper for v-once.
             * Effectively it means marking the node as static with a unique key.
             */
            function markOnce (
              tree,
              index,
              key
            ) {
              markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
              return tree
            }

            function markStatic (
              tree,
              key,
              isOnce
            ) {
              if (Array.isArray(tree)) {
                for (var i = 0; i < tree.length; i++) {
                  if (tree[i] && typeof tree[i] !== 'string') {
                    markStaticNode(tree[i], (key + "_" + i), isOnce);
                  }
                }
              } else {
                markStaticNode(tree, key, isOnce);
              }
            }

            function markStaticNode (node, key, isOnce) {
              node.isStatic = true;
              node.key = key;
              node.isOnce = isOnce;
            }

            /*  */

            function bindObjectListeners (data, value) {
              if (value) {
                if (!isPlainObject(value)) {
                   warn(
                    'v-on without argument expects an Object value',
                    this
                  );
                } else {
                  var on = data.on = data.on ? extend({}, data.on) : {};
                  for (var key in value) {
                    var existing = on[key];
                    var ours = value[key];
                    on[key] = existing ? [].concat(existing, ours) : ours;
                  }
                }
              }
              return data
            }

            /*  */

            function resolveScopedSlots (
              fns, // see flow/vnode
              res,
              // the following are added in 2.6
              hasDynamicKeys,
              contentHashKey
            ) {
              res = res || { $stable: !hasDynamicKeys };
              for (var i = 0; i < fns.length; i++) {
                var slot = fns[i];
                if (Array.isArray(slot)) {
                  resolveScopedSlots(slot, res, hasDynamicKeys);
                } else if (slot) {
                  // marker for reverse proxying v-slot without scope on this.$slots
                  if (slot.proxy) {
                    slot.fn.proxy = true;
                  }
                  res[slot.key] = slot.fn;
                }
              }
              if (contentHashKey) {
                (res).$key = contentHashKey;
              }
              return res
            }

            /*  */

            function bindDynamicKeys (baseObj, values) {
              for (var i = 0; i < values.length; i += 2) {
                var key = values[i];
                if (typeof key === 'string' && key) {
                  baseObj[values[i]] = values[i + 1];
                } else if ( key !== '' && key !== null) {
                  // null is a speical value for explicitly removing a binding
                  warn(
                    ("Invalid value for dynamic directive argument (expected string or null): " + key),
                    this
                  );
                }
              }
              return baseObj
            }

            // helper to dynamically append modifier runtime markers to event names.
            // ensure only append when value is already string, otherwise it will be cast
            // to string and cause the type check to miss.
            function prependModifier (value, symbol) {
              return typeof value === 'string' ? symbol + value : value
            }

            /*  */

            function installRenderHelpers (target) {
              target._o = markOnce;
              target._n = toNumber;
              target._s = toString;
              target._l = renderList;
              target._t = renderSlot;
              target._q = looseEqual;
              target._i = looseIndexOf;
              target._m = renderStatic;
              target._f = resolveFilter;
              target._k = checkKeyCodes;
              target._b = bindObjectProps;
              target._v = createTextVNode;
              target._e = createEmptyVNode;
              target._u = resolveScopedSlots;
              target._g = bindObjectListeners;
              target._d = bindDynamicKeys;
              target._p = prependModifier;
            }

            /*  */

            function FunctionalRenderContext (
              data,
              props,
              children,
              parent,
              Ctor
            ) {
              var this$1 = this;

              var options = Ctor.options;
              // ensure the createElement function in functional components
              // gets a unique context - this is necessary for correct named slot check
              var contextVm;
              if (hasOwn(parent, '_uid')) {
                contextVm = Object.create(parent);
                // $flow-disable-line
                contextVm._original = parent;
              } else {
                // the context vm passed in is a functional context as well.
                // in this case we want to make sure we are able to get a hold to the
                // real context instance.
                contextVm = parent;
                // $flow-disable-line
                parent = parent._original;
              }
              var isCompiled = isTrue(options._compiled);
              var needNormalization = !isCompiled;

              this.data = data;
              this.props = props;
              this.children = children;
              this.parent = parent;
              this.listeners = data.on || emptyObject;
              this.injections = resolveInject(options.inject, parent);
              this.slots = function () {
                if (!this$1.$slots) {
                  normalizeScopedSlots(
                    data.scopedSlots,
                    this$1.$slots = resolveSlots(children, parent)
                  );
                }
                return this$1.$slots
              };

              Object.defineProperty(this, 'scopedSlots', ({
                enumerable: true,
                get: function get () {
                  return normalizeScopedSlots(data.scopedSlots, this.slots())
                }
              }));

              // support for compiled functional template
              if (isCompiled) {
                // exposing $options for renderStatic()
                this.$options = options;
                // pre-resolve slots for renderSlot()
                this.$slots = this.slots();
                this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
              }

              if (options._scopeId) {
                this._c = function (a, b, c, d) {
                  var vnode = createElement(contextVm, a, b, c, d, needNormalization);
                  if (vnode && !Array.isArray(vnode)) {
                    vnode.fnScopeId = options._scopeId;
                    vnode.fnContext = parent;
                  }
                  return vnode
                };
              } else {
                this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
              }
            }

            installRenderHelpers(FunctionalRenderContext.prototype);

            function createFunctionalComponent (
              Ctor,
              propsData,
              data,
              contextVm,
              children
            ) {
              var options = Ctor.options;
              var props = {};
              var propOptions = options.props;
              if (isDef(propOptions)) {
                for (var key in propOptions) {
                  props[key] = validateProp(key, propOptions, propsData || emptyObject);
                }
              } else {
                if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
                if (isDef(data.props)) { mergeProps(props, data.props); }
              }

              var renderContext = new FunctionalRenderContext(
                data,
                props,
                children,
                contextVm,
                Ctor
              );

              var vnode = options.render.call(null, renderContext._c, renderContext);

              if (vnode instanceof VNode) {
                return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
              } else if (Array.isArray(vnode)) {
                var vnodes = normalizeChildren(vnode) || [];
                var res = new Array(vnodes.length);
                for (var i = 0; i < vnodes.length; i++) {
                  res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
                }
                return res
              }
            }

            function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
              // #7817 clone node before setting fnContext, otherwise if the node is reused
              // (e.g. it was from a cached normal slot) the fnContext causes named slots
              // that should not be matched to match.
              var clone = cloneVNode(vnode);
              clone.fnContext = contextVm;
              clone.fnOptions = options;
              {
                (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
              }
              if (data.slot) {
                (clone.data || (clone.data = {})).slot = data.slot;
              }
              return clone
            }

            function mergeProps (to, from) {
              for (var key in from) {
                to[camelize(key)] = from[key];
              }
            }

            /*  */

            /*  */

            /*  */

            /*  */

            // inline hooks to be invoked on component VNodes during patch
            var componentVNodeHooks = {
              init: function init (vnode, hydrating) {
                if (
                  vnode.componentInstance &&
                  !vnode.componentInstance._isDestroyed &&
                  vnode.data.keepAlive
                ) {
                  // kept-alive components, treat as a patch
                  var mountedNode = vnode; // work around flow
                  componentVNodeHooks.prepatch(mountedNode, mountedNode);
                } else {
                  var child = vnode.componentInstance = createComponentInstanceForVnode(
                    vnode,
                    activeInstance
                  );
                  child.$mount(hydrating ? vnode.elm : undefined, hydrating);
                }
              },

              prepatch: function prepatch (oldVnode, vnode) {
                var options = vnode.componentOptions;
                var child = vnode.componentInstance = oldVnode.componentInstance;
                updateChildComponent(
                  child,
                  options.propsData, // updated props
                  options.listeners, // updated listeners
                  vnode, // new parent vnode
                  options.children // new children
                );
              },

              insert: function insert (vnode) {
                var context = vnode.context;
                var componentInstance = vnode.componentInstance;
                if (!componentInstance._isMounted) {
                  componentInstance._isMounted = true;
                  callHook(componentInstance, 'mounted');
                }
                if (vnode.data.keepAlive) {
                  if (context._isMounted) {
                    // vue-router#1212
                    // During updates, a kept-alive component's child components may
                    // change, so directly walking the tree here may call activated hooks
                    // on incorrect children. Instead we push them into a queue which will
                    // be processed after the whole patch process ended.
                    queueActivatedComponent(componentInstance);
                  } else {
                    activateChildComponent(componentInstance, true /* direct */);
                  }
                }
              },

              destroy: function destroy (vnode) {
                var componentInstance = vnode.componentInstance;
                if (!componentInstance._isDestroyed) {
                  if (!vnode.data.keepAlive) {
                    componentInstance.$destroy();
                  } else {
                    deactivateChildComponent(componentInstance, true /* direct */);
                  }
                }
              }
            };

            var hooksToMerge = Object.keys(componentVNodeHooks);

            function createComponent (
              Ctor,
              data,
              context,
              children,
              tag
            ) {
              if (isUndef(Ctor)) {
                return
              }

              var baseCtor = context.$options._base;

              // plain options object: turn it into a constructor
              if (isObject(Ctor)) {
                Ctor = baseCtor.extend(Ctor);
              }

              // if at this stage it's not a constructor or an async component factory,
              // reject.
              if (typeof Ctor !== 'function') {
                {
                  warn(("Invalid Component definition: " + (String(Ctor))), context);
                }
                return
              }

              // async component
              var asyncFactory;
              if (isUndef(Ctor.cid)) {
                asyncFactory = Ctor;
                Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
                if (Ctor === undefined) {
                  // return a placeholder node for async component, which is rendered
                  // as a comment node but preserves all the raw information for the node.
                  // the information will be used for async server-rendering and hydration.
                  return createAsyncPlaceholder(
                    asyncFactory,
                    data,
                    context,
                    children,
                    tag
                  )
                }
              }

              data = data || {};

              // resolve constructor options in case global mixins are applied after
              // component constructor creation
              resolveConstructorOptions(Ctor);

              // transform component v-model data into props & events
              if (isDef(data.model)) {
                transformModel(Ctor.options, data);
              }

              // extract props
              var propsData = extractPropsFromVNodeData(data, Ctor, tag);

              // functional component
              if (isTrue(Ctor.options.functional)) {
                return createFunctionalComponent(Ctor, propsData, data, context, children)
              }

              // extract listeners, since these needs to be treated as
              // child component listeners instead of DOM listeners
              var listeners = data.on;
              // replace with listeners with .native modifier
              // so it gets processed during parent component patch.
              data.on = data.nativeOn;

              if (isTrue(Ctor.options.abstract)) {
                // abstract components do not keep anything
                // other than props & listeners & slot

                // work around flow
                var slot = data.slot;
                data = {};
                if (slot) {
                  data.slot = slot;
                }
              }

              // install component management hooks onto the placeholder node
              installComponentHooks(data);

              // return a placeholder vnode
              var name = Ctor.options.name || tag;
              var vnode = new VNode(
                ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
                data, undefined, undefined, undefined, context,
                { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
                asyncFactory
              );

              return vnode
            }

            function createComponentInstanceForVnode (
              vnode, // we know it's MountedComponentVNode but flow doesn't
              parent // activeInstance in lifecycle state
            ) {
              var options = {
                _isComponent: true,
                _parentVnode: vnode,
                parent: parent
              };
              // check inline-template render functions
              var inlineTemplate = vnode.data.inlineTemplate;
              if (isDef(inlineTemplate)) {
                options.render = inlineTemplate.render;
                options.staticRenderFns = inlineTemplate.staticRenderFns;
              }
              return new vnode.componentOptions.Ctor(options)
            }

            function installComponentHooks (data) {
              var hooks = data.hook || (data.hook = {});
              for (var i = 0; i < hooksToMerge.length; i++) {
                var key = hooksToMerge[i];
                var existing = hooks[key];
                var toMerge = componentVNodeHooks[key];
                if (existing !== toMerge && !(existing && existing._merged)) {
                  hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
                }
              }
            }

            function mergeHook$1 (f1, f2) {
              var merged = function (a, b) {
                // flow complains about extra args which is why we use any
                f1(a, b);
                f2(a, b);
              };
              merged._merged = true;
              return merged
            }

            // transform component v-model info (value and callback) into
            // prop and event handler respectively.
            function transformModel (options, data) {
              var prop = (options.model && options.model.prop) || 'value';
              var event = (options.model && options.model.event) || 'input'
              ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
              var on = data.on || (data.on = {});
              var existing = on[event];
              var callback = data.model.callback;
              if (isDef(existing)) {
                if (
                  Array.isArray(existing)
                    ? existing.indexOf(callback) === -1
                    : existing !== callback
                ) {
                  on[event] = [callback].concat(existing);
                }
              } else {
                on[event] = callback;
              }
            }

            /*  */

            var SIMPLE_NORMALIZE = 1;
            var ALWAYS_NORMALIZE = 2;

            // wrapper function for providing a more flexible interface
            // without getting yelled at by flow
            function createElement (
              context,
              tag,
              data,
              children,
              normalizationType,
              alwaysNormalize
            ) {
              if (Array.isArray(data) || isPrimitive(data)) {
                normalizationType = children;
                children = data;
                data = undefined;
              }
              if (isTrue(alwaysNormalize)) {
                normalizationType = ALWAYS_NORMALIZE;
              }
              return _createElement(context, tag, data, children, normalizationType)
            }

            function _createElement (
              context,
              tag,
              data,
              children,
              normalizationType
            ) {
              if (isDef(data) && isDef((data).__ob__)) {
                 warn(
                  "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
                  'Always create fresh vnode data objects in each render!',
                  context
                );
                return createEmptyVNode()
              }
              // object syntax in v-bind
              if (isDef(data) && isDef(data.is)) {
                tag = data.is;
              }
              if (!tag) {
                // in case of component :is set to falsy value
                return createEmptyVNode()
              }
              // warn against non-primitive key
              if (
                isDef(data) && isDef(data.key) && !isPrimitive(data.key)
              ) {
                {
                  warn(
                    'Avoid using non-primitive value as key, ' +
                    'use string/number value instead.',
                    context
                  );
                }
              }
              // support single function children as default scoped slot
              if (Array.isArray(children) &&
                typeof children[0] === 'function'
              ) {
                data = data || {};
                data.scopedSlots = { default: children[0] };
                children.length = 0;
              }
              if (normalizationType === ALWAYS_NORMALIZE) {
                children = normalizeChildren(children);
              } else if (normalizationType === SIMPLE_NORMALIZE) {
                children = simpleNormalizeChildren(children);
              }
              var vnode, ns;
              if (typeof tag === 'string') {
                var Ctor;
                ns = (context.$vnode && context.$vnode.ns) || config$1.getTagNamespace(tag);
                if (config$1.isReservedTag(tag)) {
                  // platform built-in elements
                  vnode = new VNode(
                    config$1.parsePlatformTagName(tag), data, children,
                    undefined, undefined, context
                  );
                } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
                  // component
                  vnode = createComponent(Ctor, data, context, children, tag);
                } else {
                  // unknown or unlisted namespaced elements
                  // check at runtime because it may get assigned a namespace when its
                  // parent normalizes children
                  vnode = new VNode(
                    tag, data, children,
                    undefined, undefined, context
                  );
                }
              } else {
                // direct component options / constructor
                vnode = createComponent(tag, data, context, children);
              }
              if (Array.isArray(vnode)) {
                return vnode
              } else if (isDef(vnode)) {
                if (isDef(ns)) { applyNS(vnode, ns); }
                if (isDef(data)) { registerDeepBindings(data); }
                return vnode
              } else {
                return createEmptyVNode()
              }
            }

            function applyNS (vnode, ns, force) {
              vnode.ns = ns;
              if (vnode.tag === 'foreignObject') {
                // use default namespace inside foreignObject
                ns = undefined;
                force = true;
              }
              if (isDef(vnode.children)) {
                for (var i = 0, l = vnode.children.length; i < l; i++) {
                  var child = vnode.children[i];
                  if (isDef(child.tag) && (
                    isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
                    applyNS(child, ns, force);
                  }
                }
              }
            }

            // ref #5318
            // necessary to ensure parent re-render when deep bindings like :style and
            // :class are used on slot nodes
            function registerDeepBindings (data) {
              if (isObject(data.style)) {
                traverse(data.style);
              }
              if (isObject(data.class)) {
                traverse(data.class);
              }
            }

            /*  */

            function initRender (vm) {
              vm._vnode = null; // the root of the child tree
              vm._staticTrees = null; // v-once cached trees
              var options = vm.$options;
              var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
              var renderContext = parentVnode && parentVnode.context;
              vm.$slots = resolveSlots(options._renderChildren, renderContext);
              vm.$scopedSlots = emptyObject;
              // bind the createElement fn to this instance
              // so that we get proper render context inside it.
              // args order: tag, data, children, normalizationType, alwaysNormalize
              // internal version is used by render functions compiled from templates
              vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
              // normalization is always applied for the public version, used in
              // user-written render functions.
              vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

              // $attrs & $listeners are exposed for easier HOC creation.
              // they need to be reactive so that HOCs using them are always updated
              var parentData = parentVnode && parentVnode.data;

              /* istanbul ignore else */
              {
                defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
                  !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
                }, true);
                defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
                  !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
                }, true);
              }
            }

            var currentRenderingInstance = null;

            function renderMixin (Vue) {
              // install runtime convenience helpers
              installRenderHelpers(Vue.prototype);

              Vue.prototype.$nextTick = function (fn) {
                return nextTick$1(fn, this)
              };

              Vue.prototype._render = function () {
                var vm = this;
                var ref = vm.$options;
                var render = ref.render;
                var _parentVnode = ref._parentVnode;

                if (_parentVnode) {
                  vm.$scopedSlots = normalizeScopedSlots(
                    _parentVnode.data.scopedSlots,
                    vm.$slots,
                    vm.$scopedSlots
                  );
                }

                // set parent vnode. this allows render functions to have access
                // to the data on the placeholder node.
                vm.$vnode = _parentVnode;
                // render self
                var vnode;
                try {
                  // There's no need to maintain a stack becaues all render fns are called
                  // separately from one another. Nested component's render fns are called
                  // when parent component is patched.
                  currentRenderingInstance = vm;
                  vnode = render.call(vm._renderProxy, vm.$createElement);
                } catch (e) {
                  handleError(e, vm, "render");
                  // return error render result,
                  // or previous vnode to prevent render error causing blank component
                  /* istanbul ignore else */
                  if ( vm.$options.renderError) {
                    try {
                      vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
                    } catch (e) {
                      handleError(e, vm, "renderError");
                      vnode = vm._vnode;
                    }
                  } else {
                    vnode = vm._vnode;
                  }
                } finally {
                  currentRenderingInstance = null;
                }
                // if the returned array contains only a single node, allow it
                if (Array.isArray(vnode) && vnode.length === 1) {
                  vnode = vnode[0];
                }
                // return empty vnode in case the render function errored out
                if (!(vnode instanceof VNode)) {
                  if ( Array.isArray(vnode)) {
                    warn(
                      'Multiple root nodes returned from render function. Render function ' +
                      'should return a single root node.',
                      vm
                    );
                  }
                  vnode = createEmptyVNode();
                }
                // set parent
                vnode.parent = _parentVnode;
                return vnode
              };
            }

            /*  */

            function ensureCtor (comp, base) {
              if (
                comp.__esModule ||
                (hasSymbol && comp[Symbol.toStringTag] === 'Module')
              ) {
                comp = comp.default;
              }
              return isObject(comp)
                ? base.extend(comp)
                : comp
            }

            function createAsyncPlaceholder (
              factory,
              data,
              context,
              children,
              tag
            ) {
              var node = createEmptyVNode();
              node.asyncFactory = factory;
              node.asyncMeta = { data: data, context: context, children: children, tag: tag };
              return node
            }

            function resolveAsyncComponent (
              factory,
              baseCtor
            ) {
              if (isTrue(factory.error) && isDef(factory.errorComp)) {
                return factory.errorComp
              }

              if (isDef(factory.resolved)) {
                return factory.resolved
              }

              var owner = currentRenderingInstance;
              if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
                // already pending
                factory.owners.push(owner);
              }

              if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
                return factory.loadingComp
              }

              if (owner && !isDef(factory.owners)) {
                var owners = factory.owners = [owner];
                var sync = true;
                var timerLoading = null;
                var timerTimeout = null

                ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

                var forceRender = function (renderCompleted) {
                  for (var i = 0, l = owners.length; i < l; i++) {
                    (owners[i]).$forceUpdate();
                  }

                  if (renderCompleted) {
                    owners.length = 0;
                    if (timerLoading !== null) {
                      clearTimeout(timerLoading);
                      timerLoading = null;
                    }
                    if (timerTimeout !== null) {
                      clearTimeout(timerTimeout);
                      timerTimeout = null;
                    }
                  }
                };

                var resolve = once$1(function (res) {
                  // cache resolved
                  factory.resolved = ensureCtor(res, baseCtor);
                  // invoke callbacks only if this is not a synchronous resolve
                  // (async resolves are shimmed as synchronous during SSR)
                  if (!sync) {
                    forceRender(true);
                  } else {
                    owners.length = 0;
                  }
                });

                var reject = once$1(function (reason) {
                   warn(
                    "Failed to resolve async component: " + (String(factory)) +
                    (reason ? ("\nReason: " + reason) : '')
                  );
                  if (isDef(factory.errorComp)) {
                    factory.error = true;
                    forceRender(true);
                  }
                });

                var res = factory(resolve, reject);

                if (isObject(res)) {
                  if (isPromise(res)) {
                    // () => Promise
                    if (isUndef(factory.resolved)) {
                      res.then(resolve, reject);
                    }
                  } else if (isPromise(res.component)) {
                    res.component.then(resolve, reject);

                    if (isDef(res.error)) {
                      factory.errorComp = ensureCtor(res.error, baseCtor);
                    }

                    if (isDef(res.loading)) {
                      factory.loadingComp = ensureCtor(res.loading, baseCtor);
                      if (res.delay === 0) {
                        factory.loading = true;
                      } else {
                        timerLoading = setTimeout(function () {
                          timerLoading = null;
                          if (isUndef(factory.resolved) && isUndef(factory.error)) {
                            factory.loading = true;
                            forceRender(false);
                          }
                        }, res.delay || 200);
                      }
                    }

                    if (isDef(res.timeout)) {
                      timerTimeout = setTimeout(function () {
                        timerTimeout = null;
                        if (isUndef(factory.resolved)) {
                          reject(
                             ("timeout (" + (res.timeout) + "ms)")
                              
                          );
                        }
                      }, res.timeout);
                    }
                  }
                }

                sync = false;
                // return in case resolved synchronously
                return factory.loading
                  ? factory.loadingComp
                  : factory.resolved
              }
            }

            /*  */

            function isAsyncPlaceholder (node) {
              return node.isComment && node.asyncFactory
            }

            /*  */

            function getFirstComponentChild (children) {
              if (Array.isArray(children)) {
                for (var i = 0; i < children.length; i++) {
                  var c = children[i];
                  if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
                    return c
                  }
                }
              }
            }

            /*  */

            /*  */

            function initEvents (vm) {
              vm._events = Object.create(null);
              vm._hasHookEvent = false;
              // init parent attached events
              var listeners = vm.$options._parentListeners;
              if (listeners) {
                updateComponentListeners(vm, listeners);
              }
            }

            var target;

            function add (event, fn) {
              target.$on(event, fn);
            }

            function remove$1 (event, fn) {
              target.$off(event, fn);
            }

            function createOnceHandler (event, fn) {
              var _target = target;
              return function onceHandler () {
                var res = fn.apply(null, arguments);
                if (res !== null) {
                  _target.$off(event, onceHandler);
                }
              }
            }

            function updateComponentListeners (
              vm,
              listeners,
              oldListeners
            ) {
              target = vm;
              updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
              target = undefined;
            }

            function eventsMixin (Vue) {
              var hookRE = /^hook:/;
              Vue.prototype.$on = function (event, fn) {
                var vm = this;
                if (Array.isArray(event)) {
                  for (var i = 0, l = event.length; i < l; i++) {
                    vm.$on(event[i], fn);
                  }
                } else {
                  (vm._events[event] || (vm._events[event] = [])).push(fn);
                  // optimize hook:event cost by using a boolean flag marked at registration
                  // instead of a hash lookup
                  if (hookRE.test(event)) {
                    vm._hasHookEvent = true;
                  }
                }
                return vm
              };

              Vue.prototype.$once = function (event, fn) {
                var vm = this;
                function on () {
                  vm.$off(event, on);
                  fn.apply(vm, arguments);
                }
                on.fn = fn;
                vm.$on(event, on);
                return vm
              };

              Vue.prototype.$off = function (event, fn) {
                var vm = this;
                // all
                if (!arguments.length) {
                  vm._events = Object.create(null);
                  return vm
                }
                // array of events
                if (Array.isArray(event)) {
                  for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
                    vm.$off(event[i$1], fn);
                  }
                  return vm
                }
                // specific event
                var cbs = vm._events[event];
                if (!cbs) {
                  return vm
                }
                if (!fn) {
                  vm._events[event] = null;
                  return vm
                }
                // specific handler
                var cb;
                var i = cbs.length;
                while (i--) {
                  cb = cbs[i];
                  if (cb === fn || cb.fn === fn) {
                    cbs.splice(i, 1);
                    break
                  }
                }
                return vm
              };

              Vue.prototype.$emit = function (event) {
                var vm = this;
                {
                  var lowerCaseEvent = event.toLowerCase();
                  if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
                    tip(
                      "Event \"" + lowerCaseEvent + "\" is emitted in component " +
                      (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
                      "Note that HTML attributes are case-insensitive and you cannot use " +
                      "v-on to listen to camelCase events when using in-DOM templates. " +
                      "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
                    );
                  }
                }
                var cbs = vm._events[event];
                if (cbs) {
                  cbs = cbs.length > 1 ? toArray(cbs) : cbs;
                  var args = toArray(arguments, 1);
                  var info = "event handler for \"" + event + "\"";
                  for (var i = 0, l = cbs.length; i < l; i++) {
                    invokeWithErrorHandling(cbs[i], vm, args, vm, info);
                  }
                }
                return vm
              };
            }

            /*  */

            var activeInstance = null;
            var isUpdatingChildComponent = false;

            function setActiveInstance(vm) {
              var prevActiveInstance = activeInstance;
              activeInstance = vm;
              return function () {
                activeInstance = prevActiveInstance;
              }
            }

            function initLifecycle (vm) {
              var options = vm.$options;

              // locate first non-abstract parent
              var parent = options.parent;
              if (parent && !options.abstract) {
                while (parent.$options.abstract && parent.$parent) {
                  parent = parent.$parent;
                }
                parent.$children.push(vm);
              }

              vm.$parent = parent;
              vm.$root = parent ? parent.$root : vm;

              vm.$children = [];
              vm.$refs = {};

              vm._watcher = null;
              vm._inactive = null;
              vm._directInactive = false;
              vm._isMounted = false;
              vm._isDestroyed = false;
              vm._isBeingDestroyed = false;
            }

            function lifecycleMixin (Vue) {
              Vue.prototype._update = function (vnode, hydrating) {
                var vm = this;
                var prevEl = vm.$el;
                var prevVnode = vm._vnode;
                var restoreActiveInstance = setActiveInstance(vm);
                vm._vnode = vnode;
                // Vue.prototype.__patch__ is injected in entry points
                // based on the rendering backend used.
                if (!prevVnode) {
                  // initial render
                  vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
                } else {
                  // updates
                  vm.$el = vm.__patch__(prevVnode, vnode);
                }
                restoreActiveInstance();
                // update __vue__ reference
                if (prevEl) {
                  prevEl.__vue__ = null;
                }
                if (vm.$el) {
                  vm.$el.__vue__ = vm;
                }
                // if parent is an HOC, update its $el as well
                if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
                  vm.$parent.$el = vm.$el;
                }
                // updated hook is called by the scheduler to ensure that children are
                // updated in a parent's updated hook.
              };

              Vue.prototype.$forceUpdate = function () {
                var vm = this;
                if (vm._watcher) {
                  vm._watcher.update();
                }
              };

              Vue.prototype.$destroy = function () {
                var vm = this;
                if (vm._isBeingDestroyed) {
                  return
                }
                callHook(vm, 'beforeDestroy');
                vm._isBeingDestroyed = true;
                // remove self from parent
                var parent = vm.$parent;
                if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
                  remove(parent.$children, vm);
                }
                // teardown watchers
                if (vm._watcher) {
                  vm._watcher.teardown();
                }
                var i = vm._watchers.length;
                while (i--) {
                  vm._watchers[i].teardown();
                }
                // remove reference from data ob
                // frozen object may not have observer.
                if (vm._data.__ob__) {
                  vm._data.__ob__.vmCount--;
                }
                // call the last hook...
                vm._isDestroyed = true;
                // invoke destroy hooks on current rendered tree
                vm.__patch__(vm._vnode, null);
                // fire destroyed hook
                callHook(vm, 'destroyed');
                // turn off all instance listeners.
                vm.$off();
                // remove __vue__ reference
                if (vm.$el) {
                  vm.$el.__vue__ = null;
                }
                // release circular reference (#6759)
                if (vm.$vnode) {
                  vm.$vnode.parent = null;
                }
              };
            }

            function mountComponent (
              vm,
              el,
              hydrating
            ) {
              vm.$el = el;
              if (!vm.$options.render) {
                vm.$options.render = createEmptyVNode;
                {
                  /* istanbul ignore if */
                  if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
                    vm.$options.el || el) {
                    warn(
                      'You are using the runtime-only build of Vue where the template ' +
                      'compiler is not available. Either pre-compile the templates into ' +
                      'render functions, or use the compiler-included build.',
                      vm
                    );
                  } else {
                    warn(
                      'Failed to mount component: template or render function not defined.',
                      vm
                    );
                  }
                }
              }
              callHook(vm, 'beforeMount');

              var updateComponent;
              /* istanbul ignore if */
              if ( config$1.performance && mark) {
                updateComponent = function () {
                  var name = vm._name;
                  var id = vm._uid;
                  var startTag = "vue-perf-start:" + id;
                  var endTag = "vue-perf-end:" + id;

                  mark(startTag);
                  var vnode = vm._render();
                  mark(endTag);
                  measure(("vue " + name + " render"), startTag, endTag);

                  mark(startTag);
                  vm._update(vnode, hydrating);
                  mark(endTag);
                  measure(("vue " + name + " patch"), startTag, endTag);
                };
              } else {
                updateComponent = function () {
                  vm._update(vm._render(), hydrating);
                };
              }

              // we set this to vm._watcher inside the watcher's constructor
              // since the watcher's initial patch may call $forceUpdate (e.g. inside child
              // component's mounted hook), which relies on vm._watcher being already defined
              new Watcher(vm, updateComponent, noop$1, {
                before: function before () {
                  if (vm._isMounted && !vm._isDestroyed) {
                    callHook(vm, 'beforeUpdate');
                  }
                }
              }, true /* isRenderWatcher */);
              hydrating = false;

              // manually mounted instance, call mounted on self
              // mounted is called for render-created child components in its inserted hook
              if (vm.$vnode == null) {
                vm._isMounted = true;
                callHook(vm, 'mounted');
              }
              return vm
            }

            function updateChildComponent (
              vm,
              propsData,
              listeners,
              parentVnode,
              renderChildren
            ) {
              {
                isUpdatingChildComponent = true;
              }

              // determine whether component has slot children
              // we need to do this before overwriting $options._renderChildren.

              // check if there are dynamic scopedSlots (hand-written or compiled but with
              // dynamic slot names). Static scoped slots compiled from template has the
              // "$stable" marker.
              var newScopedSlots = parentVnode.data.scopedSlots;
              var oldScopedSlots = vm.$scopedSlots;
              var hasDynamicScopedSlot = !!(
                (newScopedSlots && !newScopedSlots.$stable) ||
                (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
                (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
              );

              // Any static slot children from the parent may have changed during parent's
              // update. Dynamic scoped slots may also have changed. In such cases, a forced
              // update is necessary to ensure correctness.
              var needsForceUpdate = !!(
                renderChildren ||               // has new static slots
                vm.$options._renderChildren ||  // has old static slots
                hasDynamicScopedSlot
              );

              vm.$options._parentVnode = parentVnode;
              vm.$vnode = parentVnode; // update vm's placeholder node without re-render

              if (vm._vnode) { // update child tree's parent
                vm._vnode.parent = parentVnode;
              }
              vm.$options._renderChildren = renderChildren;

              // update $attrs and $listeners hash
              // these are also reactive so they may trigger child update if the child
              // used them during render
              vm.$attrs = parentVnode.data.attrs || emptyObject;
              vm.$listeners = listeners || emptyObject;

              // update props
              if (propsData && vm.$options.props) {
                toggleObserving(false);
                var props = vm._props;
                var propKeys = vm.$options._propKeys || [];
                for (var i = 0; i < propKeys.length; i++) {
                  var key = propKeys[i];
                  var propOptions = vm.$options.props; // wtf flow?
                  props[key] = validateProp(key, propOptions, propsData, vm);
                }
                toggleObserving(true);
                // keep a copy of raw propsData
                vm.$options.propsData = propsData;
              }

              // update listeners
              listeners = listeners || emptyObject;
              var oldListeners = vm.$options._parentListeners;
              vm.$options._parentListeners = listeners;
              updateComponentListeners(vm, listeners, oldListeners);

              // resolve slots + force update if has children
              if (needsForceUpdate) {
                vm.$slots = resolveSlots(renderChildren, parentVnode.context);
                vm.$forceUpdate();
              }

              {
                isUpdatingChildComponent = false;
              }
            }

            function isInInactiveTree (vm) {
              while (vm && (vm = vm.$parent)) {
                if (vm._inactive) { return true }
              }
              return false
            }

            function activateChildComponent (vm, direct) {
              if (direct) {
                vm._directInactive = false;
                if (isInInactiveTree(vm)) {
                  return
                }
              } else if (vm._directInactive) {
                return
              }
              if (vm._inactive || vm._inactive === null) {
                vm._inactive = false;
                for (var i = 0; i < vm.$children.length; i++) {
                  activateChildComponent(vm.$children[i]);
                }
                callHook(vm, 'activated');
              }
            }

            function deactivateChildComponent (vm, direct) {
              if (direct) {
                vm._directInactive = true;
                if (isInInactiveTree(vm)) {
                  return
                }
              }
              if (!vm._inactive) {
                vm._inactive = true;
                for (var i = 0; i < vm.$children.length; i++) {
                  deactivateChildComponent(vm.$children[i]);
                }
                callHook(vm, 'deactivated');
              }
            }

            function callHook (vm, hook) {
              // #7573 disable dep collection when invoking lifecycle hooks
              pushTarget();
              var handlers = vm.$options[hook];
              var info = hook + " hook";
              if (handlers) {
                for (var i = 0, j = handlers.length; i < j; i++) {
                  invokeWithErrorHandling(handlers[i], vm, null, vm, info);
                }
              }
              if (vm._hasHookEvent) {
                vm.$emit('hook:' + hook);
              }
              popTarget();
            }

            /*  */

            var MAX_UPDATE_COUNT = 100;

            var queue$1 = [];
            var activatedChildren = [];
            var has = {};
            var circular = {};
            var waiting = false;
            var flushing = false;
            var index = 0;

            /**
             * Reset the scheduler's state.
             */
            function resetSchedulerState () {
              index = queue$1.length = activatedChildren.length = 0;
              has = {};
              {
                circular = {};
              }
              waiting = flushing = false;
            }

            // Async edge case #6566 requires saving the timestamp when event listeners are
            // attached. However, calling performance.now() has a perf overhead especially
            // if the page has thousands of event listeners. Instead, we take a timestamp
            // every time the scheduler flushes and use that for all event listeners
            // attached during that flush.
            var currentFlushTimestamp = 0;

            // Async edge case fix requires storing an event listener's attach timestamp.
            var getNow = Date.now;

            // Determine what event timestamp the browser is using. Annoyingly, the
            // timestamp can either be hi-res (relative to page load) or low-res
            // (relative to UNIX epoch), so in order to compare time we have to use the
            // same timestamp type when saving the flush timestamp.
            // All IE versions use low-res event timestamps, and have problematic clock
            // implementations (#9632)
            if (inBrowser && !isIE) {
              var performance$1 = window.performance;
              if (
                performance$1 &&
                typeof performance$1.now === 'function' &&
                getNow() > document.createEvent('Event').timeStamp
              ) {
                // if the event timestamp, although evaluated AFTER the Date.now(), is
                // smaller than it, it means the event is using a hi-res timestamp,
                // and we need to use the hi-res version for event listener timestamps as
                // well.
                getNow = function () { return performance$1.now(); };
              }
            }

            /**
             * Flush both queues and run the watchers.
             */
            function flushSchedulerQueue () {
              currentFlushTimestamp = getNow();
              flushing = true;
              var watcher, id;

              // Sort queue before flush.
              // This ensures that:
              // 1. Components are updated from parent to child. (because parent is always
              //    created before the child)
              // 2. A component's user watchers are run before its render watcher (because
              //    user watchers are created before the render watcher)
              // 3. If a component is destroyed during a parent component's watcher run,
              //    its watchers can be skipped.
              queue$1.sort(function (a, b) { return a.id - b.id; });

              // do not cache length because more watchers might be pushed
              // as we run existing watchers
              for (index = 0; index < queue$1.length; index++) {
                watcher = queue$1[index];
                if (watcher.before) {
                  watcher.before();
                }
                id = watcher.id;
                has[id] = null;
                watcher.run();
                // in dev build, check and stop circular updates.
                if ( has[id] != null) {
                  circular[id] = (circular[id] || 0) + 1;
                  if (circular[id] > MAX_UPDATE_COUNT) {
                    warn(
                      'You may have an infinite update loop ' + (
                        watcher.user
                          ? ("in watcher with expression \"" + (watcher.expression) + "\"")
                          : "in a component render function."
                      ),
                      watcher.vm
                    );
                    break
                  }
                }
              }

              // keep copies of post queues before resetting state
              var activatedQueue = activatedChildren.slice();
              var updatedQueue = queue$1.slice();

              resetSchedulerState();

              // call component updated and activated hooks
              callActivatedHooks(activatedQueue);
              callUpdatedHooks(updatedQueue);

              // devtool hook
              /* istanbul ignore if */
              if (devtools && config$1.devtools) {
                devtools.emit('flush');
              }
            }

            function callUpdatedHooks (queue) {
              var i = queue.length;
              while (i--) {
                var watcher = queue[i];
                var vm = watcher.vm;
                if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
                  callHook(vm, 'updated');
                }
              }
            }

            /**
             * Queue a kept-alive component that was activated during patch.
             * The queue will be processed after the entire tree has been patched.
             */
            function queueActivatedComponent (vm) {
              // setting _inactive to false here so that a render function can
              // rely on checking whether it's in an inactive tree (e.g. router-view)
              vm._inactive = false;
              activatedChildren.push(vm);
            }

            function callActivatedHooks (queue) {
              for (var i = 0; i < queue.length; i++) {
                queue[i]._inactive = true;
                activateChildComponent(queue[i], true /* true */);
              }
            }

            /**
             * Push a watcher into the watcher queue.
             * Jobs with duplicate IDs will be skipped unless it's
             * pushed when the queue is being flushed.
             */
            function queueWatcher (watcher) {
              var id = watcher.id;
              if (has[id] == null) {
                has[id] = true;
                if (!flushing) {
                  queue$1.push(watcher);
                } else {
                  // if already flushing, splice the watcher based on its id
                  // if already past its id, it will be run next immediately.
                  var i = queue$1.length - 1;
                  while (i > index && queue$1[i].id > watcher.id) {
                    i--;
                  }
                  queue$1.splice(i + 1, 0, watcher);
                }
                // queue the flush
                if (!waiting) {
                  waiting = true;

                  if ( !config$1.async) {
                    flushSchedulerQueue();
                    return
                  }
                  nextTick$1(flushSchedulerQueue);
                }
              }
            }

            /*  */



            var uid$2 = 0;

            /**
             * A watcher parses an expression, collects dependencies,
             * and fires callback when the expression value changes.
             * This is used for both the $watch() api and directives.
             */
            var Watcher = function Watcher (
              vm,
              expOrFn,
              cb,
              options,
              isRenderWatcher
            ) {
              this.vm = vm;
              if (isRenderWatcher) {
                vm._watcher = this;
              }
              vm._watchers.push(this);
              // options
              if (options) {
                this.deep = !!options.deep;
                this.user = !!options.user;
                this.lazy = !!options.lazy;
                this.sync = !!options.sync;
                this.before = options.before;
              } else {
                this.deep = this.user = this.lazy = this.sync = false;
              }
              this.cb = cb;
              this.id = ++uid$2; // uid for batching
              this.active = true;
              this.dirty = this.lazy; // for lazy watchers
              this.deps = [];
              this.newDeps = [];
              this.depIds = new _Set();
              this.newDepIds = new _Set();
              this.expression =  expOrFn.toString()
                ;
              // parse expression for getter
              if (typeof expOrFn === 'function') {
                this.getter = expOrFn;
              } else {
                this.getter = parsePath(expOrFn);
                if (!this.getter) {
                  this.getter = noop$1;
                   warn(
                    "Failed watching path: \"" + expOrFn + "\" " +
                    'Watcher only accepts simple dot-delimited paths. ' +
                    'For full control, use a function instead.',
                    vm
                  );
                }
              }
              this.value = this.lazy
                ? undefined
                : this.get();
            };

            /**
             * Evaluate the getter, and re-collect dependencies.
             */
            Watcher.prototype.get = function get () {
              pushTarget(this);
              var value;
              var vm = this.vm;
              try {
                value = this.getter.call(vm, vm);
              } catch (e) {
                if (this.user) {
                  handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
                } else {
                  throw e
                }
              } finally {
                // "touch" every property so they are all tracked as
                // dependencies for deep watching
                if (this.deep) {
                  traverse(value);
                }
                popTarget();
                this.cleanupDeps();
              }
              return value
            };

            /**
             * Add a dependency to this directive.
             */
            Watcher.prototype.addDep = function addDep (dep) {
              var id = dep.id;
              if (!this.newDepIds.has(id)) {
                this.newDepIds.add(id);
                this.newDeps.push(dep);
                if (!this.depIds.has(id)) {
                  dep.addSub(this);
                }
              }
            };

            /**
             * Clean up for dependency collection.
             */
            Watcher.prototype.cleanupDeps = function cleanupDeps () {
              var i = this.deps.length;
              while (i--) {
                var dep = this.deps[i];
                if (!this.newDepIds.has(dep.id)) {
                  dep.removeSub(this);
                }
              }
              var tmp = this.depIds;
              this.depIds = this.newDepIds;
              this.newDepIds = tmp;
              this.newDepIds.clear();
              tmp = this.deps;
              this.deps = this.newDeps;
              this.newDeps = tmp;
              this.newDeps.length = 0;
            };

            /**
             * Subscriber interface.
             * Will be called when a dependency changes.
             */
            Watcher.prototype.update = function update () {
              /* istanbul ignore else */
              if (this.lazy) {
                this.dirty = true;
              } else if (this.sync) {
                this.run();
              } else {
                queueWatcher(this);
              }
            };

            /**
             * Scheduler job interface.
             * Will be called by the scheduler.
             */
            Watcher.prototype.run = function run () {
              if (this.active) {
                var value = this.get();
                if (
                  value !== this.value ||
                  // Deep watchers and watchers on Object/Arrays should fire even
                  // when the value is the same, because the value may
                  // have mutated.
                  isObject(value) ||
                  this.deep
                ) {
                  // set new value
                  var oldValue = this.value;
                  this.value = value;
                  if (this.user) {
                    try {
                      this.cb.call(this.vm, value, oldValue);
                    } catch (e) {
                      handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
                    }
                  } else {
                    this.cb.call(this.vm, value, oldValue);
                  }
                }
              }
            };

            /**
             * Evaluate the value of the watcher.
             * This only gets called for lazy watchers.
             */
            Watcher.prototype.evaluate = function evaluate () {
              this.value = this.get();
              this.dirty = false;
            };

            /**
             * Depend on all deps collected by this watcher.
             */
            Watcher.prototype.depend = function depend () {
              var i = this.deps.length;
              while (i--) {
                this.deps[i].depend();
              }
            };

            /**
             * Remove self from all dependencies' subscriber list.
             */
            Watcher.prototype.teardown = function teardown () {
              if (this.active) {
                // remove self from vm's watcher list
                // this is a somewhat expensive operation so we skip it
                // if the vm is being destroyed.
                if (!this.vm._isBeingDestroyed) {
                  remove(this.vm._watchers, this);
                }
                var i = this.deps.length;
                while (i--) {
                  this.deps[i].removeSub(this);
                }
                this.active = false;
              }
            };

            /*  */

            var sharedPropertyDefinition = {
              enumerable: true,
              configurable: true,
              get: noop$1,
              set: noop$1
            };

            function proxy (target, sourceKey, key) {
              sharedPropertyDefinition.get = function proxyGetter () {
                return this[sourceKey][key]
              };
              sharedPropertyDefinition.set = function proxySetter (val) {
                this[sourceKey][key] = val;
              };
              Object.defineProperty(target, key, sharedPropertyDefinition);
            }

            function initState (vm) {
              vm._watchers = [];
              var opts = vm.$options;
              if (opts.props) { initProps(vm, opts.props); }
              if (opts.methods) { initMethods(vm, opts.methods); }
              if (opts.data) {
                initData(vm);
              } else {
                observe(vm._data = {}, true /* asRootData */);
              }
              if (opts.computed) { initComputed(vm, opts.computed); }
              if (opts.watch && opts.watch !== nativeWatch) {
                initWatch(vm, opts.watch);
              }
            }

            function initProps (vm, propsOptions) {
              var propsData = vm.$options.propsData || {};
              var props = vm._props = {};
              // cache prop keys so that future props updates can iterate using Array
              // instead of dynamic object key enumeration.
              var keys = vm.$options._propKeys = [];
              var isRoot = !vm.$parent;
              // root instance props should be converted
              if (!isRoot) {
                toggleObserving(false);
              }
              var loop = function ( key ) {
                keys.push(key);
                var value = validateProp(key, propsOptions, propsData, vm);
                /* istanbul ignore else */
                {
                  var hyphenatedKey = hyphenate(key);
                  if (isReservedAttribute(hyphenatedKey) ||
                      config$1.isReservedAttr(hyphenatedKey)) {
                    warn(
                      ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
                      vm
                    );
                  }
                  defineReactive$$1(props, key, value, function () {
                    if (!isRoot && !isUpdatingChildComponent) {
                      warn(
                        "Avoid mutating a prop directly since the value will be " +
                        "overwritten whenever the parent component re-renders. " +
                        "Instead, use a data or computed property based on the prop's " +
                        "value. Prop being mutated: \"" + key + "\"",
                        vm
                      );
                    }
                  });
                }
                // static props are already proxied on the component's prototype
                // during Vue.extend(). We only need to proxy props defined at
                // instantiation here.
                if (!(key in vm)) {
                  proxy(vm, "_props", key);
                }
              };

              for (var key in propsOptions) { loop( key ); }
              toggleObserving(true);
            }

            function initData (vm) {
              var data = vm.$options.data;
              data = vm._data = typeof data === 'function'
                ? getData(data, vm)
                : data || {};
              if (!isPlainObject(data)) {
                data = {};
                 warn(
                  'data functions should return an object:\n' +
                  'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
                  vm
                );
              }
              // proxy data on instance
              var keys = Object.keys(data);
              var props = vm.$options.props;
              var methods = vm.$options.methods;
              var i = keys.length;
              while (i--) {
                var key = keys[i];
                {
                  if (methods && hasOwn(methods, key)) {
                    warn(
                      ("Method \"" + key + "\" has already been defined as a data property."),
                      vm
                    );
                  }
                }
                if (props && hasOwn(props, key)) {
                   warn(
                    "The data property \"" + key + "\" is already declared as a prop. " +
                    "Use prop default value instead.",
                    vm
                  );
                } else if (!isReserved(key)) {
                  proxy(vm, "_data", key);
                }
              }
              // observe data
              observe(data, true /* asRootData */);
            }

            function getData (data, vm) {
              // #7573 disable dep collection when invoking data getters
              pushTarget();
              try {
                return data.call(vm, vm)
              } catch (e) {
                handleError(e, vm, "data()");
                return {}
              } finally {
                popTarget();
              }
            }

            var computedWatcherOptions = { lazy: true };

            function initComputed (vm, computed) {
              // $flow-disable-line
              var watchers = vm._computedWatchers = Object.create(null);
              // computed properties are just getters during SSR
              var isSSR = isServerRendering();

              for (var key in computed) {
                var userDef = computed[key];
                var getter = typeof userDef === 'function' ? userDef : userDef.get;
                if ( getter == null) {
                  warn(
                    ("Getter is missing for computed property \"" + key + "\"."),
                    vm
                  );
                }

                if (!isSSR) {
                  // create internal watcher for the computed property.
                  watchers[key] = new Watcher(
                    vm,
                    getter || noop$1,
                    noop$1,
                    computedWatcherOptions
                  );
                }

                // component-defined computed properties are already defined on the
                // component prototype. We only need to define computed properties defined
                // at instantiation here.
                if (!(key in vm)) {
                  defineComputed(vm, key, userDef);
                } else {
                  if (key in vm.$data) {
                    warn(("The computed property \"" + key + "\" is already defined in data."), vm);
                  } else if (vm.$options.props && key in vm.$options.props) {
                    warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
                  }
                }
              }
            }

            function defineComputed (
              target,
              key,
              userDef
            ) {
              var shouldCache = !isServerRendering();
              if (typeof userDef === 'function') {
                sharedPropertyDefinition.get = shouldCache
                  ? createComputedGetter(key)
                  : createGetterInvoker(userDef);
                sharedPropertyDefinition.set = noop$1;
              } else {
                sharedPropertyDefinition.get = userDef.get
                  ? shouldCache && userDef.cache !== false
                    ? createComputedGetter(key)
                    : createGetterInvoker(userDef.get)
                  : noop$1;
                sharedPropertyDefinition.set = userDef.set || noop$1;
              }
              if (
                  sharedPropertyDefinition.set === noop$1) {
                sharedPropertyDefinition.set = function () {
                  warn(
                    ("Computed property \"" + key + "\" was assigned to but it has no setter."),
                    this
                  );
                };
              }
              Object.defineProperty(target, key, sharedPropertyDefinition);
            }

            function createComputedGetter (key) {
              return function computedGetter () {
                var watcher = this._computedWatchers && this._computedWatchers[key];
                if (watcher) {
                  if (watcher.dirty) {
                    watcher.evaluate();
                  }
                  if (Dep.target) {
                    watcher.depend();
                  }
                  return watcher.value
                }
              }
            }

            function createGetterInvoker(fn) {
              return function computedGetter () {
                return fn.call(this, this)
              }
            }

            function initMethods (vm, methods) {
              var props = vm.$options.props;
              for (var key in methods) {
                {
                  if (typeof methods[key] !== 'function') {
                    warn(
                      "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
                      "Did you reference the function correctly?",
                      vm
                    );
                  }
                  if (props && hasOwn(props, key)) {
                    warn(
                      ("Method \"" + key + "\" has already been defined as a prop."),
                      vm
                    );
                  }
                  if ((key in vm) && isReserved(key)) {
                    warn(
                      "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
                      "Avoid defining component methods that start with _ or $."
                    );
                  }
                }
                vm[key] = typeof methods[key] !== 'function' ? noop$1 : bind(methods[key], vm);
              }
            }

            function initWatch (vm, watch) {
              for (var key in watch) {
                var handler = watch[key];
                if (Array.isArray(handler)) {
                  for (var i = 0; i < handler.length; i++) {
                    createWatcher(vm, key, handler[i]);
                  }
                } else {
                  createWatcher(vm, key, handler);
                }
              }
            }

            function createWatcher (
              vm,
              expOrFn,
              handler,
              options
            ) {
              if (isPlainObject(handler)) {
                options = handler;
                handler = handler.handler;
              }
              if (typeof handler === 'string') {
                handler = vm[handler];
              }
              return vm.$watch(expOrFn, handler, options)
            }

            function stateMixin (Vue) {
              // flow somehow has problems with directly declared definition object
              // when using Object.defineProperty, so we have to procedurally build up
              // the object here.
              var dataDef = {};
              dataDef.get = function () { return this._data };
              var propsDef = {};
              propsDef.get = function () { return this._props };
              {
                dataDef.set = function () {
                  warn(
                    'Avoid replacing instance root $data. ' +
                    'Use nested data properties instead.',
                    this
                  );
                };
                propsDef.set = function () {
                  warn("$props is readonly.", this);
                };
              }
              Object.defineProperty(Vue.prototype, '$data', dataDef);
              Object.defineProperty(Vue.prototype, '$props', propsDef);

              Vue.prototype.$set = set;
              Vue.prototype.$delete = del;

              Vue.prototype.$watch = function (
                expOrFn,
                cb,
                options
              ) {
                var vm = this;
                if (isPlainObject(cb)) {
                  return createWatcher(vm, expOrFn, cb, options)
                }
                options = options || {};
                options.user = true;
                var watcher = new Watcher(vm, expOrFn, cb, options);
                if (options.immediate) {
                  try {
                    cb.call(vm, watcher.value);
                  } catch (error) {
                    handleError(error, vm, ("callback for immediate watcher \"" + (watcher.expression) + "\""));
                  }
                }
                return function unwatchFn () {
                  watcher.teardown();
                }
              };
            }

            /*  */

            var uid$3 = 0;

            function initMixin (Vue) {
              Vue.prototype._init = function (options) {
                var vm = this;
                // a uid
                vm._uid = uid$3++;

                var startTag, endTag;
                /* istanbul ignore if */
                if ( config$1.performance && mark) {
                  startTag = "vue-perf-start:" + (vm._uid);
                  endTag = "vue-perf-end:" + (vm._uid);
                  mark(startTag);
                }

                // a flag to avoid this being observed
                vm._isVue = true;
                // merge options
                if (options && options._isComponent) {
                  // optimize internal component instantiation
                  // since dynamic options merging is pretty slow, and none of the
                  // internal component options needs special treatment.
                  initInternalComponent(vm, options);
                } else {
                  vm.$options = mergeOptions(
                    resolveConstructorOptions(vm.constructor),
                    options || {},
                    vm
                  );
                }
                /* istanbul ignore else */
                {
                  initProxy(vm);
                }
                // expose real self
                vm._self = vm;
                initLifecycle(vm);
                initEvents(vm);
                initRender(vm);
                callHook(vm, 'beforeCreate');
                initInjections(vm); // resolve injections before data/props
                initState(vm);
                initProvide(vm); // resolve provide after data/props
                callHook(vm, 'created');

                /* istanbul ignore if */
                if ( config$1.performance && mark) {
                  vm._name = formatComponentName(vm, false);
                  mark(endTag);
                  measure(("vue " + (vm._name) + " init"), startTag, endTag);
                }

                if (vm.$options.el) {
                  vm.$mount(vm.$options.el);
                }
              };
            }

            function initInternalComponent (vm, options) {
              var opts = vm.$options = Object.create(vm.constructor.options);
              // doing this because it's faster than dynamic enumeration.
              var parentVnode = options._parentVnode;
              opts.parent = options.parent;
              opts._parentVnode = parentVnode;

              var vnodeComponentOptions = parentVnode.componentOptions;
              opts.propsData = vnodeComponentOptions.propsData;
              opts._parentListeners = vnodeComponentOptions.listeners;
              opts._renderChildren = vnodeComponentOptions.children;
              opts._componentTag = vnodeComponentOptions.tag;

              if (options.render) {
                opts.render = options.render;
                opts.staticRenderFns = options.staticRenderFns;
              }
            }

            function resolveConstructorOptions (Ctor) {
              var options = Ctor.options;
              if (Ctor.super) {
                var superOptions = resolveConstructorOptions(Ctor.super);
                var cachedSuperOptions = Ctor.superOptions;
                if (superOptions !== cachedSuperOptions) {
                  // super option changed,
                  // need to resolve new options.
                  Ctor.superOptions = superOptions;
                  // check if there are any late-modified/attached options (#4976)
                  var modifiedOptions = resolveModifiedOptions(Ctor);
                  // update base extend options
                  if (modifiedOptions) {
                    extend(Ctor.extendOptions, modifiedOptions);
                  }
                  options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
                  if (options.name) {
                    options.components[options.name] = Ctor;
                  }
                }
              }
              return options
            }

            function resolveModifiedOptions (Ctor) {
              var modified;
              var latest = Ctor.options;
              var sealed = Ctor.sealedOptions;
              for (var key in latest) {
                if (latest[key] !== sealed[key]) {
                  if (!modified) { modified = {}; }
                  modified[key] = latest[key];
                }
              }
              return modified
            }

            function Vue (options) {
              if (
                !(this instanceof Vue)
              ) {
                warn('Vue is a constructor and should be called with the `new` keyword');
              }
              this._init(options);
            }

            initMixin(Vue);
            stateMixin(Vue);
            eventsMixin(Vue);
            lifecycleMixin(Vue);
            renderMixin(Vue);

            /*  */

            function initUse (Vue) {
              Vue.use = function (plugin) {
                var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
                if (installedPlugins.indexOf(plugin) > -1) {
                  return this
                }

                // additional parameters
                var args = toArray(arguments, 1);
                args.unshift(this);
                if (typeof plugin.install === 'function') {
                  plugin.install.apply(plugin, args);
                } else if (typeof plugin === 'function') {
                  plugin.apply(null, args);
                }
                installedPlugins.push(plugin);
                return this
              };
            }

            /*  */

            function initMixin$1 (Vue) {
              Vue.mixin = function (mixin) {
                this.options = mergeOptions(this.options, mixin);
                return this
              };
            }

            /*  */

            function initExtend (Vue) {
              /**
               * Each instance constructor, including Vue, has a unique
               * cid. This enables us to create wrapped "child
               * constructors" for prototypal inheritance and cache them.
               */
              Vue.cid = 0;
              var cid = 1;

              /**
               * Class inheritance
               */
              Vue.extend = function (extendOptions) {
                extendOptions = extendOptions || {};
                var Super = this;
                var SuperId = Super.cid;
                var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
                if (cachedCtors[SuperId]) {
                  return cachedCtors[SuperId]
                }

                var name = extendOptions.name || Super.options.name;
                if ( name) {
                  validateComponentName(name);
                }

                var Sub = function VueComponent (options) {
                  this._init(options);
                };
                Sub.prototype = Object.create(Super.prototype);
                Sub.prototype.constructor = Sub;
                Sub.cid = cid++;
                Sub.options = mergeOptions(
                  Super.options,
                  extendOptions
                );
                Sub['super'] = Super;

                // For props and computed properties, we define the proxy getters on
                // the Vue instances at extension time, on the extended prototype. This
                // avoids Object.defineProperty calls for each instance created.
                if (Sub.options.props) {
                  initProps$1(Sub);
                }
                if (Sub.options.computed) {
                  initComputed$1(Sub);
                }

                // allow further extension/mixin/plugin usage
                Sub.extend = Super.extend;
                Sub.mixin = Super.mixin;
                Sub.use = Super.use;

                // create asset registers, so extended classes
                // can have their private assets too.
                ASSET_TYPES.forEach(function (type) {
                  Sub[type] = Super[type];
                });
                // enable recursive self-lookup
                if (name) {
                  Sub.options.components[name] = Sub;
                }

                // keep a reference to the super options at extension time.
                // later at instantiation we can check if Super's options have
                // been updated.
                Sub.superOptions = Super.options;
                Sub.extendOptions = extendOptions;
                Sub.sealedOptions = extend({}, Sub.options);

                // cache constructor
                cachedCtors[SuperId] = Sub;
                return Sub
              };
            }

            function initProps$1 (Comp) {
              var props = Comp.options.props;
              for (var key in props) {
                proxy(Comp.prototype, "_props", key);
              }
            }

            function initComputed$1 (Comp) {
              var computed = Comp.options.computed;
              for (var key in computed) {
                defineComputed(Comp.prototype, key, computed[key]);
              }
            }

            /*  */

            function initAssetRegisters (Vue) {
              /**
               * Create asset registration methods.
               */
              ASSET_TYPES.forEach(function (type) {
                Vue[type] = function (
                  id,
                  definition
                ) {
                  if (!definition) {
                    return this.options[type + 's'][id]
                  } else {
                    /* istanbul ignore if */
                    if ( type === 'component') {
                      validateComponentName(id);
                    }
                    if (type === 'component' && isPlainObject(definition)) {
                      definition.name = definition.name || id;
                      definition = this.options._base.extend(definition);
                    }
                    if (type === 'directive' && typeof definition === 'function') {
                      definition = { bind: definition, update: definition };
                    }
                    this.options[type + 's'][id] = definition;
                    return definition
                  }
                };
              });
            }

            /*  */



            function getComponentName (opts) {
              return opts && (opts.Ctor.options.name || opts.tag)
            }

            function matches (pattern, name) {
              if (Array.isArray(pattern)) {
                return pattern.indexOf(name) > -1
              } else if (typeof pattern === 'string') {
                return pattern.split(',').indexOf(name) > -1
              } else if (isRegExp(pattern)) {
                return pattern.test(name)
              }
              /* istanbul ignore next */
              return false
            }

            function pruneCache (keepAliveInstance, filter) {
              var cache = keepAliveInstance.cache;
              var keys = keepAliveInstance.keys;
              var _vnode = keepAliveInstance._vnode;
              for (var key in cache) {
                var cachedNode = cache[key];
                if (cachedNode) {
                  var name = getComponentName(cachedNode.componentOptions);
                  if (name && !filter(name)) {
                    pruneCacheEntry(cache, key, keys, _vnode);
                  }
                }
              }
            }

            function pruneCacheEntry (
              cache,
              key,
              keys,
              current
            ) {
              var cached$$1 = cache[key];
              if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
                cached$$1.componentInstance.$destroy();
              }
              cache[key] = null;
              remove(keys, key);
            }

            var patternTypes = [String, RegExp, Array];

            var KeepAlive = {
              name: 'keep-alive',
              abstract: true,

              props: {
                include: patternTypes,
                exclude: patternTypes,
                max: [String, Number]
              },

              created: function created () {
                this.cache = Object.create(null);
                this.keys = [];
              },

              destroyed: function destroyed () {
                for (var key in this.cache) {
                  pruneCacheEntry(this.cache, key, this.keys);
                }
              },

              mounted: function mounted () {
                var this$1 = this;

                this.$watch('include', function (val) {
                  pruneCache(this$1, function (name) { return matches(val, name); });
                });
                this.$watch('exclude', function (val) {
                  pruneCache(this$1, function (name) { return !matches(val, name); });
                });
              },

              render: function render () {
                var slot = this.$slots.default;
                var vnode = getFirstComponentChild(slot);
                var componentOptions = vnode && vnode.componentOptions;
                if (componentOptions) {
                  // check pattern
                  var name = getComponentName(componentOptions);
                  var ref = this;
                  var include = ref.include;
                  var exclude = ref.exclude;
                  if (
                    // not included
                    (include && (!name || !matches(include, name))) ||
                    // excluded
                    (exclude && name && matches(exclude, name))
                  ) {
                    return vnode
                  }

                  var ref$1 = this;
                  var cache = ref$1.cache;
                  var keys = ref$1.keys;
                  var key = vnode.key == null
                    // same constructor may get registered as different local components
                    // so cid alone is not enough (#3269)
                    ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
                    : vnode.key;
                  if (cache[key]) {
                    vnode.componentInstance = cache[key].componentInstance;
                    // make current key freshest
                    remove(keys, key);
                    keys.push(key);
                  } else {
                    cache[key] = vnode;
                    keys.push(key);
                    // prune oldest entry
                    if (this.max && keys.length > parseInt(this.max)) {
                      pruneCacheEntry(cache, keys[0], keys, this._vnode);
                    }
                  }

                  vnode.data.keepAlive = true;
                }
                return vnode || (slot && slot[0])
              }
            };

            var builtInComponents = {
              KeepAlive: KeepAlive
            };

            /*  */

            function initGlobalAPI (Vue) {
              // config
              var configDef = {};
              configDef.get = function () { return config$1; };
              {
                configDef.set = function () {
                  warn(
                    'Do not replace the Vue.config object, set individual fields instead.'
                  );
                };
              }
              Object.defineProperty(Vue, 'config', configDef);

              // exposed util methods.
              // NOTE: these are not considered part of the public API - avoid relying on
              // them unless you are aware of the risk.
              Vue.util = {
                warn: warn,
                extend: extend,
                mergeOptions: mergeOptions,
                defineReactive: defineReactive$$1
              };

              Vue.set = set;
              Vue.delete = del;
              Vue.nextTick = nextTick$1;

              // 2.6 explicit observable API
              Vue.observable = function (obj) {
                observe(obj);
                return obj
              };

              Vue.options = Object.create(null);
              ASSET_TYPES.forEach(function (type) {
                Vue.options[type + 's'] = Object.create(null);
              });

              // this is used to identify the "base" constructor to extend all plain-object
              // components with in Weex's multi-instance scenarios.
              Vue.options._base = Vue;

              extend(Vue.options.components, builtInComponents);

              initUse(Vue);
              initMixin$1(Vue);
              initExtend(Vue);
              initAssetRegisters(Vue);
            }

            initGlobalAPI(Vue);

            Object.defineProperty(Vue.prototype, '$isServer', {
              get: isServerRendering
            });

            Object.defineProperty(Vue.prototype, '$ssrContext', {
              get: function get () {
                /* istanbul ignore next */
                return this.$vnode && this.$vnode.ssrContext
              }
            });

            // expose FunctionalRenderContext for ssr runtime helper installation
            Object.defineProperty(Vue, 'FunctionalRenderContext', {
              value: FunctionalRenderContext
            });

            Vue.version = '2.6.10';

            /*  */

            // these are reserved for web because they are directly compiled away
            // during template compilation
            var isReservedAttr = makeMap('style,class');

            // attributes that should be using props for binding
            var acceptValue = makeMap('input,textarea,option,select,progress');
            var mustUseProp = function (tag, type, attr) {
              return (
                (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
                (attr === 'selected' && tag === 'option') ||
                (attr === 'checked' && tag === 'input') ||
                (attr === 'muted' && tag === 'video')
              )
            };

            var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

            var isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');

            var convertEnumeratedValue = function (key, value) {
              return isFalsyAttrValue(value) || value === 'false'
                ? 'false'
                // allow arbitrary string value for contenteditable
                : key === 'contenteditable' && isValidContentEditableValue(value)
                  ? value
                  : 'true'
            };

            var isBooleanAttr = makeMap(
              'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
              'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
              'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
              'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
              'required,reversed,scoped,seamless,selected,sortable,translate,' +
              'truespeed,typemustmatch,visible'
            );

            var xlinkNS = 'http://www.w3.org/1999/xlink';

            var isXlink = function (name) {
              return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
            };

            var getXlinkProp = function (name) {
              return isXlink(name) ? name.slice(6, name.length) : ''
            };

            var isFalsyAttrValue = function (val) {
              return val == null || val === false
            };

            /*  */

            function genClassForVnode (vnode) {
              var data = vnode.data;
              var parentNode = vnode;
              var childNode = vnode;
              while (isDef(childNode.componentInstance)) {
                childNode = childNode.componentInstance._vnode;
                if (childNode && childNode.data) {
                  data = mergeClassData(childNode.data, data);
                }
              }
              while (isDef(parentNode = parentNode.parent)) {
                if (parentNode && parentNode.data) {
                  data = mergeClassData(data, parentNode.data);
                }
              }
              return renderClass(data.staticClass, data.class)
            }

            function mergeClassData (child, parent) {
              return {
                staticClass: concat(child.staticClass, parent.staticClass),
                class: isDef(child.class)
                  ? [child.class, parent.class]
                  : parent.class
              }
            }

            function renderClass (
              staticClass,
              dynamicClass
            ) {
              if (isDef(staticClass) || isDef(dynamicClass)) {
                return concat(staticClass, stringifyClass(dynamicClass))
              }
              /* istanbul ignore next */
              return ''
            }

            function concat (a, b) {
              return a ? b ? (a + ' ' + b) : a : (b || '')
            }

            function stringifyClass (value) {
              if (Array.isArray(value)) {
                return stringifyArray(value)
              }
              if (isObject(value)) {
                return stringifyObject(value)
              }
              if (typeof value === 'string') {
                return value
              }
              /* istanbul ignore next */
              return ''
            }

            function stringifyArray (value) {
              var res = '';
              var stringified;
              for (var i = 0, l = value.length; i < l; i++) {
                if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
                  if (res) { res += ' '; }
                  res += stringified;
                }
              }
              return res
            }

            function stringifyObject (value) {
              var res = '';
              for (var key in value) {
                if (value[key]) {
                  if (res) { res += ' '; }
                  res += key;
                }
              }
              return res
            }

            /*  */

            var namespaceMap = {
              svg: 'http://www.w3.org/2000/svg',
              math: 'http://www.w3.org/1998/Math/MathML'
            };

            var isHTMLTag = makeMap(
              'html,body,base,head,link,meta,style,title,' +
              'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
              'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
              'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
              's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
              'embed,object,param,source,canvas,script,noscript,del,ins,' +
              'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
              'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
              'output,progress,select,textarea,' +
              'details,dialog,menu,menuitem,summary,' +
              'content,element,shadow,template,blockquote,iframe,tfoot'
            );

            // this map is intentionally selective, only covering SVG elements that may
            // contain child elements.
            var isSVG = makeMap(
              'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
              'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
              'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
              true
            );

            var isReservedTag = function (tag) {
              return isHTMLTag(tag) || isSVG(tag)
            };

            function getTagNamespace (tag) {
              if (isSVG(tag)) {
                return 'svg'
              }
              // basic support for MathML
              // note it doesn't support other MathML elements being component roots
              if (tag === 'math') {
                return 'math'
              }
            }

            var unknownElementCache = Object.create(null);
            function isUnknownElement (tag) {
              /* istanbul ignore if */
              if (!inBrowser) {
                return true
              }
              if (isReservedTag(tag)) {
                return false
              }
              tag = tag.toLowerCase();
              /* istanbul ignore if */
              if (unknownElementCache[tag] != null) {
                return unknownElementCache[tag]
              }
              var el = document.createElement(tag);
              if (tag.indexOf('-') > -1) {
                // http://stackoverflow.com/a/28210364/1070244
                return (unknownElementCache[tag] = (
                  el.constructor === window.HTMLUnknownElement ||
                  el.constructor === window.HTMLElement
                ))
              } else {
                return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
              }
            }

            var isTextInputType = makeMap('text,number,password,search,email,tel,url');

            /*  */

            /**
             * Query an element selector if it's not an element already.
             */
            function query (el) {
              if (typeof el === 'string') {
                var selected = document.querySelector(el);
                if (!selected) {
                   warn(
                    'Cannot find element: ' + el
                  );
                  return document.createElement('div')
                }
                return selected
              } else {
                return el
              }
            }

            /*  */

            function createElement$1 (tagName, vnode) {
              var elm = document.createElement(tagName);
              if (tagName !== 'select') {
                return elm
              }
              // false or null will remove the attribute but undefined will not
              if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
                elm.setAttribute('multiple', 'multiple');
              }
              return elm
            }

            function createElementNS (namespace, tagName) {
              return document.createElementNS(namespaceMap[namespace], tagName)
            }

            function createTextNode (text) {
              return document.createTextNode(text)
            }

            function createComment (text) {
              return document.createComment(text)
            }

            function insertBefore (parentNode, newNode, referenceNode) {
              parentNode.insertBefore(newNode, referenceNode);
            }

            function removeChild (node, child) {
              node.removeChild(child);
            }

            function appendChild (node, child) {
              node.appendChild(child);
            }

            function parentNode (node) {
              return node.parentNode
            }

            function nextSibling (node) {
              return node.nextSibling
            }

            function tagName (node) {
              return node.tagName
            }

            function setTextContent (node, text) {
              node.textContent = text;
            }

            function setStyleScope (node, scopeId) {
              node.setAttribute(scopeId, '');
            }

            var nodeOps = /*#__PURE__*/Object.freeze({
              createElement: createElement$1,
              createElementNS: createElementNS,
              createTextNode: createTextNode,
              createComment: createComment,
              insertBefore: insertBefore,
              removeChild: removeChild,
              appendChild: appendChild,
              parentNode: parentNode,
              nextSibling: nextSibling,
              tagName: tagName,
              setTextContent: setTextContent,
              setStyleScope: setStyleScope
            });

            /*  */

            var ref = {
              create: function create (_, vnode) {
                registerRef(vnode);
              },
              update: function update (oldVnode, vnode) {
                if (oldVnode.data.ref !== vnode.data.ref) {
                  registerRef(oldVnode, true);
                  registerRef(vnode);
                }
              },
              destroy: function destroy (vnode) {
                registerRef(vnode, true);
              }
            };

            function registerRef (vnode, isRemoval) {
              var key = vnode.data.ref;
              if (!isDef(key)) { return }

              var vm = vnode.context;
              var ref = vnode.componentInstance || vnode.elm;
              var refs = vm.$refs;
              if (isRemoval) {
                if (Array.isArray(refs[key])) {
                  remove(refs[key], ref);
                } else if (refs[key] === ref) {
                  refs[key] = undefined;
                }
              } else {
                if (vnode.data.refInFor) {
                  if (!Array.isArray(refs[key])) {
                    refs[key] = [ref];
                  } else if (refs[key].indexOf(ref) < 0) {
                    // $flow-disable-line
                    refs[key].push(ref);
                  }
                } else {
                  refs[key] = ref;
                }
              }
            }

            /**
             * Virtual DOM patching algorithm based on Snabbdom by
             * Simon Friis Vindum (@paldepind)
             * Licensed under the MIT License
             * https://github.com/paldepind/snabbdom/blob/master/LICENSE
             *
             * modified by Evan You (@yyx990803)
             *
             * Not type-checking this because this file is perf-critical and the cost
             * of making flow understand it is not worth it.
             */

            var emptyNode = new VNode('', {}, []);

            var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

            function sameVnode (a, b) {
              return (
                a.key === b.key && (
                  (
                    a.tag === b.tag &&
                    a.isComment === b.isComment &&
                    isDef(a.data) === isDef(b.data) &&
                    sameInputType(a, b)
                  ) || (
                    isTrue(a.isAsyncPlaceholder) &&
                    a.asyncFactory === b.asyncFactory &&
                    isUndef(b.asyncFactory.error)
                  )
                )
              )
            }

            function sameInputType (a, b) {
              if (a.tag !== 'input') { return true }
              var i;
              var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
              var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
              return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)
            }

            function createKeyToOldIdx (children, beginIdx, endIdx) {
              var i, key;
              var map = {};
              for (i = beginIdx; i <= endIdx; ++i) {
                key = children[i].key;
                if (isDef(key)) { map[key] = i; }
              }
              return map
            }

            function createPatchFunction (backend) {
              var i, j;
              var cbs = {};

              var modules = backend.modules;
              var nodeOps = backend.nodeOps;

              for (i = 0; i < hooks.length; ++i) {
                cbs[hooks[i]] = [];
                for (j = 0; j < modules.length; ++j) {
                  if (isDef(modules[j][hooks[i]])) {
                    cbs[hooks[i]].push(modules[j][hooks[i]]);
                  }
                }
              }

              function emptyNodeAt (elm) {
                return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
              }

              function createRmCb (childElm, listeners) {
                function remove$$1 () {
                  if (--remove$$1.listeners === 0) {
                    removeNode(childElm);
                  }
                }
                remove$$1.listeners = listeners;
                return remove$$1
              }

              function removeNode (el) {
                var parent = nodeOps.parentNode(el);
                // element may have already been removed due to v-html / v-text
                if (isDef(parent)) {
                  nodeOps.removeChild(parent, el);
                }
              }

              function isUnknownElement$$1 (vnode, inVPre) {
                return (
                  !inVPre &&
                  !vnode.ns &&
                  !(
                    config$1.ignoredElements.length &&
                    config$1.ignoredElements.some(function (ignore) {
                      return isRegExp(ignore)
                        ? ignore.test(vnode.tag)
                        : ignore === vnode.tag
                    })
                  ) &&
                  config$1.isUnknownElement(vnode.tag)
                )
              }

              var creatingElmInVPre = 0;

              function createElm (
                vnode,
                insertedVnodeQueue,
                parentElm,
                refElm,
                nested,
                ownerArray,
                index
              ) {
                if (isDef(vnode.elm) && isDef(ownerArray)) {
                  // This vnode was used in a previous render!
                  // now it's used as a new node, overwriting its elm would cause
                  // potential patch errors down the road when it's used as an insertion
                  // reference node. Instead, we clone the node on-demand before creating
                  // associated DOM element for it.
                  vnode = ownerArray[index] = cloneVNode(vnode);
                }

                vnode.isRootInsert = !nested; // for transition enter check
                if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
                  return
                }

                var data = vnode.data;
                var children = vnode.children;
                var tag = vnode.tag;
                if (isDef(tag)) {
                  {
                    if (data && data.pre) {
                      creatingElmInVPre++;
                    }
                    if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
                      warn(
                        'Unknown custom element: <' + tag + '> - did you ' +
                        'register the component correctly? For recursive components, ' +
                        'make sure to provide the "name" option.',
                        vnode.context
                      );
                    }
                  }

                  vnode.elm = vnode.ns
                    ? nodeOps.createElementNS(vnode.ns, tag)
                    : nodeOps.createElement(tag, vnode);
                  setScope(vnode);

                  /* istanbul ignore if */
                  {
                    createChildren(vnode, children, insertedVnodeQueue);
                    if (isDef(data)) {
                      invokeCreateHooks(vnode, insertedVnodeQueue);
                    }
                    insert(parentElm, vnode.elm, refElm);
                  }

                  if ( data && data.pre) {
                    creatingElmInVPre--;
                  }
                } else if (isTrue(vnode.isComment)) {
                  vnode.elm = nodeOps.createComment(vnode.text);
                  insert(parentElm, vnode.elm, refElm);
                } else {
                  vnode.elm = nodeOps.createTextNode(vnode.text);
                  insert(parentElm, vnode.elm, refElm);
                }
              }

              function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
                var i = vnode.data;
                if (isDef(i)) {
                  var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
                  if (isDef(i = i.hook) && isDef(i = i.init)) {
                    i(vnode, false /* hydrating */);
                  }
                  // after calling the init hook, if the vnode is a child component
                  // it should've created a child instance and mounted it. the child
                  // component also has set the placeholder vnode's elm.
                  // in that case we can just return the element and be done.
                  if (isDef(vnode.componentInstance)) {
                    initComponent(vnode, insertedVnodeQueue);
                    insert(parentElm, vnode.elm, refElm);
                    if (isTrue(isReactivated)) {
                      reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
                    }
                    return true
                  }
                }
              }

              function initComponent (vnode, insertedVnodeQueue) {
                if (isDef(vnode.data.pendingInsert)) {
                  insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
                  vnode.data.pendingInsert = null;
                }
                vnode.elm = vnode.componentInstance.$el;
                if (isPatchable(vnode)) {
                  invokeCreateHooks(vnode, insertedVnodeQueue);
                  setScope(vnode);
                } else {
                  // empty component root.
                  // skip all element-related modules except for ref (#3455)
                  registerRef(vnode);
                  // make sure to invoke the insert hook
                  insertedVnodeQueue.push(vnode);
                }
              }

              function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
                var i;
                // hack for #4339: a reactivated component with inner transition
                // does not trigger because the inner node's created hooks are not called
                // again. It's not ideal to involve module-specific logic in here but
                // there doesn't seem to be a better way to do it.
                var innerNode = vnode;
                while (innerNode.componentInstance) {
                  innerNode = innerNode.componentInstance._vnode;
                  if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
                    for (i = 0; i < cbs.activate.length; ++i) {
                      cbs.activate[i](emptyNode, innerNode);
                    }
                    insertedVnodeQueue.push(innerNode);
                    break
                  }
                }
                // unlike a newly created component,
                // a reactivated keep-alive component doesn't insert itself
                insert(parentElm, vnode.elm, refElm);
              }

              function insert (parent, elm, ref$$1) {
                if (isDef(parent)) {
                  if (isDef(ref$$1)) {
                    if (nodeOps.parentNode(ref$$1) === parent) {
                      nodeOps.insertBefore(parent, elm, ref$$1);
                    }
                  } else {
                    nodeOps.appendChild(parent, elm);
                  }
                }
              }

              function createChildren (vnode, children, insertedVnodeQueue) {
                if (Array.isArray(children)) {
                  {
                    checkDuplicateKeys(children);
                  }
                  for (var i = 0; i < children.length; ++i) {
                    createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);
                  }
                } else if (isPrimitive(vnode.text)) {
                  nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
                }
              }

              function isPatchable (vnode) {
                while (vnode.componentInstance) {
                  vnode = vnode.componentInstance._vnode;
                }
                return isDef(vnode.tag)
              }

              function invokeCreateHooks (vnode, insertedVnodeQueue) {
                for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                  cbs.create[i$1](emptyNode, vnode);
                }
                i = vnode.data.hook; // Reuse variable
                if (isDef(i)) {
                  if (isDef(i.create)) { i.create(emptyNode, vnode); }
                  if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
                }
              }

              // set scope id attribute for scoped CSS.
              // this is implemented as a special case to avoid the overhead
              // of going through the normal attribute patching process.
              function setScope (vnode) {
                var i;
                if (isDef(i = vnode.fnScopeId)) {
                  nodeOps.setStyleScope(vnode.elm, i);
                } else {
                  var ancestor = vnode;
                  while (ancestor) {
                    if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
                      nodeOps.setStyleScope(vnode.elm, i);
                    }
                    ancestor = ancestor.parent;
                  }
                }
                // for slot content they should also get the scopeId from the host instance.
                if (isDef(i = activeInstance) &&
                  i !== vnode.context &&
                  i !== vnode.fnContext &&
                  isDef(i = i.$options._scopeId)
                ) {
                  nodeOps.setStyleScope(vnode.elm, i);
                }
              }

              function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
                for (; startIdx <= endIdx; ++startIdx) {
                  createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
                }
              }

              function invokeDestroyHook (vnode) {
                var i, j;
                var data = vnode.data;
                if (isDef(data)) {
                  if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
                  for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
                }
                if (isDef(i = vnode.children)) {
                  for (j = 0; j < vnode.children.length; ++j) {
                    invokeDestroyHook(vnode.children[j]);
                  }
                }
              }

              function removeVnodes (parentElm, vnodes, startIdx, endIdx) {
                for (; startIdx <= endIdx; ++startIdx) {
                  var ch = vnodes[startIdx];
                  if (isDef(ch)) {
                    if (isDef(ch.tag)) {
                      removeAndInvokeRemoveHook(ch);
                      invokeDestroyHook(ch);
                    } else { // Text node
                      removeNode(ch.elm);
                    }
                  }
                }
              }

              function removeAndInvokeRemoveHook (vnode, rm) {
                if (isDef(rm) || isDef(vnode.data)) {
                  var i;
                  var listeners = cbs.remove.length + 1;
                  if (isDef(rm)) {
                    // we have a recursively passed down rm callback
                    // increase the listeners count
                    rm.listeners += listeners;
                  } else {
                    // directly removing
                    rm = createRmCb(vnode.elm, listeners);
                  }
                  // recursively invoke hooks on child component root node
                  if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
                    removeAndInvokeRemoveHook(i, rm);
                  }
                  for (i = 0; i < cbs.remove.length; ++i) {
                    cbs.remove[i](vnode, rm);
                  }
                  if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
                    i(vnode, rm);
                  } else {
                    rm();
                  }
                } else {
                  removeNode(vnode.elm);
                }
              }

              function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
                var oldStartIdx = 0;
                var newStartIdx = 0;
                var oldEndIdx = oldCh.length - 1;
                var oldStartVnode = oldCh[0];
                var oldEndVnode = oldCh[oldEndIdx];
                var newEndIdx = newCh.length - 1;
                var newStartVnode = newCh[0];
                var newEndVnode = newCh[newEndIdx];
                var oldKeyToIdx, idxInOld, vnodeToMove, refElm;

                // removeOnly is a special flag used only by <transition-group>
                // to ensure removed elements stay in correct relative positions
                // during leaving transitions
                var canMove = !removeOnly;

                {
                  checkDuplicateKeys(newCh);
                }

                while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
                  if (isUndef(oldStartVnode)) {
                    oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
                  } else if (isUndef(oldEndVnode)) {
                    oldEndVnode = oldCh[--oldEndIdx];
                  } else if (sameVnode(oldStartVnode, newStartVnode)) {
                    patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
                    oldStartVnode = oldCh[++oldStartIdx];
                    newStartVnode = newCh[++newStartIdx];
                  } else if (sameVnode(oldEndVnode, newEndVnode)) {
                    patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
                    oldEndVnode = oldCh[--oldEndIdx];
                    newEndVnode = newCh[--newEndIdx];
                  } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
                    patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
                    canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
                    oldStartVnode = oldCh[++oldStartIdx];
                    newEndVnode = newCh[--newEndIdx];
                  } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
                    patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
                    canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
                    oldEndVnode = oldCh[--oldEndIdx];
                    newStartVnode = newCh[++newStartIdx];
                  } else {
                    if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
                    idxInOld = isDef(newStartVnode.key)
                      ? oldKeyToIdx[newStartVnode.key]
                      : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);
                    if (isUndef(idxInOld)) { // New element
                      createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
                    } else {
                      vnodeToMove = oldCh[idxInOld];
                      if (sameVnode(vnodeToMove, newStartVnode)) {
                        patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
                        oldCh[idxInOld] = undefined;
                        canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
                      } else {
                        // same key but different element. treat as new element
                        createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
                      }
                    }
                    newStartVnode = newCh[++newStartIdx];
                  }
                }
                if (oldStartIdx > oldEndIdx) {
                  refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
                  addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
                } else if (newStartIdx > newEndIdx) {
                  removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
                }
              }

              function checkDuplicateKeys (children) {
                var seenKeys = {};
                for (var i = 0; i < children.length; i++) {
                  var vnode = children[i];
                  var key = vnode.key;
                  if (isDef(key)) {
                    if (seenKeys[key]) {
                      warn(
                        ("Duplicate keys detected: '" + key + "'. This may cause an update error."),
                        vnode.context
                      );
                    } else {
                      seenKeys[key] = true;
                    }
                  }
                }
              }

              function findIdxInOld (node, oldCh, start, end) {
                for (var i = start; i < end; i++) {
                  var c = oldCh[i];
                  if (isDef(c) && sameVnode(node, c)) { return i }
                }
              }

              function patchVnode (
                oldVnode,
                vnode,
                insertedVnodeQueue,
                ownerArray,
                index,
                removeOnly
              ) {
                if (oldVnode === vnode) {
                  return
                }

                if (isDef(vnode.elm) && isDef(ownerArray)) {
                  // clone reused vnode
                  vnode = ownerArray[index] = cloneVNode(vnode);
                }

                var elm = vnode.elm = oldVnode.elm;

                if (isTrue(oldVnode.isAsyncPlaceholder)) {
                  if (isDef(vnode.asyncFactory.resolved)) {
                    hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
                  } else {
                    vnode.isAsyncPlaceholder = true;
                  }
                  return
                }

                // reuse element for static trees.
                // note we only do this if the vnode is cloned -
                // if the new node is not cloned it means the render functions have been
                // reset by the hot-reload-api and we need to do a proper re-render.
                if (isTrue(vnode.isStatic) &&
                  isTrue(oldVnode.isStatic) &&
                  vnode.key === oldVnode.key &&
                  (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
                ) {
                  vnode.componentInstance = oldVnode.componentInstance;
                  return
                }

                var i;
                var data = vnode.data;
                if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
                  i(oldVnode, vnode);
                }

                var oldCh = oldVnode.children;
                var ch = vnode.children;
                if (isDef(data) && isPatchable(vnode)) {
                  for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
                  if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
                }
                if (isUndef(vnode.text)) {
                  if (isDef(oldCh) && isDef(ch)) {
                    if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
                  } else if (isDef(ch)) {
                    {
                      checkDuplicateKeys(ch);
                    }
                    if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
                    addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
                  } else if (isDef(oldCh)) {
                    removeVnodes(elm, oldCh, 0, oldCh.length - 1);
                  } else if (isDef(oldVnode.text)) {
                    nodeOps.setTextContent(elm, '');
                  }
                } else if (oldVnode.text !== vnode.text) {
                  nodeOps.setTextContent(elm, vnode.text);
                }
                if (isDef(data)) {
                  if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
                }
              }

              function invokeInsertHook (vnode, queue, initial) {
                // delay insert hooks for component root nodes, invoke them after the
                // element is really inserted
                if (isTrue(initial) && isDef(vnode.parent)) {
                  vnode.parent.data.pendingInsert = queue;
                } else {
                  for (var i = 0; i < queue.length; ++i) {
                    queue[i].data.hook.insert(queue[i]);
                  }
                }
              }

              var hydrationBailed = false;
              // list of modules that can skip create hook during hydration because they
              // are already rendered on the client or has no need for initialization
              // Note: style is excluded because it relies on initial clone for future
              // deep updates (#7063).
              var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');

              // Note: this is a browser-only function so we can assume elms are DOM nodes.
              function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {
                var i;
                var tag = vnode.tag;
                var data = vnode.data;
                var children = vnode.children;
                inVPre = inVPre || (data && data.pre);
                vnode.elm = elm;

                if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
                  vnode.isAsyncPlaceholder = true;
                  return true
                }
                // assert node match
                {
                  if (!assertNodeMatch(elm, vnode, inVPre)) {
                    return false
                  }
                }
                if (isDef(data)) {
                  if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
                  if (isDef(i = vnode.componentInstance)) {
                    // child component. it should have hydrated its own tree.
                    initComponent(vnode, insertedVnodeQueue);
                    return true
                  }
                }
                if (isDef(tag)) {
                  if (isDef(children)) {
                    // empty element, allow client to pick up and populate children
                    if (!elm.hasChildNodes()) {
                      createChildren(vnode, children, insertedVnodeQueue);
                    } else {
                      // v-html and domProps: innerHTML
                      if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
                        if (i !== elm.innerHTML) {
                          /* istanbul ignore if */
                          if (
                            typeof console !== 'undefined' &&
                            !hydrationBailed
                          ) {
                            hydrationBailed = true;
                            console.warn('Parent: ', elm);
                            console.warn('server innerHTML: ', i);
                            console.warn('client innerHTML: ', elm.innerHTML);
                          }
                          return false
                        }
                      } else {
                        // iterate and compare children lists
                        var childrenMatch = true;
                        var childNode = elm.firstChild;
                        for (var i$1 = 0; i$1 < children.length; i$1++) {
                          if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
                            childrenMatch = false;
                            break
                          }
                          childNode = childNode.nextSibling;
                        }
                        // if childNode is not null, it means the actual childNodes list is
                        // longer than the virtual children list.
                        if (!childrenMatch || childNode) {
                          /* istanbul ignore if */
                          if (
                            typeof console !== 'undefined' &&
                            !hydrationBailed
                          ) {
                            hydrationBailed = true;
                            console.warn('Parent: ', elm);
                            console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
                          }
                          return false
                        }
                      }
                    }
                  }
                  if (isDef(data)) {
                    var fullInvoke = false;
                    for (var key in data) {
                      if (!isRenderedModule(key)) {
                        fullInvoke = true;
                        invokeCreateHooks(vnode, insertedVnodeQueue);
                        break
                      }
                    }
                    if (!fullInvoke && data['class']) {
                      // ensure collecting deps for deep class bindings for future updates
                      traverse(data['class']);
                    }
                  }
                } else if (elm.data !== vnode.text) {
                  elm.data = vnode.text;
                }
                return true
              }

              function assertNodeMatch (node, vnode, inVPre) {
                if (isDef(vnode.tag)) {
                  return vnode.tag.indexOf('vue-component') === 0 || (
                    !isUnknownElement$$1(vnode, inVPre) &&
                    vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
                  )
                } else {
                  return node.nodeType === (vnode.isComment ? 8 : 3)
                }
              }

              return function patch (oldVnode, vnode, hydrating, removeOnly) {
                if (isUndef(vnode)) {
                  if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
                  return
                }

                var isInitialPatch = false;
                var insertedVnodeQueue = [];

                if (isUndef(oldVnode)) {
                  // empty mount (likely as component), create new root element
                  isInitialPatch = true;
                  createElm(vnode, insertedVnodeQueue);
                } else {
                  var isRealElement = isDef(oldVnode.nodeType);
                  if (!isRealElement && sameVnode(oldVnode, vnode)) {
                    // patch existing root node
                    patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);
                  } else {
                    if (isRealElement) {
                      // mounting to a real element
                      // check if this is server-rendered content and if we can perform
                      // a successful hydration.
                      if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
                        oldVnode.removeAttribute(SSR_ATTR);
                        hydrating = true;
                      }
                      if (isTrue(hydrating)) {
                        if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
                          invokeInsertHook(vnode, insertedVnodeQueue, true);
                          return oldVnode
                        } else {
                          warn(
                            'The client-side rendered virtual DOM tree is not matching ' +
                            'server-rendered content. This is likely caused by incorrect ' +
                            'HTML markup, for example nesting block-level elements inside ' +
                            '<p>, or missing <tbody>. Bailing hydration and performing ' +
                            'full client-side render.'
                          );
                        }
                      }
                      // either not server-rendered, or hydration failed.
                      // create an empty node and replace it
                      oldVnode = emptyNodeAt(oldVnode);
                    }

                    // replacing existing element
                    var oldElm = oldVnode.elm;
                    var parentElm = nodeOps.parentNode(oldElm);

                    // create new node
                    createElm(
                      vnode,
                      insertedVnodeQueue,
                      // extremely rare edge case: do not insert if old element is in a
                      // leaving transition. Only happens when combining transition +
                      // keep-alive + HOCs. (#4590)
                      oldElm._leaveCb ? null : parentElm,
                      nodeOps.nextSibling(oldElm)
                    );

                    // update parent placeholder node element, recursively
                    if (isDef(vnode.parent)) {
                      var ancestor = vnode.parent;
                      var patchable = isPatchable(vnode);
                      while (ancestor) {
                        for (var i = 0; i < cbs.destroy.length; ++i) {
                          cbs.destroy[i](ancestor);
                        }
                        ancestor.elm = vnode.elm;
                        if (patchable) {
                          for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                            cbs.create[i$1](emptyNode, ancestor);
                          }
                          // #6513
                          // invoke insert hooks that may have been merged by create hooks.
                          // e.g. for directives that uses the "inserted" hook.
                          var insert = ancestor.data.hook.insert;
                          if (insert.merged) {
                            // start at index 1 to avoid re-invoking component mounted hook
                            for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
                              insert.fns[i$2]();
                            }
                          }
                        } else {
                          registerRef(ancestor);
                        }
                        ancestor = ancestor.parent;
                      }
                    }

                    // destroy old node
                    if (isDef(parentElm)) {
                      removeVnodes(parentElm, [oldVnode], 0, 0);
                    } else if (isDef(oldVnode.tag)) {
                      invokeDestroyHook(oldVnode);
                    }
                  }
                }

                invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
                return vnode.elm
              }
            }

            /*  */

            var directives = {
              create: updateDirectives,
              update: updateDirectives,
              destroy: function unbindDirectives (vnode) {
                updateDirectives(vnode, emptyNode);
              }
            };

            function updateDirectives (oldVnode, vnode) {
              if (oldVnode.data.directives || vnode.data.directives) {
                _update(oldVnode, vnode);
              }
            }

            function _update (oldVnode, vnode) {
              var isCreate = oldVnode === emptyNode;
              var isDestroy = vnode === emptyNode;
              var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
              var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

              var dirsWithInsert = [];
              var dirsWithPostpatch = [];

              var key, oldDir, dir;
              for (key in newDirs) {
                oldDir = oldDirs[key];
                dir = newDirs[key];
                if (!oldDir) {
                  // new directive, bind
                  callHook$1(dir, 'bind', vnode, oldVnode);
                  if (dir.def && dir.def.inserted) {
                    dirsWithInsert.push(dir);
                  }
                } else {
                  // existing directive, update
                  dir.oldValue = oldDir.value;
                  dir.oldArg = oldDir.arg;
                  callHook$1(dir, 'update', vnode, oldVnode);
                  if (dir.def && dir.def.componentUpdated) {
                    dirsWithPostpatch.push(dir);
                  }
                }
              }

              if (dirsWithInsert.length) {
                var callInsert = function () {
                  for (var i = 0; i < dirsWithInsert.length; i++) {
                    callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
                  }
                };
                if (isCreate) {
                  mergeVNodeHook(vnode, 'insert', callInsert);
                } else {
                  callInsert();
                }
              }

              if (dirsWithPostpatch.length) {
                mergeVNodeHook(vnode, 'postpatch', function () {
                  for (var i = 0; i < dirsWithPostpatch.length; i++) {
                    callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
                  }
                });
              }

              if (!isCreate) {
                for (key in oldDirs) {
                  if (!newDirs[key]) {
                    // no longer present, unbind
                    callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
                  }
                }
              }
            }

            var emptyModifiers = Object.create(null);

            function normalizeDirectives$1 (
              dirs,
              vm
            ) {
              var res = Object.create(null);
              if (!dirs) {
                // $flow-disable-line
                return res
              }
              var i, dir;
              for (i = 0; i < dirs.length; i++) {
                dir = dirs[i];
                if (!dir.modifiers) {
                  // $flow-disable-line
                  dir.modifiers = emptyModifiers;
                }
                res[getRawDirName(dir)] = dir;
                dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
              }
              // $flow-disable-line
              return res
            }

            function getRawDirName (dir) {
              return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
            }

            function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
              var fn = dir.def && dir.def[hook];
              if (fn) {
                try {
                  fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
                } catch (e) {
                  handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
                }
              }
            }

            var baseModules = [
              ref,
              directives
            ];

            /*  */

            function updateAttrs (oldVnode, vnode) {
              var opts = vnode.componentOptions;
              if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
                return
              }
              if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
                return
              }
              var key, cur, old;
              var elm = vnode.elm;
              var oldAttrs = oldVnode.data.attrs || {};
              var attrs = vnode.data.attrs || {};
              // clone observed objects, as the user probably wants to mutate it
              if (isDef(attrs.__ob__)) {
                attrs = vnode.data.attrs = extend({}, attrs);
              }

              for (key in attrs) {
                cur = attrs[key];
                old = oldAttrs[key];
                if (old !== cur) {
                  setAttr(elm, key, cur);
                }
              }
              // #4391: in IE9, setting type can reset value for input[type=radio]
              // #6666: IE/Edge forces progress value down to 1 before setting a max
              /* istanbul ignore if */
              if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
                setAttr(elm, 'value', attrs.value);
              }
              for (key in oldAttrs) {
                if (isUndef(attrs[key])) {
                  if (isXlink(key)) {
                    elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
                  } else if (!isEnumeratedAttr(key)) {
                    elm.removeAttribute(key);
                  }
                }
              }
            }

            function setAttr (el, key, value) {
              if (el.tagName.indexOf('-') > -1) {
                baseSetAttr(el, key, value);
              } else if (isBooleanAttr(key)) {
                // set attribute for blank value
                // e.g. <option disabled>Select one</option>
                if (isFalsyAttrValue(value)) {
                  el.removeAttribute(key);
                } else {
                  // technically allowfullscreen is a boolean attribute for <iframe>,
                  // but Flash expects a value of "true" when used on <embed> tag
                  value = key === 'allowfullscreen' && el.tagName === 'EMBED'
                    ? 'true'
                    : key;
                  el.setAttribute(key, value);
                }
              } else if (isEnumeratedAttr(key)) {
                el.setAttribute(key, convertEnumeratedValue(key, value));
              } else if (isXlink(key)) {
                if (isFalsyAttrValue(value)) {
                  el.removeAttributeNS(xlinkNS, getXlinkProp(key));
                } else {
                  el.setAttributeNS(xlinkNS, key, value);
                }
              } else {
                baseSetAttr(el, key, value);
              }
            }

            function baseSetAttr (el, key, value) {
              if (isFalsyAttrValue(value)) {
                el.removeAttribute(key);
              } else {
                // #7138: IE10 & 11 fires input event when setting placeholder on
                // <textarea>... block the first input event and remove the blocker
                // immediately.
                /* istanbul ignore if */
                if (
                  isIE && !isIE9 &&
                  el.tagName === 'TEXTAREA' &&
                  key === 'placeholder' && value !== '' && !el.__ieph
                ) {
                  var blocker = function (e) {
                    e.stopImmediatePropagation();
                    el.removeEventListener('input', blocker);
                  };
                  el.addEventListener('input', blocker);
                  // $flow-disable-line
                  el.__ieph = true; /* IE placeholder patched */
                }
                el.setAttribute(key, value);
              }
            }

            var attrs = {
              create: updateAttrs,
              update: updateAttrs
            };

            /*  */

            function updateClass (oldVnode, vnode) {
              var el = vnode.elm;
              var data = vnode.data;
              var oldData = oldVnode.data;
              if (
                isUndef(data.staticClass) &&
                isUndef(data.class) && (
                  isUndef(oldData) || (
                    isUndef(oldData.staticClass) &&
                    isUndef(oldData.class)
                  )
                )
              ) {
                return
              }

              var cls = genClassForVnode(vnode);

              // handle transition classes
              var transitionClass = el._transitionClasses;
              if (isDef(transitionClass)) {
                cls = concat(cls, stringifyClass(transitionClass));
              }

              // set the class
              if (cls !== el._prevClass) {
                el.setAttribute('class', cls);
                el._prevClass = cls;
              }
            }

            var klass = {
              create: updateClass,
              update: updateClass
            };

            /*  */

            /*  */

            /*  */

            /*  */

            // in some cases, the event used has to be determined at runtime
            // so we used some reserved tokens during compile.
            var RANGE_TOKEN = '__r';
            var CHECKBOX_RADIO_TOKEN = '__c';

            /*  */

            // normalize v-model event tokens that can only be determined at runtime.
            // it's important to place the event as the first in the array because
            // the whole point is ensuring the v-model callback gets called before
            // user-attached handlers.
            function normalizeEvents (on) {
              /* istanbul ignore if */
              if (isDef(on[RANGE_TOKEN])) {
                // IE input[type=range] only supports `change` event
                var event = isIE ? 'change' : 'input';
                on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
                delete on[RANGE_TOKEN];
              }
              // This was originally intended to fix #4521 but no longer necessary
              // after 2.5. Keeping it for backwards compat with generated code from < 2.4
              /* istanbul ignore if */
              if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
                on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
                delete on[CHECKBOX_RADIO_TOKEN];
              }
            }

            var target$1;

            function createOnceHandler$1 (event, handler, capture) {
              var _target = target$1; // save current target element in closure
              return function onceHandler () {
                var res = handler.apply(null, arguments);
                if (res !== null) {
                  remove$2(event, onceHandler, capture, _target);
                }
              }
            }

            // #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp
            // implementation and does not fire microtasks in between event propagation, so
            // safe to exclude.
            var useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);

            function add$1 (
              name,
              handler,
              capture,
              passive
            ) {
              // async edge case #6566: inner click event triggers patch, event handler
              // attached to outer element during patch, and triggered again. This
              // happens because browsers fire microtask ticks between event propagation.
              // the solution is simple: we save the timestamp when a handler is attached,
              // and the handler would only fire if the event passed to it was fired
              // AFTER it was attached.
              if (useMicrotaskFix) {
                var attachedTimestamp = currentFlushTimestamp;
                var original = handler;
                handler = original._wrapper = function (e) {
                  if (
                    // no bubbling, should always fire.
                    // this is just a safety net in case event.timeStamp is unreliable in
                    // certain weird environments...
                    e.target === e.currentTarget ||
                    // event is fired after handler attachment
                    e.timeStamp >= attachedTimestamp ||
                    // bail for environments that have buggy event.timeStamp implementations
                    // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState
                    // #9681 QtWebEngine event.timeStamp is negative value
                    e.timeStamp <= 0 ||
                    // #9448 bail if event is fired in another document in a multi-page
                    // electron/nw.js app, since event.timeStamp will be using a different
                    // starting reference
                    e.target.ownerDocument !== document
                  ) {
                    return original.apply(this, arguments)
                  }
                };
              }
              target$1.addEventListener(
                name,
                handler,
                supportsPassive
                  ? { capture: capture, passive: passive }
                  : capture
              );
            }

            function remove$2 (
              name,
              handler,
              capture,
              _target
            ) {
              (_target || target$1).removeEventListener(
                name,
                handler._wrapper || handler,
                capture
              );
            }

            function updateDOMListeners (oldVnode, vnode) {
              if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
                return
              }
              var on = vnode.data.on || {};
              var oldOn = oldVnode.data.on || {};
              target$1 = vnode.elm;
              normalizeEvents(on);
              updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);
              target$1 = undefined;
            }

            var events = {
              create: updateDOMListeners,
              update: updateDOMListeners
            };

            /*  */

            var svgContainer;

            function updateDOMProps (oldVnode, vnode) {
              if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
                return
              }
              var key, cur;
              var elm = vnode.elm;
              var oldProps = oldVnode.data.domProps || {};
              var props = vnode.data.domProps || {};
              // clone observed objects, as the user probably wants to mutate it
              if (isDef(props.__ob__)) {
                props = vnode.data.domProps = extend({}, props);
              }

              for (key in oldProps) {
                if (!(key in props)) {
                  elm[key] = '';
                }
              }

              for (key in props) {
                cur = props[key];
                // ignore children if the node has textContent or innerHTML,
                // as these will throw away existing DOM nodes and cause removal errors
                // on subsequent patches (#3360)
                if (key === 'textContent' || key === 'innerHTML') {
                  if (vnode.children) { vnode.children.length = 0; }
                  if (cur === oldProps[key]) { continue }
                  // #6601 work around Chrome version <= 55 bug where single textNode
                  // replaced by innerHTML/textContent retains its parentNode property
                  if (elm.childNodes.length === 1) {
                    elm.removeChild(elm.childNodes[0]);
                  }
                }

                if (key === 'value' && elm.tagName !== 'PROGRESS') {
                  // store value as _value as well since
                  // non-string values will be stringified
                  elm._value = cur;
                  // avoid resetting cursor position when value is the same
                  var strCur = isUndef(cur) ? '' : String(cur);
                  if (shouldUpdateValue(elm, strCur)) {
                    elm.value = strCur;
                  }
                } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {
                  // IE doesn't support innerHTML for SVG elements
                  svgContainer = svgContainer || document.createElement('div');
                  svgContainer.innerHTML = "<svg>" + cur + "</svg>";
                  var svg = svgContainer.firstChild;
                  while (elm.firstChild) {
                    elm.removeChild(elm.firstChild);
                  }
                  while (svg.firstChild) {
                    elm.appendChild(svg.firstChild);
                  }
                } else if (
                  // skip the update if old and new VDOM state is the same.
                  // `value` is handled separately because the DOM value may be temporarily
                  // out of sync with VDOM state due to focus, composition and modifiers.
                  // This  #4521 by skipping the unnecesarry `checked` update.
                  cur !== oldProps[key]
                ) {
                  // some property updates can throw
                  // e.g. `value` on <progress> w/ non-finite value
                  try {
                    elm[key] = cur;
                  } catch (e) {}
                }
              }
            }

            // check platforms/web/util/attrs.js acceptValue


            function shouldUpdateValue (elm, checkVal) {
              return (!elm.composing && (
                elm.tagName === 'OPTION' ||
                isNotInFocusAndDirty(elm, checkVal) ||
                isDirtyWithModifiers(elm, checkVal)
              ))
            }

            function isNotInFocusAndDirty (elm, checkVal) {
              // return true when textbox (.number and .trim) loses focus and its value is
              // not equal to the updated value
              var notInFocus = true;
              // #6157
              // work around IE bug when accessing document.activeElement in an iframe
              try { notInFocus = document.activeElement !== elm; } catch (e) {}
              return notInFocus && elm.value !== checkVal
            }

            function isDirtyWithModifiers (elm, newVal) {
              var value = elm.value;
              var modifiers = elm._vModifiers; // injected by v-model runtime
              if (isDef(modifiers)) {
                if (modifiers.number) {
                  return toNumber(value) !== toNumber(newVal)
                }
                if (modifiers.trim) {
                  return value.trim() !== newVal.trim()
                }
              }
              return value !== newVal
            }

            var domProps = {
              create: updateDOMProps,
              update: updateDOMProps
            };

            /*  */

            var parseStyleText = cached(function (cssText) {
              var res = {};
              var listDelimiter = /;(?![^(]*\))/g;
              var propertyDelimiter = /:(.+)/;
              cssText.split(listDelimiter).forEach(function (item) {
                if (item) {
                  var tmp = item.split(propertyDelimiter);
                  tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
                }
              });
              return res
            });

            // merge static and dynamic style data on the same vnode
            function normalizeStyleData (data) {
              var style = normalizeStyleBinding(data.style);
              // static style is pre-processed into an object during compilation
              // and is always a fresh object, so it's safe to merge into it
              return data.staticStyle
                ? extend(data.staticStyle, style)
                : style
            }

            // normalize possible array / string values into Object
            function normalizeStyleBinding (bindingStyle) {
              if (Array.isArray(bindingStyle)) {
                return toObject(bindingStyle)
              }
              if (typeof bindingStyle === 'string') {
                return parseStyleText(bindingStyle)
              }
              return bindingStyle
            }

            /**
             * parent component style should be after child's
             * so that parent component's style could override it
             */
            function getStyle (vnode, checkChild) {
              var res = {};
              var styleData;

              if (checkChild) {
                var childNode = vnode;
                while (childNode.componentInstance) {
                  childNode = childNode.componentInstance._vnode;
                  if (
                    childNode && childNode.data &&
                    (styleData = normalizeStyleData(childNode.data))
                  ) {
                    extend(res, styleData);
                  }
                }
              }

              if ((styleData = normalizeStyleData(vnode.data))) {
                extend(res, styleData);
              }

              var parentNode = vnode;
              while ((parentNode = parentNode.parent)) {
                if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
                  extend(res, styleData);
                }
              }
              return res
            }

            /*  */

            var cssVarRE = /^--/;
            var importantRE = /\s*!important$/;
            var setProp = function (el, name, val) {
              /* istanbul ignore if */
              if (cssVarRE.test(name)) {
                el.style.setProperty(name, val);
              } else if (importantRE.test(val)) {
                el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');
              } else {
                var normalizedName = normalize(name);
                if (Array.isArray(val)) {
                  // Support values array created by autoprefixer, e.g.
                  // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
                  // Set them one by one, and the browser will only set those it can recognize
                  for (var i = 0, len = val.length; i < len; i++) {
                    el.style[normalizedName] = val[i];
                  }
                } else {
                  el.style[normalizedName] = val;
                }
              }
            };

            var vendorNames = ['Webkit', 'Moz', 'ms'];

            var emptyStyle;
            var normalize = cached(function (prop) {
              emptyStyle = emptyStyle || document.createElement('div').style;
              prop = camelize(prop);
              if (prop !== 'filter' && (prop in emptyStyle)) {
                return prop
              }
              var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
              for (var i = 0; i < vendorNames.length; i++) {
                var name = vendorNames[i] + capName;
                if (name in emptyStyle) {
                  return name
                }
              }
            });

            function updateStyle (oldVnode, vnode) {
              var data = vnode.data;
              var oldData = oldVnode.data;

              if (isUndef(data.staticStyle) && isUndef(data.style) &&
                isUndef(oldData.staticStyle) && isUndef(oldData.style)
              ) {
                return
              }

              var cur, name;
              var el = vnode.elm;
              var oldStaticStyle = oldData.staticStyle;
              var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

              // if static style exists, stylebinding already merged into it when doing normalizeStyleData
              var oldStyle = oldStaticStyle || oldStyleBinding;

              var style = normalizeStyleBinding(vnode.data.style) || {};

              // store normalized style under a different key for next diff
              // make sure to clone it if it's reactive, since the user likely wants
              // to mutate it.
              vnode.data.normalizedStyle = isDef(style.__ob__)
                ? extend({}, style)
                : style;

              var newStyle = getStyle(vnode, true);

              for (name in oldStyle) {
                if (isUndef(newStyle[name])) {
                  setProp(el, name, '');
                }
              }
              for (name in newStyle) {
                cur = newStyle[name];
                if (cur !== oldStyle[name]) {
                  // ie9 setting to null has no effect, must use empty string
                  setProp(el, name, cur == null ? '' : cur);
                }
              }
            }

            var style = {
              create: updateStyle,
              update: updateStyle
            };

            /*  */

            var whitespaceRE = /\s+/;

            /**
             * Add class with compatibility for SVG since classList is not supported on
             * SVG elements in IE
             */
            function addClass (el, cls) {
              /* istanbul ignore if */
              if (!cls || !(cls = cls.trim())) {
                return
              }

              /* istanbul ignore else */
              if (el.classList) {
                if (cls.indexOf(' ') > -1) {
                  cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });
                } else {
                  el.classList.add(cls);
                }
              } else {
                var cur = " " + (el.getAttribute('class') || '') + " ";
                if (cur.indexOf(' ' + cls + ' ') < 0) {
                  el.setAttribute('class', (cur + cls).trim());
                }
              }
            }

            /**
             * Remove class with compatibility for SVG since classList is not supported on
             * SVG elements in IE
             */
            function removeClass (el, cls) {
              /* istanbul ignore if */
              if (!cls || !(cls = cls.trim())) {
                return
              }

              /* istanbul ignore else */
              if (el.classList) {
                if (cls.indexOf(' ') > -1) {
                  cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });
                } else {
                  el.classList.remove(cls);
                }
                if (!el.classList.length) {
                  el.removeAttribute('class');
                }
              } else {
                var cur = " " + (el.getAttribute('class') || '') + " ";
                var tar = ' ' + cls + ' ';
                while (cur.indexOf(tar) >= 0) {
                  cur = cur.replace(tar, ' ');
                }
                cur = cur.trim();
                if (cur) {
                  el.setAttribute('class', cur);
                } else {
                  el.removeAttribute('class');
                }
              }
            }

            /*  */

            function resolveTransition (def$$1) {
              if (!def$$1) {
                return
              }
              /* istanbul ignore else */
              if (typeof def$$1 === 'object') {
                var res = {};
                if (def$$1.css !== false) {
                  extend(res, autoCssTransition(def$$1.name || 'v'));
                }
                extend(res, def$$1);
                return res
              } else if (typeof def$$1 === 'string') {
                return autoCssTransition(def$$1)
              }
            }

            var autoCssTransition = cached(function (name) {
              return {
                enterClass: (name + "-enter"),
                enterToClass: (name + "-enter-to"),
                enterActiveClass: (name + "-enter-active"),
                leaveClass: (name + "-leave"),
                leaveToClass: (name + "-leave-to"),
                leaveActiveClass: (name + "-leave-active")
              }
            });

            var hasTransition = inBrowser && !isIE9;
            var TRANSITION = 'transition';
            var ANIMATION = 'animation';

            // Transition property/event sniffing
            var transitionProp = 'transition';
            var transitionEndEvent = 'transitionend';
            var animationProp = 'animation';
            var animationEndEvent = 'animationend';
            if (hasTransition) {
              /* istanbul ignore if */
              if (window.ontransitionend === undefined &&
                window.onwebkittransitionend !== undefined
              ) {
                transitionProp = 'WebkitTransition';
                transitionEndEvent = 'webkitTransitionEnd';
              }
              if (window.onanimationend === undefined &&
                window.onwebkitanimationend !== undefined
              ) {
                animationProp = 'WebkitAnimation';
                animationEndEvent = 'webkitAnimationEnd';
              }
            }

            // binding to window is necessary to make hot reload work in IE in strict mode
            var raf = inBrowser
              ? window.requestAnimationFrame
                ? window.requestAnimationFrame.bind(window)
                : setTimeout
              : /* istanbul ignore next */ function (fn) { return fn(); };

            function nextFrame (fn) {
              raf(function () {
                raf(fn);
              });
            }

            function addTransitionClass (el, cls) {
              var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
              if (transitionClasses.indexOf(cls) < 0) {
                transitionClasses.push(cls);
                addClass(el, cls);
              }
            }

            function removeTransitionClass (el, cls) {
              if (el._transitionClasses) {
                remove(el._transitionClasses, cls);
              }
              removeClass(el, cls);
            }

            function whenTransitionEnds (
              el,
              expectedType,
              cb
            ) {
              var ref = getTransitionInfo(el, expectedType);
              var type = ref.type;
              var timeout = ref.timeout;
              var propCount = ref.propCount;
              if (!type) { return cb() }
              var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
              var ended = 0;
              var end = function () {
                el.removeEventListener(event, onEnd);
                cb();
              };
              var onEnd = function (e) {
                if (e.target === el) {
                  if (++ended >= propCount) {
                    end();
                  }
                }
              };
              setTimeout(function () {
                if (ended < propCount) {
                  end();
                }
              }, timeout + 1);
              el.addEventListener(event, onEnd);
            }

            var transformRE = /\b(transform|all)(,|$)/;

            function getTransitionInfo (el, expectedType) {
              var styles = window.getComputedStyle(el);
              // JSDOM may return undefined for transition properties
              var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');
              var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');
              var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
              var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');
              var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');
              var animationTimeout = getTimeout(animationDelays, animationDurations);

              var type;
              var timeout = 0;
              var propCount = 0;
              /* istanbul ignore if */
              if (expectedType === TRANSITION) {
                if (transitionTimeout > 0) {
                  type = TRANSITION;
                  timeout = transitionTimeout;
                  propCount = transitionDurations.length;
                }
              } else if (expectedType === ANIMATION) {
                if (animationTimeout > 0) {
                  type = ANIMATION;
                  timeout = animationTimeout;
                  propCount = animationDurations.length;
                }
              } else {
                timeout = Math.max(transitionTimeout, animationTimeout);
                type = timeout > 0
                  ? transitionTimeout > animationTimeout
                    ? TRANSITION
                    : ANIMATION
                  : null;
                propCount = type
                  ? type === TRANSITION
                    ? transitionDurations.length
                    : animationDurations.length
                  : 0;
              }
              var hasTransform =
                type === TRANSITION &&
                transformRE.test(styles[transitionProp + 'Property']);
              return {
                type: type,
                timeout: timeout,
                propCount: propCount,
                hasTransform: hasTransform
              }
            }

            function getTimeout (delays, durations) {
              /* istanbul ignore next */
              while (delays.length < durations.length) {
                delays = delays.concat(delays);
              }

              return Math.max.apply(null, durations.map(function (d, i) {
                return toMs(d) + toMs(delays[i])
              }))
            }

            // Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers
            // in a locale-dependent way, using a comma instead of a dot.
            // If comma is not replaced with a dot, the input will be rounded down (i.e. acting
            // as a floor function) causing unexpected behaviors
            function toMs (s) {
              return Number(s.slice(0, -1).replace(',', '.')) * 1000
            }

            /*  */

            function enter (vnode, toggleDisplay) {
              var el = vnode.elm;

              // call leave callback now
              if (isDef(el._leaveCb)) {
                el._leaveCb.cancelled = true;
                el._leaveCb();
              }

              var data = resolveTransition(vnode.data.transition);
              if (isUndef(data)) {
                return
              }

              /* istanbul ignore if */
              if (isDef(el._enterCb) || el.nodeType !== 1) {
                return
              }

              var css = data.css;
              var type = data.type;
              var enterClass = data.enterClass;
              var enterToClass = data.enterToClass;
              var enterActiveClass = data.enterActiveClass;
              var appearClass = data.appearClass;
              var appearToClass = data.appearToClass;
              var appearActiveClass = data.appearActiveClass;
              var beforeEnter = data.beforeEnter;
              var enter = data.enter;
              var afterEnter = data.afterEnter;
              var enterCancelled = data.enterCancelled;
              var beforeAppear = data.beforeAppear;
              var appear = data.appear;
              var afterAppear = data.afterAppear;
              var appearCancelled = data.appearCancelled;
              var duration = data.duration;

              // activeInstance will always be the <transition> component managing this
              // transition. One edge case to check is when the <transition> is placed
              // as the root node of a child component. In that case we need to check
              // <transition>'s parent for appear check.
              var context = activeInstance;
              var transitionNode = activeInstance.$vnode;
              while (transitionNode && transitionNode.parent) {
                context = transitionNode.context;
                transitionNode = transitionNode.parent;
              }

              var isAppear = !context._isMounted || !vnode.isRootInsert;

              if (isAppear && !appear && appear !== '') {
                return
              }

              var startClass = isAppear && appearClass
                ? appearClass
                : enterClass;
              var activeClass = isAppear && appearActiveClass
                ? appearActiveClass
                : enterActiveClass;
              var toClass = isAppear && appearToClass
                ? appearToClass
                : enterToClass;

              var beforeEnterHook = isAppear
                ? (beforeAppear || beforeEnter)
                : beforeEnter;
              var enterHook = isAppear
                ? (typeof appear === 'function' ? appear : enter)
                : enter;
              var afterEnterHook = isAppear
                ? (afterAppear || afterEnter)
                : afterEnter;
              var enterCancelledHook = isAppear
                ? (appearCancelled || enterCancelled)
                : enterCancelled;

              var explicitEnterDuration = toNumber(
                isObject(duration)
                  ? duration.enter
                  : duration
              );

              if ( explicitEnterDuration != null) {
                checkDuration(explicitEnterDuration, 'enter', vnode);
              }

              var expectsCSS = css !== false && !isIE9;
              var userWantsControl = getHookArgumentsLength(enterHook);

              var cb = el._enterCb = once$1(function () {
                if (expectsCSS) {
                  removeTransitionClass(el, toClass);
                  removeTransitionClass(el, activeClass);
                }
                if (cb.cancelled) {
                  if (expectsCSS) {
                    removeTransitionClass(el, startClass);
                  }
                  enterCancelledHook && enterCancelledHook(el);
                } else {
                  afterEnterHook && afterEnterHook(el);
                }
                el._enterCb = null;
              });

              if (!vnode.data.show) {
                // remove pending leave element on enter by injecting an insert hook
                mergeVNodeHook(vnode, 'insert', function () {
                  var parent = el.parentNode;
                  var pendingNode = parent && parent._pending && parent._pending[vnode.key];
                  if (pendingNode &&
                    pendingNode.tag === vnode.tag &&
                    pendingNode.elm._leaveCb
                  ) {
                    pendingNode.elm._leaveCb();
                  }
                  enterHook && enterHook(el, cb);
                });
              }

              // start enter transition
              beforeEnterHook && beforeEnterHook(el);
              if (expectsCSS) {
                addTransitionClass(el, startClass);
                addTransitionClass(el, activeClass);
                nextFrame(function () {
                  removeTransitionClass(el, startClass);
                  if (!cb.cancelled) {
                    addTransitionClass(el, toClass);
                    if (!userWantsControl) {
                      if (isValidDuration(explicitEnterDuration)) {
                        setTimeout(cb, explicitEnterDuration);
                      } else {
                        whenTransitionEnds(el, type, cb);
                      }
                    }
                  }
                });
              }

              if (vnode.data.show) {
                toggleDisplay && toggleDisplay();
                enterHook && enterHook(el, cb);
              }

              if (!expectsCSS && !userWantsControl) {
                cb();
              }
            }

            function leave (vnode, rm) {
              var el = vnode.elm;

              // call enter callback now
              if (isDef(el._enterCb)) {
                el._enterCb.cancelled = true;
                el._enterCb();
              }

              var data = resolveTransition(vnode.data.transition);
              if (isUndef(data) || el.nodeType !== 1) {
                return rm()
              }

              /* istanbul ignore if */
              if (isDef(el._leaveCb)) {
                return
              }

              var css = data.css;
              var type = data.type;
              var leaveClass = data.leaveClass;
              var leaveToClass = data.leaveToClass;
              var leaveActiveClass = data.leaveActiveClass;
              var beforeLeave = data.beforeLeave;
              var leave = data.leave;
              var afterLeave = data.afterLeave;
              var leaveCancelled = data.leaveCancelled;
              var delayLeave = data.delayLeave;
              var duration = data.duration;

              var expectsCSS = css !== false && !isIE9;
              var userWantsControl = getHookArgumentsLength(leave);

              var explicitLeaveDuration = toNumber(
                isObject(duration)
                  ? duration.leave
                  : duration
              );

              if ( isDef(explicitLeaveDuration)) {
                checkDuration(explicitLeaveDuration, 'leave', vnode);
              }

              var cb = el._leaveCb = once$1(function () {
                if (el.parentNode && el.parentNode._pending) {
                  el.parentNode._pending[vnode.key] = null;
                }
                if (expectsCSS) {
                  removeTransitionClass(el, leaveToClass);
                  removeTransitionClass(el, leaveActiveClass);
                }
                if (cb.cancelled) {
                  if (expectsCSS) {
                    removeTransitionClass(el, leaveClass);
                  }
                  leaveCancelled && leaveCancelled(el);
                } else {
                  rm();
                  afterLeave && afterLeave(el);
                }
                el._leaveCb = null;
              });

              if (delayLeave) {
                delayLeave(performLeave);
              } else {
                performLeave();
              }

              function performLeave () {
                // the delayed leave may have already been cancelled
                if (cb.cancelled) {
                  return
                }
                // record leaving element
                if (!vnode.data.show && el.parentNode) {
                  (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
                }
                beforeLeave && beforeLeave(el);
                if (expectsCSS) {
                  addTransitionClass(el, leaveClass);
                  addTransitionClass(el, leaveActiveClass);
                  nextFrame(function () {
                    removeTransitionClass(el, leaveClass);
                    if (!cb.cancelled) {
                      addTransitionClass(el, leaveToClass);
                      if (!userWantsControl) {
                        if (isValidDuration(explicitLeaveDuration)) {
                          setTimeout(cb, explicitLeaveDuration);
                        } else {
                          whenTransitionEnds(el, type, cb);
                        }
                      }
                    }
                  });
                }
                leave && leave(el, cb);
                if (!expectsCSS && !userWantsControl) {
                  cb();
                }
              }
            }

            // only used in dev mode
            function checkDuration (val, name, vnode) {
              if (typeof val !== 'number') {
                warn(
                  "<transition> explicit " + name + " duration is not a valid number - " +
                  "got " + (JSON.stringify(val)) + ".",
                  vnode.context
                );
              } else if (isNaN(val)) {
                warn(
                  "<transition> explicit " + name + " duration is NaN - " +
                  'the duration expression might be incorrect.',
                  vnode.context
                );
              }
            }

            function isValidDuration (val) {
              return typeof val === 'number' && !isNaN(val)
            }

            /**
             * Normalize a transition hook's argument length. The hook may be:
             * - a merged hook (invoker) with the original in .fns
             * - a wrapped component method (check ._length)
             * - a plain function (.length)
             */
            function getHookArgumentsLength (fn) {
              if (isUndef(fn)) {
                return false
              }
              var invokerFns = fn.fns;
              if (isDef(invokerFns)) {
                // invoker
                return getHookArgumentsLength(
                  Array.isArray(invokerFns)
                    ? invokerFns[0]
                    : invokerFns
                )
              } else {
                return (fn._length || fn.length) > 1
              }
            }

            function _enter (_, vnode) {
              if (vnode.data.show !== true) {
                enter(vnode);
              }
            }

            var transition = inBrowser ? {
              create: _enter,
              activate: _enter,
              remove: function remove$$1 (vnode, rm) {
                /* istanbul ignore else */
                if (vnode.data.show !== true) {
                  leave(vnode, rm);
                } else {
                  rm();
                }
              }
            } : {};

            var platformModules = [
              attrs,
              klass,
              events,
              domProps,
              style,
              transition
            ];

            /*  */

            // the directive module should be applied last, after all
            // built-in modules have been applied.
            var modules = platformModules.concat(baseModules);

            var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

            /**
             * Not type checking this file because flow doesn't like attaching
             * properties to Elements.
             */

            /* istanbul ignore if */
            if (isIE9) {
              // http://www.matts411.com/post/internet-explorer-9-oninput/
              document.addEventListener('selectionchange', function () {
                var el = document.activeElement;
                if (el && el.vmodel) {
                  trigger(el, 'input');
                }
              });
            }

            var directive = {
              inserted: function inserted (el, binding, vnode, oldVnode) {
                if (vnode.tag === 'select') {
                  // #6903
                  if (oldVnode.elm && !oldVnode.elm._vOptions) {
                    mergeVNodeHook(vnode, 'postpatch', function () {
                      directive.componentUpdated(el, binding, vnode);
                    });
                  } else {
                    setSelected(el, binding, vnode.context);
                  }
                  el._vOptions = [].map.call(el.options, getValue);
                } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
                  el._vModifiers = binding.modifiers;
                  if (!binding.modifiers.lazy) {
                    el.addEventListener('compositionstart', onCompositionStart);
                    el.addEventListener('compositionend', onCompositionEnd);
                    // Safari < 10.2 & UIWebView doesn't fire compositionend when
                    // switching focus before confirming composition choice
                    // this also fixes the issue where some browsers e.g. iOS Chrome
                    // fires "change" instead of "input" on autocomplete.
                    el.addEventListener('change', onCompositionEnd);
                    /* istanbul ignore if */
                    if (isIE9) {
                      el.vmodel = true;
                    }
                  }
                }
              },

              componentUpdated: function componentUpdated (el, binding, vnode) {
                if (vnode.tag === 'select') {
                  setSelected(el, binding, vnode.context);
                  // in case the options rendered by v-for have changed,
                  // it's possible that the value is out-of-sync with the rendered options.
                  // detect such cases and filter out values that no longer has a matching
                  // option in the DOM.
                  var prevOptions = el._vOptions;
                  var curOptions = el._vOptions = [].map.call(el.options, getValue);
                  if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {
                    // trigger change event if
                    // no matching option found for at least one value
                    var needReset = el.multiple
                      ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })
                      : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);
                    if (needReset) {
                      trigger(el, 'change');
                    }
                  }
                }
              }
            };

            function setSelected (el, binding, vm) {
              actuallySetSelected(el, binding, vm);
              /* istanbul ignore if */
              if (isIE || isEdge) {
                setTimeout(function () {
                  actuallySetSelected(el, binding, vm);
                }, 0);
              }
            }

            function actuallySetSelected (el, binding, vm) {
              var value = binding.value;
              var isMultiple = el.multiple;
              if (isMultiple && !Array.isArray(value)) {
                 warn(
                  "<select multiple v-model=\"" + (binding.expression) + "\"> " +
                  "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
                  vm
                );
                return
              }
              var selected, option;
              for (var i = 0, l = el.options.length; i < l; i++) {
                option = el.options[i];
                if (isMultiple) {
                  selected = looseIndexOf(value, getValue(option)) > -1;
                  if (option.selected !== selected) {
                    option.selected = selected;
                  }
                } else {
                  if (looseEqual(getValue(option), value)) {
                    if (el.selectedIndex !== i) {
                      el.selectedIndex = i;
                    }
                    return
                  }
                }
              }
              if (!isMultiple) {
                el.selectedIndex = -1;
              }
            }

            function hasNoMatchingOption (value, options) {
              return options.every(function (o) { return !looseEqual(o, value); })
            }

            function getValue (option) {
              return '_value' in option
                ? option._value
                : option.value
            }

            function onCompositionStart (e) {
              e.target.composing = true;
            }

            function onCompositionEnd (e) {
              // prevent triggering an input event for no reason
              if (!e.target.composing) { return }
              e.target.composing = false;
              trigger(e.target, 'input');
            }

            function trigger (el, type) {
              var e = document.createEvent('HTMLEvents');
              e.initEvent(type, true, true);
              el.dispatchEvent(e);
            }

            /*  */

            // recursively search for possible transition defined inside the component root
            function locateNode (vnode) {
              return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
                ? locateNode(vnode.componentInstance._vnode)
                : vnode
            }

            var show = {
              bind: function bind (el, ref, vnode) {
                var value = ref.value;

                vnode = locateNode(vnode);
                var transition$$1 = vnode.data && vnode.data.transition;
                var originalDisplay = el.__vOriginalDisplay =
                  el.style.display === 'none' ? '' : el.style.display;
                if (value && transition$$1) {
                  vnode.data.show = true;
                  enter(vnode, function () {
                    el.style.display = originalDisplay;
                  });
                } else {
                  el.style.display = value ? originalDisplay : 'none';
                }
              },

              update: function update (el, ref, vnode) {
                var value = ref.value;
                var oldValue = ref.oldValue;

                /* istanbul ignore if */
                if (!value === !oldValue) { return }
                vnode = locateNode(vnode);
                var transition$$1 = vnode.data && vnode.data.transition;
                if (transition$$1) {
                  vnode.data.show = true;
                  if (value) {
                    enter(vnode, function () {
                      el.style.display = el.__vOriginalDisplay;
                    });
                  } else {
                    leave(vnode, function () {
                      el.style.display = 'none';
                    });
                  }
                } else {
                  el.style.display = value ? el.__vOriginalDisplay : 'none';
                }
              },

              unbind: function unbind (
                el,
                binding,
                vnode,
                oldVnode,
                isDestroy
              ) {
                if (!isDestroy) {
                  el.style.display = el.__vOriginalDisplay;
                }
              }
            };

            var platformDirectives = {
              model: directive,
              show: show
            };

            /*  */

            var transitionProps = {
              name: String,
              appear: Boolean,
              css: Boolean,
              mode: String,
              type: String,
              enterClass: String,
              leaveClass: String,
              enterToClass: String,
              leaveToClass: String,
              enterActiveClass: String,
              leaveActiveClass: String,
              appearClass: String,
              appearActiveClass: String,
              appearToClass: String,
              duration: [Number, String, Object]
            };

            // in case the child is also an abstract component, e.g. <keep-alive>
            // we want to recursively retrieve the real component to be rendered
            function getRealChild (vnode) {
              var compOptions = vnode && vnode.componentOptions;
              if (compOptions && compOptions.Ctor.options.abstract) {
                return getRealChild(getFirstComponentChild(compOptions.children))
              } else {
                return vnode
              }
            }

            function extractTransitionData (comp) {
              var data = {};
              var options = comp.$options;
              // props
              for (var key in options.propsData) {
                data[key] = comp[key];
              }
              // events.
              // extract listeners and pass them directly to the transition methods
              var listeners = options._parentListeners;
              for (var key$1 in listeners) {
                data[camelize(key$1)] = listeners[key$1];
              }
              return data
            }

            function placeholder (h, rawChild) {
              if (/\d-keep-alive$/.test(rawChild.tag)) {
                return h('keep-alive', {
                  props: rawChild.componentOptions.propsData
                })
              }
            }

            function hasParentTransition (vnode) {
              while ((vnode = vnode.parent)) {
                if (vnode.data.transition) {
                  return true
                }
              }
            }

            function isSameChild (child, oldChild) {
              return oldChild.key === child.key && oldChild.tag === child.tag
            }

            var isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };

            var isVShowDirective = function (d) { return d.name === 'show'; };

            var Transition = {
              name: 'transition',
              props: transitionProps,
              abstract: true,

              render: function render (h) {
                var this$1 = this;

                var children = this.$slots.default;
                if (!children) {
                  return
                }

                // filter out text nodes (possible whitespaces)
                children = children.filter(isNotTextNode);
                /* istanbul ignore if */
                if (!children.length) {
                  return
                }

                // warn multiple elements
                if ( children.length > 1) {
                  warn(
                    '<transition> can only be used on a single element. Use ' +
                    '<transition-group> for lists.',
                    this.$parent
                  );
                }

                var mode = this.mode;

                // warn invalid mode
                if (
                  mode && mode !== 'in-out' && mode !== 'out-in'
                ) {
                  warn(
                    'invalid <transition> mode: ' + mode,
                    this.$parent
                  );
                }

                var rawChild = children[0];

                // if this is a component root node and the component's
                // parent container node also has transition, skip.
                if (hasParentTransition(this.$vnode)) {
                  return rawChild
                }

                // apply transition data to child
                // use getRealChild() to ignore abstract components e.g. keep-alive
                var child = getRealChild(rawChild);
                /* istanbul ignore if */
                if (!child) {
                  return rawChild
                }

                if (this._leaving) {
                  return placeholder(h, rawChild)
                }

                // ensure a key that is unique to the vnode type and to this transition
                // component instance. This key will be used to remove pending leaving nodes
                // during entering.
                var id = "__transition-" + (this._uid) + "-";
                child.key = child.key == null
                  ? child.isComment
                    ? id + 'comment'
                    : id + child.tag
                  : isPrimitive(child.key)
                    ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
                    : child.key;

                var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
                var oldRawChild = this._vnode;
                var oldChild = getRealChild(oldRawChild);

                // mark v-show
                // so that the transition module can hand over the control to the directive
                if (child.data.directives && child.data.directives.some(isVShowDirective)) {
                  child.data.show = true;
                }

                if (
                  oldChild &&
                  oldChild.data &&
                  !isSameChild(child, oldChild) &&
                  !isAsyncPlaceholder(oldChild) &&
                  // #6687 component root is a comment node
                  !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)
                ) {
                  // replace old child transition data with fresh one
                  // important for dynamic transitions!
                  var oldData = oldChild.data.transition = extend({}, data);
                  // handle transition mode
                  if (mode === 'out-in') {
                    // return placeholder node and queue update when leave finishes
                    this._leaving = true;
                    mergeVNodeHook(oldData, 'afterLeave', function () {
                      this$1._leaving = false;
                      this$1.$forceUpdate();
                    });
                    return placeholder(h, rawChild)
                  } else if (mode === 'in-out') {
                    if (isAsyncPlaceholder(child)) {
                      return oldRawChild
                    }
                    var delayedLeave;
                    var performLeave = function () { delayedLeave(); };
                    mergeVNodeHook(data, 'afterEnter', performLeave);
                    mergeVNodeHook(data, 'enterCancelled', performLeave);
                    mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
                  }
                }

                return rawChild
              }
            };

            /*  */

            var props = extend({
              tag: String,
              moveClass: String
            }, transitionProps);

            delete props.mode;

            var TransitionGroup = {
              props: props,

              beforeMount: function beforeMount () {
                var this$1 = this;

                var update = this._update;
                this._update = function (vnode, hydrating) {
                  var restoreActiveInstance = setActiveInstance(this$1);
                  // force removing pass
                  this$1.__patch__(
                    this$1._vnode,
                    this$1.kept,
                    false, // hydrating
                    true // removeOnly (!important, avoids unnecessary moves)
                  );
                  this$1._vnode = this$1.kept;
                  restoreActiveInstance();
                  update.call(this$1, vnode, hydrating);
                };
              },

              render: function render (h) {
                var tag = this.tag || this.$vnode.data.tag || 'span';
                var map = Object.create(null);
                var prevChildren = this.prevChildren = this.children;
                var rawChildren = this.$slots.default || [];
                var children = this.children = [];
                var transitionData = extractTransitionData(this);

                for (var i = 0; i < rawChildren.length; i++) {
                  var c = rawChildren[i];
                  if (c.tag) {
                    if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
                      children.push(c);
                      map[c.key] = c
                      ;(c.data || (c.data = {})).transition = transitionData;
                    } else {
                      var opts = c.componentOptions;
                      var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
                      warn(("<transition-group> children must be keyed: <" + name + ">"));
                    }
                  }
                }

                if (prevChildren) {
                  var kept = [];
                  var removed = [];
                  for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
                    var c$1 = prevChildren[i$1];
                    c$1.data.transition = transitionData;
                    c$1.data.pos = c$1.elm.getBoundingClientRect();
                    if (map[c$1.key]) {
                      kept.push(c$1);
                    } else {
                      removed.push(c$1);
                    }
                  }
                  this.kept = h(tag, null, kept);
                  this.removed = removed;
                }

                return h(tag, null, children)
              },

              updated: function updated () {
                var children = this.prevChildren;
                var moveClass = this.moveClass || ((this.name || 'v') + '-move');
                if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
                  return
                }

                // we divide the work into three loops to avoid mixing DOM reads and writes
                // in each iteration - which helps prevent layout thrashing.
                children.forEach(callPendingCbs);
                children.forEach(recordPosition);
                children.forEach(applyTranslation);

                // force reflow to put everything in position
                // assign to this to avoid being removed in tree-shaking
                // $flow-disable-line
                this._reflow = document.body.offsetHeight;

                children.forEach(function (c) {
                  if (c.data.moved) {
                    var el = c.elm;
                    var s = el.style;
                    addTransitionClass(el, moveClass);
                    s.transform = s.WebkitTransform = s.transitionDuration = '';
                    el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
                      if (e && e.target !== el) {
                        return
                      }
                      if (!e || /transform$/.test(e.propertyName)) {
                        el.removeEventListener(transitionEndEvent, cb);
                        el._moveCb = null;
                        removeTransitionClass(el, moveClass);
                      }
                    });
                  }
                });
              },

              methods: {
                hasMove: function hasMove (el, moveClass) {
                  /* istanbul ignore if */
                  if (!hasTransition) {
                    return false
                  }
                  /* istanbul ignore if */
                  if (this._hasMove) {
                    return this._hasMove
                  }
                  // Detect whether an element with the move class applied has
                  // CSS transitions. Since the element may be inside an entering
                  // transition at this very moment, we make a clone of it and remove
                  // all other transition classes applied to ensure only the move class
                  // is applied.
                  var clone = el.cloneNode();
                  if (el._transitionClasses) {
                    el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
                  }
                  addClass(clone, moveClass);
                  clone.style.display = 'none';
                  this.$el.appendChild(clone);
                  var info = getTransitionInfo(clone);
                  this.$el.removeChild(clone);
                  return (this._hasMove = info.hasTransform)
                }
              }
            };

            function callPendingCbs (c) {
              /* istanbul ignore if */
              if (c.elm._moveCb) {
                c.elm._moveCb();
              }
              /* istanbul ignore if */
              if (c.elm._enterCb) {
                c.elm._enterCb();
              }
            }

            function recordPosition (c) {
              c.data.newPos = c.elm.getBoundingClientRect();
            }

            function applyTranslation (c) {
              var oldPos = c.data.pos;
              var newPos = c.data.newPos;
              var dx = oldPos.left - newPos.left;
              var dy = oldPos.top - newPos.top;
              if (dx || dy) {
                c.data.moved = true;
                var s = c.elm.style;
                s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
                s.transitionDuration = '0s';
              }
            }

            var platformComponents = {
              Transition: Transition,
              TransitionGroup: TransitionGroup
            };

            /*  */

            // install platform specific utils
            Vue.config.mustUseProp = mustUseProp;
            Vue.config.isReservedTag = isReservedTag;
            Vue.config.isReservedAttr = isReservedAttr;
            Vue.config.getTagNamespace = getTagNamespace;
            Vue.config.isUnknownElement = isUnknownElement;

            // install platform runtime directives & components
            extend(Vue.options.directives, platformDirectives);
            extend(Vue.options.components, platformComponents);

            // install platform patch function
            Vue.prototype.__patch__ = inBrowser ? patch : noop$1;

            // public mount method
            Vue.prototype.$mount = function (
              el,
              hydrating
            ) {
              el = el && inBrowser ? query(el) : undefined;
              return mountComponent(this, el, hydrating)
            };

            // devtools global hook
            /* istanbul ignore next */
            if (inBrowser) {
              setTimeout(function () {
                if (config$1.devtools) {
                  if (devtools) {
                    devtools.emit('init', Vue);
                  } else {
                    console[console.info ? 'info' : 'log'](
                      'Download the Vue Devtools extension for a better development experience:\n' +
                      'https://github.com/vuejs/vue-devtools'
                    );
                  }
                }
                if (
                  config$1.productionTip !== false &&
                  typeof console !== 'undefined'
                ) {
                  console[console.info ? 'info' : 'log'](
                    "You are running Vue in development mode.\n" +
                    "Make sure to turn on production mode when deploying for production.\n" +
                    "See more tips at https://vuejs.org/guide/deployment.html"
                  );
                }
              }, 0);
            }

            /*!
              * vue-router v3.1.2
              * (c) 2019 Evan You
              * @license MIT
              */
            /*  */

            function assert (condition, message) {
              if (!condition) {
                throw new Error(("[vue-router] " + message))
              }
            }

            function warn$1 (condition, message) {
              if ( !condition) {
                typeof console !== 'undefined' && console.warn(("[vue-router] " + message));
              }
            }

            function isError (err) {
              return Object.prototype.toString.call(err).indexOf('Error') > -1
            }

            function isExtendedError (constructor, err) {
              return (
                err instanceof constructor ||
                // _name is to support IE9 too
                (err && (err.name === constructor.name || err._name === constructor._name))
              )
            }

            function extend$1 (a, b) {
              for (var key in b) {
                a[key] = b[key];
              }
              return a
            }

            var View = {
              name: 'RouterView',
              functional: true,
              props: {
                name: {
                  type: String,
                  default: 'default'
                }
              },
              render: function render (_, ref) {
                var props = ref.props;
                var children = ref.children;
                var parent = ref.parent;
                var data = ref.data;

                // used by devtools to display a router-view badge
                data.routerView = true;

                // directly use parent context's createElement() function
                // so that components rendered by router-view can resolve named slots
                var h = parent.$createElement;
                var name = props.name;
                var route = parent.$route;
                var cache = parent._routerViewCache || (parent._routerViewCache = {});

                // determine current view depth, also check to see if the tree
                // has been toggled inactive but kept-alive.
                var depth = 0;
                var inactive = false;
                while (parent && parent._routerRoot !== parent) {
                  var vnodeData = parent.$vnode && parent.$vnode.data;
                  if (vnodeData) {
                    if (vnodeData.routerView) {
                      depth++;
                    }
                    if (vnodeData.keepAlive && parent._inactive) {
                      inactive = true;
                    }
                  }
                  parent = parent.$parent;
                }
                data.routerViewDepth = depth;

                // render previous view if the tree is inactive and kept-alive
                if (inactive) {
                  return h(cache[name], data, children)
                }

                var matched = route.matched[depth];
                // render empty node if no matched route
                if (!matched) {
                  cache[name] = null;
                  return h()
                }

                var component = cache[name] = matched.components[name];

                // attach instance registration hook
                // this will be called in the instance's injected lifecycle hooks
                data.registerRouteInstance = function (vm, val) {
                  // val could be undefined for unregistration
                  var current = matched.instances[name];
                  if (
                    (val && current !== vm) ||
                    (!val && current === vm)
                  ) {
                    matched.instances[name] = val;
                  }
                }

                // also register instance in prepatch hook
                // in case the same component instance is reused across different routes
                ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {
                  matched.instances[name] = vnode.componentInstance;
                };

                // register instance in init hook
                // in case kept-alive component be actived when routes changed
                data.hook.init = function (vnode) {
                  if (vnode.data.keepAlive &&
                    vnode.componentInstance &&
                    vnode.componentInstance !== matched.instances[name]
                  ) {
                    matched.instances[name] = vnode.componentInstance;
                  }
                };

                // resolve props
                var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);
                if (propsToPass) {
                  // clone to prevent mutation
                  propsToPass = data.props = extend$1({}, propsToPass);
                  // pass non-declared props as attrs
                  var attrs = data.attrs = data.attrs || {};
                  for (var key in propsToPass) {
                    if (!component.props || !(key in component.props)) {
                      attrs[key] = propsToPass[key];
                      delete propsToPass[key];
                    }
                  }
                }

                return h(component, data, children)
              }
            };

            function resolveProps (route, config) {
              switch (typeof config) {
                case 'undefined':
                  return
                case 'object':
                  return config
                case 'function':
                  return config(route)
                case 'boolean':
                  return config ? route.params : undefined
                default:
                  {
                    warn$1(
                      false,
                      "props in \"" + (route.path) + "\" is a " + (typeof config) + ", " +
                      "expecting an object, function or boolean."
                    );
                  }
              }
            }

            /*  */

            var encodeReserveRE = /[!'()*]/g;
            var encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };
            var commaRE = /%2C/g;

            // fixed encodeURIComponent which is more conformant to RFC3986:
            // - escapes [!'()*]
            // - preserve commas
            var encode = function (str) { return encodeURIComponent(str)
              .replace(encodeReserveRE, encodeReserveReplacer)
              .replace(commaRE, ','); };

            var decode = decodeURIComponent;

            function resolveQuery (
              query,
              extraQuery,
              _parseQuery
            ) {
              if ( extraQuery === void 0 ) { extraQuery = {}; }

              var parse = _parseQuery || parseQuery;
              var parsedQuery;
              try {
                parsedQuery = parse(query || '');
              } catch (e) {
                 warn$1(false, e.message);
                parsedQuery = {};
              }
              for (var key in extraQuery) {
                parsedQuery[key] = extraQuery[key];
              }
              return parsedQuery
            }

            function parseQuery (query) {
              var res = {};

              query = query.trim().replace(/^(\?|#|&)/, '');

              if (!query) {
                return res
              }

              query.split('&').forEach(function (param) {
                var parts = param.replace(/\+/g, ' ').split('=');
                var key = decode(parts.shift());
                var val = parts.length > 0
                  ? decode(parts.join('='))
                  : null;

                if (res[key] === undefined) {
                  res[key] = val;
                } else if (Array.isArray(res[key])) {
                  res[key].push(val);
                } else {
                  res[key] = [res[key], val];
                }
              });

              return res
            }

            function stringifyQuery (obj) {
              var res = obj ? Object.keys(obj).map(function (key) {
                var val = obj[key];

                if (val === undefined) {
                  return ''
                }

                if (val === null) {
                  return encode(key)
                }

                if (Array.isArray(val)) {
                  var result = [];
                  val.forEach(function (val2) {
                    if (val2 === undefined) {
                      return
                    }
                    if (val2 === null) {
                      result.push(encode(key));
                    } else {
                      result.push(encode(key) + '=' + encode(val2));
                    }
                  });
                  return result.join('&')
                }

                return encode(key) + '=' + encode(val)
              }).filter(function (x) { return x.length > 0; }).join('&') : null;
              return res ? ("?" + res) : ''
            }

            /*  */

            var trailingSlashRE = /\/?$/;

            function createRoute (
              record,
              location,
              redirectedFrom,
              router
            ) {
              var stringifyQuery$$1 = router && router.options.stringifyQuery;

              var query = location.query || {};
              try {
                query = clone(query);
              } catch (e) {}

              var route = {
                name: location.name || (record && record.name),
                meta: (record && record.meta) || {},
                path: location.path || '/',
                hash: location.hash || '',
                query: query,
                params: location.params || {},
                fullPath: getFullPath(location, stringifyQuery$$1),
                matched: record ? formatMatch(record) : []
              };
              if (redirectedFrom) {
                route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);
              }
              return Object.freeze(route)
            }

            function clone (value) {
              if (Array.isArray(value)) {
                return value.map(clone)
              } else if (value && typeof value === 'object') {
                var res = {};
                for (var key in value) {
                  res[key] = clone(value[key]);
                }
                return res
              } else {
                return value
              }
            }

            // the starting route that represents the initial state
            var START = createRoute(null, {
              path: '/'
            });

            function formatMatch (record) {
              var res = [];
              while (record) {
                res.unshift(record);
                record = record.parent;
              }
              return res
            }

            function getFullPath (
              ref,
              _stringifyQuery
            ) {
              var path = ref.path;
              var query = ref.query; if ( query === void 0 ) { query = {}; }
              var hash = ref.hash; if ( hash === void 0 ) { hash = ''; }

              var stringify = _stringifyQuery || stringifyQuery;
              return (path || '/') + stringify(query) + hash
            }

            function isSameRoute (a, b) {
              if (b === START) {
                return a === b
              } else if (!b) {
                return false
              } else if (a.path && b.path) {
                return (
                  a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&
                  a.hash === b.hash &&
                  isObjectEqual(a.query, b.query)
                )
              } else if (a.name && b.name) {
                return (
                  a.name === b.name &&
                  a.hash === b.hash &&
                  isObjectEqual(a.query, b.query) &&
                  isObjectEqual(a.params, b.params)
                )
              } else {
                return false
              }
            }

            function isObjectEqual (a, b) {
              if ( a === void 0 ) { a = {}; }
              if ( b === void 0 ) { b = {}; }

              // handle null value #1566
              if (!a || !b) { return a === b }
              var aKeys = Object.keys(a);
              var bKeys = Object.keys(b);
              if (aKeys.length !== bKeys.length) {
                return false
              }
              return aKeys.every(function (key) {
                var aVal = a[key];
                var bVal = b[key];
                // check nested equality
                if (typeof aVal === 'object' && typeof bVal === 'object') {
                  return isObjectEqual(aVal, bVal)
                }
                return String(aVal) === String(bVal)
              })
            }

            function isIncludedRoute (current, target) {
              return (
                current.path.replace(trailingSlashRE, '/').indexOf(
                  target.path.replace(trailingSlashRE, '/')
                ) === 0 &&
                (!target.hash || current.hash === target.hash) &&
                queryIncludes(current.query, target.query)
              )
            }

            function queryIncludes (current, target) {
              for (var key in target) {
                if (!(key in current)) {
                  return false
                }
              }
              return true
            }

            /*  */

            function resolvePath (
              relative,
              base,
              append
            ) {
              var firstChar = relative.charAt(0);
              if (firstChar === '/') {
                return relative
              }

              if (firstChar === '?' || firstChar === '#') {
                return base + relative
              }

              var stack = base.split('/');

              // remove trailing segment if:
              // - not appending
              // - appending to trailing slash (last segment is empty)
              if (!append || !stack[stack.length - 1]) {
                stack.pop();
              }

              // resolve relative path
              var segments = relative.replace(/^\//, '').split('/');
              for (var i = 0; i < segments.length; i++) {
                var segment = segments[i];
                if (segment === '..') {
                  stack.pop();
                } else if (segment !== '.') {
                  stack.push(segment);
                }
              }

              // ensure leading slash
              if (stack[0] !== '') {
                stack.unshift('');
              }

              return stack.join('/')
            }

            function parsePath$1 (path) {
              var hash = '';
              var query = '';

              var hashIndex = path.indexOf('#');
              if (hashIndex >= 0) {
                hash = path.slice(hashIndex);
                path = path.slice(0, hashIndex);
              }

              var queryIndex = path.indexOf('?');
              if (queryIndex >= 0) {
                query = path.slice(queryIndex + 1);
                path = path.slice(0, queryIndex);
              }

              return {
                path: path,
                query: query,
                hash: hash
              }
            }

            function cleanPath (path) {
              return path.replace(/\/\//g, '/')
            }

            var isarray = Array.isArray || function (arr) {
              return Object.prototype.toString.call(arr) == '[object Array]';
            };

            /**
             * Expose `pathToRegexp`.
             */
            var pathToRegexp_1 = pathToRegexp;
            var parse_1 = parse;
            var compile_1 = compile;
            var tokensToFunction_1 = tokensToFunction;
            var tokensToRegExp_1 = tokensToRegExp;

            /**
             * The main path matching regexp utility.
             *
             * @type {RegExp}
             */
            var PATH_REGEXP = new RegExp([
              // Match escaped characters that would otherwise appear in future matches.
              // This allows the user to escape special characters that won't transform.
              '(\\\\.)',
              // Match Express-style parameters and un-named parameters with a prefix
              // and optional suffixes. Matches appear as:
              //
              // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
              // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
              // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
              '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
            ].join('|'), 'g');

            /**
             * Parse a string for the raw tokens.
             *
             * @param  {string}  str
             * @param  {Object=} options
             * @return {!Array}
             */
            function parse (str, options) {
              var tokens = [];
              var key = 0;
              var index = 0;
              var path = '';
              var defaultDelimiter = options && options.delimiter || '/';
              var res;

              while ((res = PATH_REGEXP.exec(str)) != null) {
                var m = res[0];
                var escaped = res[1];
                var offset = res.index;
                path += str.slice(index, offset);
                index = offset + m.length;

                // Ignore already escaped sequences.
                if (escaped) {
                  path += escaped[1];
                  continue
                }

                var next = str[index];
                var prefix = res[2];
                var name = res[3];
                var capture = res[4];
                var group = res[5];
                var modifier = res[6];
                var asterisk = res[7];

                // Push the current path onto the tokens.
                if (path) {
                  tokens.push(path);
                  path = '';
                }

                var partial = prefix != null && next != null && next !== prefix;
                var repeat = modifier === '+' || modifier === '*';
                var optional = modifier === '?' || modifier === '*';
                var delimiter = res[2] || defaultDelimiter;
                var pattern = capture || group;

                tokens.push({
                  name: name || key++,
                  prefix: prefix || '',
                  delimiter: delimiter,
                  optional: optional,
                  repeat: repeat,
                  partial: partial,
                  asterisk: !!asterisk,
                  pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
                });
              }

              // Match any characters still remaining.
              if (index < str.length) {
                path += str.substr(index);
              }

              // If the path exists, push it onto the end.
              if (path) {
                tokens.push(path);
              }

              return tokens
            }

            /**
             * Compile a string to a template function for the path.
             *
             * @param  {string}             str
             * @param  {Object=}            options
             * @return {!function(Object=, Object=)}
             */
            function compile (str, options) {
              return tokensToFunction(parse(str, options))
            }

            /**
             * Prettier encoding of URI path segments.
             *
             * @param  {string}
             * @return {string}
             */
            function encodeURIComponentPretty (str) {
              return encodeURI(str).replace(/[\/?#]/g, function (c) {
                return '%' + c.charCodeAt(0).toString(16).toUpperCase()
              })
            }

            /**
             * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
             *
             * @param  {string}
             * @return {string}
             */
            function encodeAsterisk (str) {
              return encodeURI(str).replace(/[?#]/g, function (c) {
                return '%' + c.charCodeAt(0).toString(16).toUpperCase()
              })
            }

            /**
             * Expose a method for transforming tokens into the path function.
             */
            function tokensToFunction (tokens) {
              // Compile all the tokens into regexps.
              var matches = new Array(tokens.length);

              // Compile all the patterns before compilation.
              for (var i = 0; i < tokens.length; i++) {
                if (typeof tokens[i] === 'object') {
                  matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');
                }
              }

              return function (obj, opts) {
                var path = '';
                var data = obj || {};
                var options = opts || {};
                var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;

                for (var i = 0; i < tokens.length; i++) {
                  var token = tokens[i];

                  if (typeof token === 'string') {
                    path += token;

                    continue
                  }

                  var value = data[token.name];
                  var segment;

                  if (value == null) {
                    if (token.optional) {
                      // Prepend partial segment prefixes.
                      if (token.partial) {
                        path += token.prefix;
                      }

                      continue
                    } else {
                      throw new TypeError('Expected "' + token.name + '" to be defined')
                    }
                  }

                  if (isarray(value)) {
                    if (!token.repeat) {
                      throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
                    }

                    if (value.length === 0) {
                      if (token.optional) {
                        continue
                      } else {
                        throw new TypeError('Expected "' + token.name + '" to not be empty')
                      }
                    }

                    for (var j = 0; j < value.length; j++) {
                      segment = encode(value[j]);

                      if (!matches[i].test(segment)) {
                        throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
                      }

                      path += (j === 0 ? token.prefix : token.delimiter) + segment;
                    }

                    continue
                  }

                  segment = token.asterisk ? encodeAsterisk(value) : encode(value);

                  if (!matches[i].test(segment)) {
                    throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
                  }

                  path += token.prefix + segment;
                }

                return path
              }
            }

            /**
             * Escape a regular expression string.
             *
             * @param  {string} str
             * @return {string}
             */
            function escapeString (str) {
              return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
            }

            /**
             * Escape the capturing group by escaping special characters and meaning.
             *
             * @param  {string} group
             * @return {string}
             */
            function escapeGroup (group) {
              return group.replace(/([=!:$\/()])/g, '\\$1')
            }

            /**
             * Attach the keys as a property of the regexp.
             *
             * @param  {!RegExp} re
             * @param  {Array}   keys
             * @return {!RegExp}
             */
            function attachKeys (re, keys) {
              re.keys = keys;
              return re
            }

            /**
             * Get the flags for a regexp from the options.
             *
             * @param  {Object} options
             * @return {string}
             */
            function flags (options) {
              return options.sensitive ? '' : 'i'
            }

            /**
             * Pull out keys from a regexp.
             *
             * @param  {!RegExp} path
             * @param  {!Array}  keys
             * @return {!RegExp}
             */
            function regexpToRegexp (path, keys) {
              // Use a negative lookahead to match only capturing groups.
              var groups = path.source.match(/\((?!\?)/g);

              if (groups) {
                for (var i = 0; i < groups.length; i++) {
                  keys.push({
                    name: i,
                    prefix: null,
                    delimiter: null,
                    optional: false,
                    repeat: false,
                    partial: false,
                    asterisk: false,
                    pattern: null
                  });
                }
              }

              return attachKeys(path, keys)
            }

            /**
             * Transform an array into a regexp.
             *
             * @param  {!Array}  path
             * @param  {Array}   keys
             * @param  {!Object} options
             * @return {!RegExp}
             */
            function arrayToRegexp (path, keys, options) {
              var parts = [];

              for (var i = 0; i < path.length; i++) {
                parts.push(pathToRegexp(path[i], keys, options).source);
              }

              var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));

              return attachKeys(regexp, keys)
            }

            /**
             * Create a path regexp from string input.
             *
             * @param  {string}  path
             * @param  {!Array}  keys
             * @param  {!Object} options
             * @return {!RegExp}
             */
            function stringToRegexp (path, keys, options) {
              return tokensToRegExp(parse(path, options), keys, options)
            }

            /**
             * Expose a function for taking tokens and returning a RegExp.
             *
             * @param  {!Array}          tokens
             * @param  {(Array|Object)=} keys
             * @param  {Object=}         options
             * @return {!RegExp}
             */
            function tokensToRegExp (tokens, keys, options) {
              if (!isarray(keys)) {
                options = /** @type {!Object} */ (keys || options);
                keys = [];
              }

              options = options || {};

              var strict = options.strict;
              var end = options.end !== false;
              var route = '';

              // Iterate over the tokens and create our regexp string.
              for (var i = 0; i < tokens.length; i++) {
                var token = tokens[i];

                if (typeof token === 'string') {
                  route += escapeString(token);
                } else {
                  var prefix = escapeString(token.prefix);
                  var capture = '(?:' + token.pattern + ')';

                  keys.push(token);

                  if (token.repeat) {
                    capture += '(?:' + prefix + capture + ')*';
                  }

                  if (token.optional) {
                    if (!token.partial) {
                      capture = '(?:' + prefix + '(' + capture + '))?';
                    } else {
                      capture = prefix + '(' + capture + ')?';
                    }
                  } else {
                    capture = prefix + '(' + capture + ')';
                  }

                  route += capture;
                }
              }

              var delimiter = escapeString(options.delimiter || '/');
              var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;

              // In non-strict mode we allow a slash at the end of match. If the path to
              // match already ends with a slash, we remove it for consistency. The slash
              // is valid at the end of a path match, not in the middle. This is important
              // in non-ending mode, where "/test/" shouldn't match "/test//route".
              if (!strict) {
                route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';
              }

              if (end) {
                route += '$';
              } else {
                // In non-ending mode, we need the capturing groups to match as much as
                // possible by using a positive lookahead to the end or next path segment.
                route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
              }

              return attachKeys(new RegExp('^' + route, flags(options)), keys)
            }

            /**
             * Normalize the given path string, returning a regular expression.
             *
             * An empty array can be passed in for the keys, which will hold the
             * placeholder key descriptions. For example, using `/user/:id`, `keys` will
             * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
             *
             * @param  {(string|RegExp|Array)} path
             * @param  {(Array|Object)=}       keys
             * @param  {Object=}               options
             * @return {!RegExp}
             */
            function pathToRegexp (path, keys, options) {
              if (!isarray(keys)) {
                options = /** @type {!Object} */ (keys || options);
                keys = [];
              }

              options = options || {};

              if (path instanceof RegExp) {
                return regexpToRegexp(path, /** @type {!Array} */ (keys))
              }

              if (isarray(path)) {
                return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
              }

              return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
            }
            pathToRegexp_1.parse = parse_1;
            pathToRegexp_1.compile = compile_1;
            pathToRegexp_1.tokensToFunction = tokensToFunction_1;
            pathToRegexp_1.tokensToRegExp = tokensToRegExp_1;

            /*  */

            // $flow-disable-line
            var regexpCompileCache = Object.create(null);

            function fillParams (
              path,
              params,
              routeMsg
            ) {
              params = params || {};
              try {
                var filler =
                  regexpCompileCache[path] ||
                  (regexpCompileCache[path] = pathToRegexp_1.compile(path));

                // Fix #2505 resolving asterisk routes { name: 'not-found', params: { pathMatch: '/not-found' }}
                if (params.pathMatch) { params[0] = params.pathMatch; }

                return filler(params, { pretty: true })
              } catch (e) {
                {
                  warn$1(false, ("missing param for " + routeMsg + ": " + (e.message)));
                }
                return ''
              } finally {
                // delete the 0 if it was added
                delete params[0];
              }
            }

            /*  */

            function normalizeLocation (
              raw,
              current,
              append,
              router
            ) {
              var next = typeof raw === 'string' ? { path: raw } : raw;
              // named target
              if (next._normalized) {
                return next
              } else if (next.name) {
                return extend$1({}, raw)
              }

              // relative params
              if (!next.path && next.params && current) {
                next = extend$1({}, next);
                next._normalized = true;
                var params = extend$1(extend$1({}, current.params), next.params);
                if (current.name) {
                  next.name = current.name;
                  next.params = params;
                } else if (current.matched.length) {
                  var rawPath = current.matched[current.matched.length - 1].path;
                  next.path = fillParams(rawPath, params, ("path " + (current.path)));
                } else {
                  warn$1(false, "relative params navigation requires a current route.");
                }
                return next
              }

              var parsedPath = parsePath$1(next.path || '');
              var basePath = (current && current.path) || '/';
              var path = parsedPath.path
                ? resolvePath(parsedPath.path, basePath, append || next.append)
                : basePath;

              var query = resolveQuery(
                parsedPath.query,
                next.query,
                router && router.options.parseQuery
              );

              var hash = next.hash || parsedPath.hash;
              if (hash && hash.charAt(0) !== '#') {
                hash = "#" + hash;
              }

              return {
                _normalized: true,
                path: path,
                query: query,
                hash: hash
              }
            }

            /*  */

            // work around weird flow bug
            var toTypes = [String, Object];
            var eventTypes = [String, Array];

            var noop$2 = function () {};

            var Link = {
              name: 'RouterLink',
              props: {
                to: {
                  type: toTypes,
                  required: true
                },
                tag: {
                  type: String,
                  default: 'a'
                },
                exact: Boolean,
                append: Boolean,
                replace: Boolean,
                activeClass: String,
                exactActiveClass: String,
                event: {
                  type: eventTypes,
                  default: 'click'
                }
              },
              render: function render (h) {
                var this$1 = this;

                var router = this.$router;
                var current = this.$route;
                var ref = router.resolve(
                  this.to,
                  current,
                  this.append
                );
                var location = ref.location;
                var route = ref.route;
                var href = ref.href;

                var classes = {};
                var globalActiveClass = router.options.linkActiveClass;
                var globalExactActiveClass = router.options.linkExactActiveClass;
                // Support global empty active class
                var activeClassFallback =
                  globalActiveClass == null ? 'router-link-active' : globalActiveClass;
                var exactActiveClassFallback =
                  globalExactActiveClass == null
                    ? 'router-link-exact-active'
                    : globalExactActiveClass;
                var activeClass =
                  this.activeClass == null ? activeClassFallback : this.activeClass;
                var exactActiveClass =
                  this.exactActiveClass == null
                    ? exactActiveClassFallback
                    : this.exactActiveClass;

                var compareTarget = route.redirectedFrom
                  ? createRoute(null, normalizeLocation(route.redirectedFrom), null, router)
                  : route;

                classes[exactActiveClass] = isSameRoute(current, compareTarget);
                classes[activeClass] = this.exact
                  ? classes[exactActiveClass]
                  : isIncludedRoute(current, compareTarget);

                var handler = function (e) {
                  if (guardEvent(e)) {
                    if (this$1.replace) {
                      router.replace(location, noop$2);
                    } else {
                      router.push(location, noop$2);
                    }
                  }
                };

                var on = { click: guardEvent };
                if (Array.isArray(this.event)) {
                  this.event.forEach(function (e) {
                    on[e] = handler;
                  });
                } else {
                  on[this.event] = handler;
                }

                var data = { class: classes };

                var scopedSlot =
                  !this.$scopedSlots.$hasNormal &&
                  this.$scopedSlots.default &&
                  this.$scopedSlots.default({
                    href: href,
                    route: route,
                    navigate: handler,
                    isActive: classes[activeClass],
                    isExactActive: classes[exactActiveClass]
                  });

                if (scopedSlot) {
                  if (scopedSlot.length === 1) {
                    return scopedSlot[0]
                  } else if (scopedSlot.length > 1 || !scopedSlot.length) {
                    {
                      warn$1(
                        false,
                        ("RouterLink with to=\"" + (this.props.to) + "\" is trying to use a scoped slot but it didn't provide exactly one child.")
                      );
                    }
                    return scopedSlot.length === 0 ? h() : h('span', {}, scopedSlot)
                  }
                }

                if (this.tag === 'a') {
                  data.on = on;
                  data.attrs = { href: href };
                } else {
                  // find the first <a> child and apply listener and href
                  var a = findAnchor(this.$slots.default);
                  if (a) {
                    // in case the <a> is a static node
                    a.isStatic = false;
                    var aData = (a.data = extend$1({}, a.data));
                    aData.on = on;
                    var aAttrs = (a.data.attrs = extend$1({}, a.data.attrs));
                    aAttrs.href = href;
                  } else {
                    // doesn't have <a> child, apply listener to self
                    data.on = on;
                  }
                }

                return h(this.tag, data, this.$slots.default)
              }
            };

            function guardEvent (e) {
              // don't redirect with control keys
              if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }
              // don't redirect when preventDefault called
              if (e.defaultPrevented) { return }
              // don't redirect on right click
              if (e.button !== undefined && e.button !== 0) { return }
              // don't redirect if `target="_blank"`
              if (e.currentTarget && e.currentTarget.getAttribute) {
                var target = e.currentTarget.getAttribute('target');
                if (/\b_blank\b/i.test(target)) { return }
              }
              // this may be a Weex event which doesn't have this method
              if (e.preventDefault) {
                e.preventDefault();
              }
              return true
            }

            function findAnchor (children) {
              if (children) {
                var child;
                for (var i = 0; i < children.length; i++) {
                  child = children[i];
                  if (child.tag === 'a') {
                    return child
                  }
                  if (child.children && (child = findAnchor(child.children))) {
                    return child
                  }
                }
              }
            }

            var _Vue;

            function install (Vue) {
              if (install.installed && _Vue === Vue) { return }
              install.installed = true;

              _Vue = Vue;

              var isDef = function (v) { return v !== undefined; };

              var registerInstance = function (vm, callVal) {
                var i = vm.$options._parentVnode;
                if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {
                  i(vm, callVal);
                }
              };

              Vue.mixin({
                beforeCreate: function beforeCreate () {
                  if (isDef(this.$options.router)) {
                    this._routerRoot = this;
                    this._router = this.$options.router;
                    this._router.init(this);
                    Vue.util.defineReactive(this, '_route', this._router.history.current);
                  } else {
                    this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;
                  }
                  registerInstance(this, this);
                },
                destroyed: function destroyed () {
                  registerInstance(this);
                }
              });

              Object.defineProperty(Vue.prototype, '$router', {
                get: function get () { return this._routerRoot._router }
              });

              Object.defineProperty(Vue.prototype, '$route', {
                get: function get () { return this._routerRoot._route }
              });

              Vue.component('RouterView', View);
              Vue.component('RouterLink', Link);

              var strats = Vue.config.optionMergeStrategies;
              // use the same hook merging strategy for route hooks
              strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;
            }

            /*  */

            var inBrowser$1 = typeof window !== 'undefined';

            /*  */

            function createRouteMap (
              routes,
              oldPathList,
              oldPathMap,
              oldNameMap
            ) {
              // the path list is used to control path matching priority
              var pathList = oldPathList || [];
              // $flow-disable-line
              var pathMap = oldPathMap || Object.create(null);
              // $flow-disable-line
              var nameMap = oldNameMap || Object.create(null);

              routes.forEach(function (route) {
                addRouteRecord(pathList, pathMap, nameMap, route);
              });

              // ensure wildcard routes are always at the end
              for (var i = 0, l = pathList.length; i < l; i++) {
                if (pathList[i] === '*') {
                  pathList.push(pathList.splice(i, 1)[0]);
                  l--;
                  i--;
                }
              }

              return {
                pathList: pathList,
                pathMap: pathMap,
                nameMap: nameMap
              }
            }

            function addRouteRecord (
              pathList,
              pathMap,
              nameMap,
              route,
              parent,
              matchAs
            ) {
              var path = route.path;
              var name = route.name;
              {
                assert(path != null, "\"path\" is required in a route configuration.");
                assert(
                  typeof route.component !== 'string',
                  "route config \"component\" for path: " + (String(
                    path || name
                  )) + " cannot be a " + "string id. Use an actual component instead."
                );
              }

              var pathToRegexpOptions =
                route.pathToRegexpOptions || {};
              var normalizedPath = normalizePath(path, parent, pathToRegexpOptions.strict);

              if (typeof route.caseSensitive === 'boolean') {
                pathToRegexpOptions.sensitive = route.caseSensitive;
              }

              var record = {
                path: normalizedPath,
                regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),
                components: route.components || { default: route.component },
                instances: {},
                name: name,
                parent: parent,
                matchAs: matchAs,
                redirect: route.redirect,
                beforeEnter: route.beforeEnter,
                meta: route.meta || {},
                props:
                  route.props == null
                    ? {}
                    : route.components
                      ? route.props
                      : { default: route.props }
              };

              if (route.children) {
                // Warn if route is named, does not redirect and has a default child route.
                // If users navigate to this route by name, the default child will
                // not be rendered (GH Issue #629)
                {
                  if (
                    route.name &&
                    !route.redirect &&
                    route.children.some(function (child) { return /^\/?$/.test(child.path); })
                  ) {
                    warn$1(
                      false,
                      "Named Route '" + (route.name) + "' has a default child route. " +
                        "When navigating to this named route (:to=\"{name: '" + (route.name) + "'\"), " +
                        "the default child route will not be rendered. Remove the name from " +
                        "this route and use the name of the default child route for named " +
                        "links instead."
                    );
                  }
                }
                route.children.forEach(function (child) {
                  var childMatchAs = matchAs
                    ? cleanPath((matchAs + "/" + (child.path)))
                    : undefined;
                  addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);
                });
              }

              if (!pathMap[record.path]) {
                pathList.push(record.path);
                pathMap[record.path] = record;
              }

              if (route.alias !== undefined) {
                var aliases = Array.isArray(route.alias) ? route.alias : [route.alias];
                for (var i = 0; i < aliases.length; ++i) {
                  var alias = aliases[i];
                  if ( alias === path) {
                    warn$1(
                      false,
                      ("Found an alias with the same value as the path: \"" + path + "\". You have to remove that alias. It will be ignored in development.")
                    );
                    // skip in dev to make it work
                    continue
                  }

                  var aliasRoute = {
                    path: alias,
                    children: route.children
                  };
                  addRouteRecord(
                    pathList,
                    pathMap,
                    nameMap,
                    aliasRoute,
                    parent,
                    record.path || '/' // matchAs
                  );
                }
              }

              if (name) {
                if (!nameMap[name]) {
                  nameMap[name] = record;
                } else if ( !matchAs) {
                  warn$1(
                    false,
                    "Duplicate named routes definition: " +
                      "{ name: \"" + name + "\", path: \"" + (record.path) + "\" }"
                  );
                }
              }
            }

            function compileRouteRegex (
              path,
              pathToRegexpOptions
            ) {
              var regex = pathToRegexp_1(path, [], pathToRegexpOptions);
              {
                var keys = Object.create(null);
                regex.keys.forEach(function (key) {
                  warn$1(
                    !keys[key.name],
                    ("Duplicate param keys in route with path: \"" + path + "\"")
                  );
                  keys[key.name] = true;
                });
              }
              return regex
            }

            function normalizePath (
              path,
              parent,
              strict
            ) {
              if (!strict) { path = path.replace(/\/$/, ''); }
              if (path[0] === '/') { return path }
              if (parent == null) { return path }
              return cleanPath(((parent.path) + "/" + path))
            }

            /*  */



            function createMatcher (
              routes,
              router
            ) {
              var ref = createRouteMap(routes);
              var pathList = ref.pathList;
              var pathMap = ref.pathMap;
              var nameMap = ref.nameMap;

              function addRoutes (routes) {
                createRouteMap(routes, pathList, pathMap, nameMap);
              }

              function match (
                raw,
                currentRoute,
                redirectedFrom
              ) {
                var location = normalizeLocation(raw, currentRoute, false, router);
                var name = location.name;

                if (name) {
                  var record = nameMap[name];
                  {
                    warn$1(record, ("Route with name '" + name + "' does not exist"));
                  }
                  if (!record) { return _createRoute(null, location) }
                  var paramNames = record.regex.keys
                    .filter(function (key) { return !key.optional; })
                    .map(function (key) { return key.name; });

                  if (typeof location.params !== 'object') {
                    location.params = {};
                  }

                  if (currentRoute && typeof currentRoute.params === 'object') {
                    for (var key in currentRoute.params) {
                      if (!(key in location.params) && paramNames.indexOf(key) > -1) {
                        location.params[key] = currentRoute.params[key];
                      }
                    }
                  }

                  location.path = fillParams(record.path, location.params, ("named route \"" + name + "\""));
                  return _createRoute(record, location, redirectedFrom)
                } else if (location.path) {
                  location.params = {};
                  for (var i = 0; i < pathList.length; i++) {
                    var path = pathList[i];
                    var record$1 = pathMap[path];
                    if (matchRoute(record$1.regex, location.path, location.params)) {
                      return _createRoute(record$1, location, redirectedFrom)
                    }
                  }
                }
                // no match
                return _createRoute(null, location)
              }

              function redirect (
                record,
                location
              ) {
                var originalRedirect = record.redirect;
                var redirect = typeof originalRedirect === 'function'
                  ? originalRedirect(createRoute(record, location, null, router))
                  : originalRedirect;

                if (typeof redirect === 'string') {
                  redirect = { path: redirect };
                }

                if (!redirect || typeof redirect !== 'object') {
                  {
                    warn$1(
                      false, ("invalid redirect option: " + (JSON.stringify(redirect)))
                    );
                  }
                  return _createRoute(null, location)
                }

                var re = redirect;
                var name = re.name;
                var path = re.path;
                var query = location.query;
                var hash = location.hash;
                var params = location.params;
                query = re.hasOwnProperty('query') ? re.query : query;
                hash = re.hasOwnProperty('hash') ? re.hash : hash;
                params = re.hasOwnProperty('params') ? re.params : params;

                if (name) {
                  // resolved named direct
                  var targetRecord = nameMap[name];
                  {
                    assert(targetRecord, ("redirect failed: named route \"" + name + "\" not found."));
                  }
                  return match({
                    _normalized: true,
                    name: name,
                    query: query,
                    hash: hash,
                    params: params
                  }, undefined, location)
                } else if (path) {
                  // 1. resolve relative redirect
                  var rawPath = resolveRecordPath(path, record);
                  // 2. resolve params
                  var resolvedPath = fillParams(rawPath, params, ("redirect route with path \"" + rawPath + "\""));
                  // 3. rematch with existing query and hash
                  return match({
                    _normalized: true,
                    path: resolvedPath,
                    query: query,
                    hash: hash
                  }, undefined, location)
                } else {
                  {
                    warn$1(false, ("invalid redirect option: " + (JSON.stringify(redirect))));
                  }
                  return _createRoute(null, location)
                }
              }

              function alias (
                record,
                location,
                matchAs
              ) {
                var aliasedPath = fillParams(matchAs, location.params, ("aliased route with path \"" + matchAs + "\""));
                var aliasedMatch = match({
                  _normalized: true,
                  path: aliasedPath
                });
                if (aliasedMatch) {
                  var matched = aliasedMatch.matched;
                  var aliasedRecord = matched[matched.length - 1];
                  location.params = aliasedMatch.params;
                  return _createRoute(aliasedRecord, location)
                }
                return _createRoute(null, location)
              }

              function _createRoute (
                record,
                location,
                redirectedFrom
              ) {
                if (record && record.redirect) {
                  return redirect(record, redirectedFrom || location)
                }
                if (record && record.matchAs) {
                  return alias(record, location, record.matchAs)
                }
                return createRoute(record, location, redirectedFrom, router)
              }

              return {
                match: match,
                addRoutes: addRoutes
              }
            }

            function matchRoute (
              regex,
              path,
              params
            ) {
              var m = path.match(regex);

              if (!m) {
                return false
              } else if (!params) {
                return true
              }

              for (var i = 1, len = m.length; i < len; ++i) {
                var key = regex.keys[i - 1];
                var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];
                if (key) {
                  // Fix #1994: using * with props: true generates a param named 0
                  params[key.name || 'pathMatch'] = val;
                }
              }

              return true
            }

            function resolveRecordPath (path, record) {
              return resolvePath(path, record.parent ? record.parent.path : '/', true)
            }

            /*  */

            var positionStore = Object.create(null);

            function setupScroll () {
              // Fix for #1585 for Firefox
              // Fix for #2195 Add optional third attribute to workaround a bug in safari https://bugs.webkit.org/show_bug.cgi?id=182678
              // Fix for #2774 Support for apps loaded from Windows file shares not mapped to network drives: replaced location.origin with
              // window.location.protocol + '//' + window.location.host
              // location.host contains the port and location.hostname doesn't
              var protocolAndPath = window.location.protocol + '//' + window.location.host;
              var absolutePath = window.location.href.replace(protocolAndPath, '');
              window.history.replaceState({ key: getStateKey() }, '', absolutePath);
              window.addEventListener('popstate', function (e) {
                saveScrollPosition();
                if (e.state && e.state.key) {
                  setStateKey(e.state.key);
                }
              });
            }

            function handleScroll (
              router,
              to,
              from,
              isPop
            ) {
              if (!router.app) {
                return
              }

              var behavior = router.options.scrollBehavior;
              if (!behavior) {
                return
              }

              {
                assert(typeof behavior === 'function', "scrollBehavior must be a function");
              }

              // wait until re-render finishes before scrolling
              router.app.$nextTick(function () {
                var position = getScrollPosition();
                var shouldScroll = behavior.call(
                  router,
                  to,
                  from,
                  isPop ? position : null
                );

                if (!shouldScroll) {
                  return
                }

                if (typeof shouldScroll.then === 'function') {
                  shouldScroll
                    .then(function (shouldScroll) {
                      scrollToPosition((shouldScroll), position);
                    })
                    .catch(function (err) {
                      {
                        assert(false, err.toString());
                      }
                    });
                } else {
                  scrollToPosition(shouldScroll, position);
                }
              });
            }

            function saveScrollPosition () {
              var key = getStateKey();
              if (key) {
                positionStore[key] = {
                  x: window.pageXOffset,
                  y: window.pageYOffset
                };
              }
            }

            function getScrollPosition () {
              var key = getStateKey();
              if (key) {
                return positionStore[key]
              }
            }

            function getElementPosition (el, offset) {
              var docEl = document.documentElement;
              var docRect = docEl.getBoundingClientRect();
              var elRect = el.getBoundingClientRect();
              return {
                x: elRect.left - docRect.left - offset.x,
                y: elRect.top - docRect.top - offset.y
              }
            }

            function isValidPosition (obj) {
              return isNumber(obj.x) || isNumber(obj.y)
            }

            function normalizePosition (obj) {
              return {
                x: isNumber(obj.x) ? obj.x : window.pageXOffset,
                y: isNumber(obj.y) ? obj.y : window.pageYOffset
              }
            }

            function normalizeOffset (obj) {
              return {
                x: isNumber(obj.x) ? obj.x : 0,
                y: isNumber(obj.y) ? obj.y : 0
              }
            }

            function isNumber (v) {
              return typeof v === 'number'
            }

            var hashStartsWithNumberRE = /^#\d/;

            function scrollToPosition (shouldScroll, position) {
              var isObject = typeof shouldScroll === 'object';
              if (isObject && typeof shouldScroll.selector === 'string') {
                // getElementById would still fail if the selector contains a more complicated query like #main[data-attr]
                // but at the same time, it doesn't make much sense to select an element with an id and an extra selector
                var el = hashStartsWithNumberRE.test(shouldScroll.selector) // $flow-disable-line
                  ? document.getElementById(shouldScroll.selector.slice(1)) // $flow-disable-line
                  : document.querySelector(shouldScroll.selector);

                if (el) {
                  var offset =
                    shouldScroll.offset && typeof shouldScroll.offset === 'object'
                      ? shouldScroll.offset
                      : {};
                  offset = normalizeOffset(offset);
                  position = getElementPosition(el, offset);
                } else if (isValidPosition(shouldScroll)) {
                  position = normalizePosition(shouldScroll);
                }
              } else if (isObject && isValidPosition(shouldScroll)) {
                position = normalizePosition(shouldScroll);
              }

              if (position) {
                window.scrollTo(position.x, position.y);
              }
            }

            /*  */

            var supportsPushState = inBrowser$1 && (function () {
              var ua = window.navigator.userAgent;

              if (
                (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&
                ua.indexOf('Mobile Safari') !== -1 &&
                ua.indexOf('Chrome') === -1 &&
                ua.indexOf('Windows Phone') === -1
              ) {
                return false
              }

              return window.history && 'pushState' in window.history
            })();

            // use User Timing api (if present) for more accurate key precision
            var Time = inBrowser$1 && window.performance && window.performance.now
              ? window.performance
              : Date;

            var _key = genKey();

            function genKey () {
              return Time.now().toFixed(3)
            }

            function getStateKey () {
              return _key
            }

            function setStateKey (key) {
              _key = key;
            }

            function pushState (url, replace) {
              saveScrollPosition();
              // try...catch the pushState call to get around Safari
              // DOM Exception 18 where it limits to 100 pushState calls
              var history = window.history;
              try {
                if (replace) {
                  history.replaceState({ key: _key }, '', url);
                } else {
                  _key = genKey();
                  history.pushState({ key: _key }, '', url);
                }
              } catch (e) {
                window.location[replace ? 'replace' : 'assign'](url);
              }
            }

            function replaceState (url) {
              pushState(url, true);
            }

            /*  */

            function runQueue (queue, fn, cb) {
              var step = function (index) {
                if (index >= queue.length) {
                  cb();
                } else {
                  if (queue[index]) {
                    fn(queue[index], function () {
                      step(index + 1);
                    });
                  } else {
                    step(index + 1);
                  }
                }
              };
              step(0);
            }

            /*  */

            function resolveAsyncComponents (matched) {
              return function (to, from, next) {
                var hasAsync = false;
                var pending = 0;
                var error = null;

                flatMapComponents(matched, function (def, _, match, key) {
                  // if it's a function and doesn't have cid attached,
                  // assume it's an async component resolve function.
                  // we are not using Vue's default async resolving mechanism because
                  // we want to halt the navigation until the incoming component has been
                  // resolved.
                  if (typeof def === 'function' && def.cid === undefined) {
                    hasAsync = true;
                    pending++;

                    var resolve = once$2(function (resolvedDef) {
                      if (isESModule(resolvedDef)) {
                        resolvedDef = resolvedDef.default;
                      }
                      // save resolved on async factory in case it's used elsewhere
                      def.resolved = typeof resolvedDef === 'function'
                        ? resolvedDef
                        : _Vue.extend(resolvedDef);
                      match.components[key] = resolvedDef;
                      pending--;
                      if (pending <= 0) {
                        next();
                      }
                    });

                    var reject = once$2(function (reason) {
                      var msg = "Failed to resolve async component " + key + ": " + reason;
                       warn$1(false, msg);
                      if (!error) {
                        error = isError(reason)
                          ? reason
                          : new Error(msg);
                        next(error);
                      }
                    });

                    var res;
                    try {
                      res = def(resolve, reject);
                    } catch (e) {
                      reject(e);
                    }
                    if (res) {
                      if (typeof res.then === 'function') {
                        res.then(resolve, reject);
                      } else {
                        // new syntax in Vue 2.3
                        var comp = res.component;
                        if (comp && typeof comp.then === 'function') {
                          comp.then(resolve, reject);
                        }
                      }
                    }
                  }
                });

                if (!hasAsync) { next(); }
              }
            }

            function flatMapComponents (
              matched,
              fn
            ) {
              return flatten(matched.map(function (m) {
                return Object.keys(m.components).map(function (key) { return fn(
                  m.components[key],
                  m.instances[key],
                  m, key
                ); })
              }))
            }

            function flatten (arr) {
              return Array.prototype.concat.apply([], arr)
            }

            var hasSymbol$1 =
              typeof Symbol === 'function' &&
              typeof Symbol.toStringTag === 'symbol';

            function isESModule (obj) {
              return obj.__esModule || (hasSymbol$1 && obj[Symbol.toStringTag] === 'Module')
            }

            // in Webpack 2, require.ensure now also returns a Promise
            // so the resolve/reject functions may get called an extra time
            // if the user uses an arrow function shorthand that happens to
            // return that Promise.
            function once$2 (fn) {
              var called = false;
              return function () {
                var arguments$1 = arguments;

                var args = [], len = arguments.length;
                while ( len-- ) { args[ len ] = arguments$1[ len ]; }

                if (called) { return }
                called = true;
                return fn.apply(this, args)
              }
            }

            var NavigationDuplicated = /*@__PURE__*/(function (Error) {
              function NavigationDuplicated () {
                Error.call(this, 'Navigating to current location is not allowed');
                this.name = this._name = 'NavigationDuplicated';
              }

              if ( Error ) { NavigationDuplicated.__proto__ = Error; }
              NavigationDuplicated.prototype = Object.create( Error && Error.prototype );
              NavigationDuplicated.prototype.constructor = NavigationDuplicated;

              return NavigationDuplicated;
            }(Error));

            // support IE9
            NavigationDuplicated._name = 'NavigationDuplicated';

            /*  */

            var History = function History (router, base) {
              this.router = router;
              this.base = normalizeBase(base);
              // start with a route object that stands for "nowhere"
              this.current = START;
              this.pending = null;
              this.ready = false;
              this.readyCbs = [];
              this.readyErrorCbs = [];
              this.errorCbs = [];
            };

            History.prototype.listen = function listen (cb) {
              this.cb = cb;
            };

            History.prototype.onReady = function onReady (cb, errorCb) {
              if (this.ready) {
                cb();
              } else {
                this.readyCbs.push(cb);
                if (errorCb) {
                  this.readyErrorCbs.push(errorCb);
                }
              }
            };

            History.prototype.onError = function onError (errorCb) {
              this.errorCbs.push(errorCb);
            };

            History.prototype.transitionTo = function transitionTo (
              location,
              onComplete,
              onAbort
            ) {
                var this$1 = this;

              var route = this.router.match(location, this.current);
              this.confirmTransition(
                route,
                function () {
                  this$1.updateRoute(route);
                  onComplete && onComplete(route);
                  this$1.ensureURL();

                  // fire ready cbs once
                  if (!this$1.ready) {
                    this$1.ready = true;
                    this$1.readyCbs.forEach(function (cb) {
                      cb(route);
                    });
                  }
                },
                function (err) {
                  if (onAbort) {
                    onAbort(err);
                  }
                  if (err && !this$1.ready) {
                    this$1.ready = true;
                    this$1.readyErrorCbs.forEach(function (cb) {
                      cb(err);
                    });
                  }
                }
              );
            };

            History.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {
                var this$1 = this;

              var current = this.current;
              var abort = function (err) {
                // after merging https://github.com/vuejs/vue-router/pull/2771 we
                // When the user navigates through history through back/forward buttons
                // we do not want to throw the error. We only throw it if directly calling
                // push/replace. That's why it's not included in isError
                if (!isExtendedError(NavigationDuplicated, err) && isError(err)) {
                  if (this$1.errorCbs.length) {
                    this$1.errorCbs.forEach(function (cb) {
                      cb(err);
                    });
                  } else {
                    warn$1(false, 'uncaught error during route navigation:');
                    console.error(err);
                  }
                }
                onAbort && onAbort(err);
              };
              if (
                isSameRoute(route, current) &&
                // in the case the route map has been dynamically appended to
                route.matched.length === current.matched.length
              ) {
                this.ensureURL();
                return abort(new NavigationDuplicated(route))
              }

              var ref = resolveQueue(
                this.current.matched,
                route.matched
              );
                var updated = ref.updated;
                var deactivated = ref.deactivated;
                var activated = ref.activated;

              var queue = [].concat(
                // in-component leave guards
                extractLeaveGuards(deactivated),
                // global before hooks
                this.router.beforeHooks,
                // in-component update hooks
                extractUpdateHooks(updated),
                // in-config enter guards
                activated.map(function (m) { return m.beforeEnter; }),
                // async components
                resolveAsyncComponents(activated)
              );

              this.pending = route;
              var iterator = function (hook, next) {
                if (this$1.pending !== route) {
                  return abort()
                }
                try {
                  hook(route, current, function (to) {
                    if (to === false || isError(to)) {
                      // next(false) -> abort navigation, ensure current URL
                      this$1.ensureURL(true);
                      abort(to);
                    } else if (
                      typeof to === 'string' ||
                      (typeof to === 'object' &&
                        (typeof to.path === 'string' || typeof to.name === 'string'))
                    ) {
                      // next('/') or next({ path: '/' }) -> redirect
                      abort();
                      if (typeof to === 'object' && to.replace) {
                        this$1.replace(to);
                      } else {
                        this$1.push(to);
                      }
                    } else {
                      // confirm transition and pass on the value
                      next(to);
                    }
                  });
                } catch (e) {
                  abort(e);
                }
              };

              runQueue(queue, iterator, function () {
                var postEnterCbs = [];
                var isValid = function () { return this$1.current === route; };
                // wait until async components are resolved before
                // extracting in-component enter guards
                var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);
                var queue = enterGuards.concat(this$1.router.resolveHooks);
                runQueue(queue, iterator, function () {
                  if (this$1.pending !== route) {
                    return abort()
                  }
                  this$1.pending = null;
                  onComplete(route);
                  if (this$1.router.app) {
                    this$1.router.app.$nextTick(function () {
                      postEnterCbs.forEach(function (cb) {
                        cb();
                      });
                    });
                  }
                });
              });
            };

            History.prototype.updateRoute = function updateRoute (route) {
              var prev = this.current;
              this.current = route;
              this.cb && this.cb(route);
              this.router.afterHooks.forEach(function (hook) {
                hook && hook(route, prev);
              });
            };

            function normalizeBase (base) {
              if (!base) {
                if (inBrowser$1) {
                  // respect <base> tag
                  var baseEl = document.querySelector('base');
                  base = (baseEl && baseEl.getAttribute('href')) || '/';
                  // strip full URL origin
                  base = base.replace(/^https?:\/\/[^\/]+/, '');
                } else {
                  base = '/';
                }
              }
              // make sure there's the starting slash
              if (base.charAt(0) !== '/') {
                base = '/' + base;
              }
              // remove trailing slash
              return base.replace(/\/$/, '')
            }

            function resolveQueue (
              current,
              next
            ) {
              var i;
              var max = Math.max(current.length, next.length);
              for (i = 0; i < max; i++) {
                if (current[i] !== next[i]) {
                  break
                }
              }
              return {
                updated: next.slice(0, i),
                activated: next.slice(i),
                deactivated: current.slice(i)
              }
            }

            function extractGuards (
              records,
              name,
              bind,
              reverse
            ) {
              var guards = flatMapComponents(records, function (def, instance, match, key) {
                var guard = extractGuard(def, name);
                if (guard) {
                  return Array.isArray(guard)
                    ? guard.map(function (guard) { return bind(guard, instance, match, key); })
                    : bind(guard, instance, match, key)
                }
              });
              return flatten(reverse ? guards.reverse() : guards)
            }

            function extractGuard (
              def,
              key
            ) {
              if (typeof def !== 'function') {
                // extend now so that global mixins are applied.
                def = _Vue.extend(def);
              }
              return def.options[key]
            }

            function extractLeaveGuards (deactivated) {
              return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)
            }

            function extractUpdateHooks (updated) {
              return extractGuards(updated, 'beforeRouteUpdate', bindGuard)
            }

            function bindGuard (guard, instance) {
              if (instance) {
                return function boundRouteGuard () {
                  return guard.apply(instance, arguments)
                }
              }
            }

            function extractEnterGuards (
              activated,
              cbs,
              isValid
            ) {
              return extractGuards(
                activated,
                'beforeRouteEnter',
                function (guard, _, match, key) {
                  return bindEnterGuard(guard, match, key, cbs, isValid)
                }
              )
            }

            function bindEnterGuard (
              guard,
              match,
              key,
              cbs,
              isValid
            ) {
              return function routeEnterGuard (to, from, next) {
                return guard(to, from, function (cb) {
                  if (typeof cb === 'function') {
                    cbs.push(function () {
                      // #750
                      // if a router-view is wrapped with an out-in transition,
                      // the instance may not have been registered at this time.
                      // we will need to poll for registration until current route
                      // is no longer valid.
                      poll(cb, match.instances, key, isValid);
                    });
                  }
                  next(cb);
                })
              }
            }

            function poll (
              cb, // somehow flow cannot infer this is a function
              instances,
              key,
              isValid
            ) {
              if (
                instances[key] &&
                !instances[key]._isBeingDestroyed // do not reuse being destroyed instance
              ) {
                cb(instances[key]);
              } else if (isValid()) {
                setTimeout(function () {
                  poll(cb, instances, key, isValid);
                }, 16);
              }
            }

            /*  */

            var HTML5History = /*@__PURE__*/(function (History$$1) {
              function HTML5History (router, base) {
                var this$1 = this;

                History$$1.call(this, router, base);

                var expectScroll = router.options.scrollBehavior;
                var supportsScroll = supportsPushState && expectScroll;

                if (supportsScroll) {
                  setupScroll();
                }

                var initLocation = getLocation(this.base);
                window.addEventListener('popstate', function (e) {
                  var current = this$1.current;

                  // Avoiding first `popstate` event dispatched in some browsers but first
                  // history route not updated since async guard at the same time.
                  var location = getLocation(this$1.base);
                  if (this$1.current === START && location === initLocation) {
                    return
                  }

                  this$1.transitionTo(location, function (route) {
                    if (supportsScroll) {
                      handleScroll(router, route, current, true);
                    }
                  });
                });
              }

              if ( History$$1 ) { HTML5History.__proto__ = History$$1; }
              HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );
              HTML5History.prototype.constructor = HTML5History;

              HTML5History.prototype.go = function go (n) {
                window.history.go(n);
              };

              HTML5History.prototype.push = function push (location, onComplete, onAbort) {
                var this$1 = this;

                var ref = this;
                var fromRoute = ref.current;
                this.transitionTo(location, function (route) {
                  pushState(cleanPath(this$1.base + route.fullPath));
                  handleScroll(this$1.router, route, fromRoute, false);
                  onComplete && onComplete(route);
                }, onAbort);
              };

              HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {
                var this$1 = this;

                var ref = this;
                var fromRoute = ref.current;
                this.transitionTo(location, function (route) {
                  replaceState(cleanPath(this$1.base + route.fullPath));
                  handleScroll(this$1.router, route, fromRoute, false);
                  onComplete && onComplete(route);
                }, onAbort);
              };

              HTML5History.prototype.ensureURL = function ensureURL (push) {
                if (getLocation(this.base) !== this.current.fullPath) {
                  var current = cleanPath(this.base + this.current.fullPath);
                  push ? pushState(current) : replaceState(current);
                }
              };

              HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {
                return getLocation(this.base)
              };

              return HTML5History;
            }(History));

            function getLocation (base) {
              var path = decodeURI(window.location.pathname);
              if (base && path.indexOf(base) === 0) {
                path = path.slice(base.length);
              }
              return (path || '/') + window.location.search + window.location.hash
            }

            /*  */

            var HashHistory = /*@__PURE__*/(function (History$$1) {
              function HashHistory (router, base, fallback) {
                History$$1.call(this, router, base);
                // check history fallback deeplinking
                if (fallback && checkFallback(this.base)) {
                  return
                }
                ensureSlash();
              }

              if ( History$$1 ) { HashHistory.__proto__ = History$$1; }
              HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );
              HashHistory.prototype.constructor = HashHistory;

              // this is delayed until the app mounts
              // to avoid the hashchange listener being fired too early
              HashHistory.prototype.setupListeners = function setupListeners () {
                var this$1 = this;

                var router = this.router;
                var expectScroll = router.options.scrollBehavior;
                var supportsScroll = supportsPushState && expectScroll;

                if (supportsScroll) {
                  setupScroll();
                }

                window.addEventListener(
                  supportsPushState ? 'popstate' : 'hashchange',
                  function () {
                    var current = this$1.current;
                    if (!ensureSlash()) {
                      return
                    }
                    this$1.transitionTo(getHash(), function (route) {
                      if (supportsScroll) {
                        handleScroll(this$1.router, route, current, true);
                      }
                      if (!supportsPushState) {
                        replaceHash(route.fullPath);
                      }
                    });
                  }
                );
              };

              HashHistory.prototype.push = function push (location, onComplete, onAbort) {
                var this$1 = this;

                var ref = this;
                var fromRoute = ref.current;
                this.transitionTo(
                  location,
                  function (route) {
                    pushHash(route.fullPath);
                    handleScroll(this$1.router, route, fromRoute, false);
                    onComplete && onComplete(route);
                  },
                  onAbort
                );
              };

              HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {
                var this$1 = this;

                var ref = this;
                var fromRoute = ref.current;
                this.transitionTo(
                  location,
                  function (route) {
                    replaceHash(route.fullPath);
                    handleScroll(this$1.router, route, fromRoute, false);
                    onComplete && onComplete(route);
                  },
                  onAbort
                );
              };

              HashHistory.prototype.go = function go (n) {
                window.history.go(n);
              };

              HashHistory.prototype.ensureURL = function ensureURL (push) {
                var current = this.current.fullPath;
                if (getHash() !== current) {
                  push ? pushHash(current) : replaceHash(current);
                }
              };

              HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {
                return getHash()
              };

              return HashHistory;
            }(History));

            function checkFallback (base) {
              var location = getLocation(base);
              if (!/^\/#/.test(location)) {
                window.location.replace(cleanPath(base + '/#' + location));
                return true
              }
            }

            function ensureSlash () {
              var path = getHash();
              if (path.charAt(0) === '/') {
                return true
              }
              replaceHash('/' + path);
              return false
            }

            function getHash () {
              // We can't use window.location.hash here because it's not
              // consistent across browsers - Firefox will pre-decode it!
              var href = window.location.href;
              var index = href.indexOf('#');
              // empty path
              if (index < 0) { return '' }

              href = href.slice(index + 1);
              // decode the hash but not the search or hash
              // as search(query) is already decoded
              // https://github.com/vuejs/vue-router/issues/2708
              var searchIndex = href.indexOf('?');
              if (searchIndex < 0) {
                var hashIndex = href.indexOf('#');
                if (hashIndex > -1) {
                  href = decodeURI(href.slice(0, hashIndex)) + href.slice(hashIndex);
                } else { href = decodeURI(href); }
              } else {
                if (searchIndex > -1) {
                  href = decodeURI(href.slice(0, searchIndex)) + href.slice(searchIndex);
                }
              }

              return href
            }

            function getUrl (path) {
              var href = window.location.href;
              var i = href.indexOf('#');
              var base = i >= 0 ? href.slice(0, i) : href;
              return (base + "#" + path)
            }

            function pushHash (path) {
              if (supportsPushState) {
                pushState(getUrl(path));
              } else {
                window.location.hash = path;
              }
            }

            function replaceHash (path) {
              if (supportsPushState) {
                replaceState(getUrl(path));
              } else {
                window.location.replace(getUrl(path));
              }
            }

            /*  */

            var AbstractHistory = /*@__PURE__*/(function (History$$1) {
              function AbstractHistory (router, base) {
                History$$1.call(this, router, base);
                this.stack = [];
                this.index = -1;
              }

              if ( History$$1 ) { AbstractHistory.__proto__ = History$$1; }
              AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );
              AbstractHistory.prototype.constructor = AbstractHistory;

              AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {
                var this$1 = this;

                this.transitionTo(
                  location,
                  function (route) {
                    this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);
                    this$1.index++;
                    onComplete && onComplete(route);
                  },
                  onAbort
                );
              };

              AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {
                var this$1 = this;

                this.transitionTo(
                  location,
                  function (route) {
                    this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);
                    onComplete && onComplete(route);
                  },
                  onAbort
                );
              };

              AbstractHistory.prototype.go = function go (n) {
                var this$1 = this;

                var targetIndex = this.index + n;
                if (targetIndex < 0 || targetIndex >= this.stack.length) {
                  return
                }
                var route = this.stack[targetIndex];
                this.confirmTransition(
                  route,
                  function () {
                    this$1.index = targetIndex;
                    this$1.updateRoute(route);
                  },
                  function (err) {
                    if (isExtendedError(NavigationDuplicated, err)) {
                      this$1.index = targetIndex;
                    }
                  }
                );
              };

              AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {
                var current = this.stack[this.stack.length - 1];
                return current ? current.fullPath : '/'
              };

              AbstractHistory.prototype.ensureURL = function ensureURL () {
                // noop
              };

              return AbstractHistory;
            }(History));

            /*  */



            var VueRouter = function VueRouter (options) {
              if ( options === void 0 ) { options = {}; }

              this.app = null;
              this.apps = [];
              this.options = options;
              this.beforeHooks = [];
              this.resolveHooks = [];
              this.afterHooks = [];
              this.matcher = createMatcher(options.routes || [], this);

              var mode = options.mode || 'hash';
              this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;
              if (this.fallback) {
                mode = 'hash';
              }
              if (!inBrowser$1) {
                mode = 'abstract';
              }
              this.mode = mode;

              switch (mode) {
                case 'history':
                  this.history = new HTML5History(this, options.base);
                  break
                case 'hash':
                  this.history = new HashHistory(this, options.base, this.fallback);
                  break
                case 'abstract':
                  this.history = new AbstractHistory(this, options.base);
                  break
                default:
                  {
                    assert(false, ("invalid mode: " + mode));
                  }
              }
            };

            var prototypeAccessors$1 = { currentRoute: { configurable: true } };

            VueRouter.prototype.match = function match (
              raw,
              current,
              redirectedFrom
            ) {
              return this.matcher.match(raw, current, redirectedFrom)
            };

            prototypeAccessors$1.currentRoute.get = function () {
              return this.history && this.history.current
            };

            VueRouter.prototype.init = function init (app /* Vue component instance */) {
                var this$1 = this;

               assert(
                install.installed,
                "not installed. Make sure to call `Vue.use(VueRouter)` " +
                "before creating root instance."
              );

              this.apps.push(app);

              // set up app destroyed handler
              // https://github.com/vuejs/vue-router/issues/2639
              app.$once('hook:destroyed', function () {
                // clean out app from this.apps array once destroyed
                var index = this$1.apps.indexOf(app);
                if (index > -1) { this$1.apps.splice(index, 1); }
                // ensure we still have a main app or null if no apps
                // we do not release the router so it can be reused
                if (this$1.app === app) { this$1.app = this$1.apps[0] || null; }
              });

              // main app previously initialized
              // return as we don't need to set up new history listener
              if (this.app) {
                return
              }

              this.app = app;

              var history = this.history;

              if (history instanceof HTML5History) {
                history.transitionTo(history.getCurrentLocation());
              } else if (history instanceof HashHistory) {
                var setupHashListener = function () {
                  history.setupListeners();
                };
                history.transitionTo(
                  history.getCurrentLocation(),
                  setupHashListener,
                  setupHashListener
                );
              }

              history.listen(function (route) {
                this$1.apps.forEach(function (app) {
                  app._route = route;
                });
              });
            };

            VueRouter.prototype.beforeEach = function beforeEach (fn) {
              return registerHook(this.beforeHooks, fn)
            };

            VueRouter.prototype.beforeResolve = function beforeResolve (fn) {
              return registerHook(this.resolveHooks, fn)
            };

            VueRouter.prototype.afterEach = function afterEach (fn) {
              return registerHook(this.afterHooks, fn)
            };

            VueRouter.prototype.onReady = function onReady (cb, errorCb) {
              this.history.onReady(cb, errorCb);
            };

            VueRouter.prototype.onError = function onError (errorCb) {
              this.history.onError(errorCb);
            };

            VueRouter.prototype.push = function push (location, onComplete, onAbort) {
                var this$1 = this;

              // $flow-disable-line
              if (!onComplete && !onAbort && typeof Promise !== 'undefined') {
                return new Promise(function (resolve, reject) {
                  this$1.history.push(location, resolve, reject);
                })
              } else {
                this.history.push(location, onComplete, onAbort);
              }
            };

            VueRouter.prototype.replace = function replace (location, onComplete, onAbort) {
                var this$1 = this;

              // $flow-disable-line
              if (!onComplete && !onAbort && typeof Promise !== 'undefined') {
                return new Promise(function (resolve, reject) {
                  this$1.history.replace(location, resolve, reject);
                })
              } else {
                this.history.replace(location, onComplete, onAbort);
              }
            };

            VueRouter.prototype.go = function go (n) {
              this.history.go(n);
            };

            VueRouter.prototype.back = function back () {
              this.go(-1);
            };

            VueRouter.prototype.forward = function forward () {
              this.go(1);
            };

            VueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {
              var route = to
                ? to.matched
                  ? to
                  : this.resolve(to).route
                : this.currentRoute;
              if (!route) {
                return []
              }
              return [].concat.apply([], route.matched.map(function (m) {
                return Object.keys(m.components).map(function (key) {
                  return m.components[key]
                })
              }))
            };

            VueRouter.prototype.resolve = function resolve (
              to,
              current,
              append
            ) {
              current = current || this.history.current;
              var location = normalizeLocation(
                to,
                current,
                append,
                this
              );
              var route = this.match(location, current);
              var fullPath = route.redirectedFrom || route.fullPath;
              var base = this.history.base;
              var href = createHref(base, fullPath, this.mode);
              return {
                location: location,
                route: route,
                href: href,
                // for backwards compat
                normalizedTo: location,
                resolved: route
              }
            };

            VueRouter.prototype.addRoutes = function addRoutes (routes) {
              this.matcher.addRoutes(routes);
              if (this.history.current !== START) {
                this.history.transitionTo(this.history.getCurrentLocation());
              }
            };

            Object.defineProperties( VueRouter.prototype, prototypeAccessors$1 );

            function registerHook (list, fn) {
              list.push(fn);
              return function () {
                var i = list.indexOf(fn);
                if (i > -1) { list.splice(i, 1); }
              }
            }

            function createHref (base, fullPath, mode) {
              var path = mode === 'hash' ? '#' + fullPath : fullPath;
              return base ? cleanPath(base + '/' + path) : path
            }

            VueRouter.install = install;
            VueRouter.version = '3.1.2';

            if (inBrowser$1 && window.Vue) {
              window.Vue.use(VueRouter);
            }

            function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier
            /* server only */
            , shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
              if (typeof shadowMode !== 'boolean') {
                createInjectorSSR = createInjector;
                createInjector = shadowMode;
                shadowMode = false;
              } // Vue.extend constructor export interop.


              var options = typeof script === 'function' ? script.options : script; // render functions

              if (template && template.render) {
                options.render = template.render;
                options.staticRenderFns = template.staticRenderFns;
                options._compiled = true; // functional template

                if (isFunctionalTemplate) {
                  options.functional = true;
                }
              } // scopedId


              if (scopeId) {
                options._scopeId = scopeId;
              }

              var hook;

              if (moduleIdentifier) {
                // server build
                hook = function hook(context) {
                  // 2.3 injection
                  context = context || // cached call
                  this.$vnode && this.$vnode.ssrContext || // stateful
                  this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional
                  // 2.2 with runInNewContext: true

                  if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                    context = __VUE_SSR_CONTEXT__;
                  } // inject component styles


                  if (style) {
                    style.call(this, createInjectorSSR(context));
                  } // register component module identifier for async chunk inference


                  if (context && context._registeredComponents) {
                    context._registeredComponents.add(moduleIdentifier);
                  }
                }; // used by ssr in case component is cached and beforeCreate
                // never gets called


                options._ssrRegister = hook;
              } else if (style) {
                hook = shadowMode ? function () {
                  style.call(this, createInjectorShadow(this.$root.$options.shadowRoot));
                } : function (context) {
                  style.call(this, createInjector(context));
                };
              }

              if (hook) {
                if (options.functional) {
                  // register for functional component in vue file
                  var originalRender = options.render;

                  options.render = function renderWithStyleInjection(h, context) {
                    hook.call(context);
                    return originalRender(h, context);
                  };
                } else {
                  // inject component registration as beforeCreate hook
                  var existing = options.beforeCreate;
                  options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
                }
              }

              return script;
            }

            var normalizeComponent_1 = normalizeComponent;

            /* script */

            /* template */
            var __vue_render__ = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("Icon", { attrs: { type: "ios-checkmark", size: "24" } }),
                  _vm._v(" "),
                  _c("Icon", { attrs: { type: "ios-albums", size: "40" } })
                ],
                1
              )
            };
            var __vue_staticRenderFns__ = [];
            __vue_render__._withStripped = true;

              /* style */
              var __vue_inject_styles__ = undefined;
              /* scoped */
              var __vue_scope_id__ = undefined;
              /* module identifier */
              var __vue_module_identifier__ = undefined;
              /* functional template */
              var __vue_is_functional_template__ = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Icon = normalizeComponent_1(
                { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
                __vue_inject_styles__,
                {},
                __vue_scope_id__,
                __vue_is_functional_template__,
                __vue_module_identifier__,
                undefined,
                undefined
              );

            /* script */

            /* template */
            var __vue_render__$1 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c(
                    "div",
                    { staticClass: "demo-avatar" },
                    [
                      _c("Avatar", { attrs: { icon: "ios-person", size: "large" } }),
                      _vm._v(" "),
                      _c("Avatar", { attrs: { icon: "ios-person" } }),
                      _vm._v(" "),
                      _c("Avatar", { attrs: { icon: "ios-person", size: "small" } })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "demo-avatar" },
                    [
                      _c("Avatar", {
                        attrs: { shape: "square", icon: "ios-person", size: "large" }
                      }),
                      _vm._v(" "),
                      _c("Avatar", { attrs: { shape: "square", icon: "ios-person" } }),
                      _vm._v(" "),
                      _c("Avatar", {
                        attrs: { shape: "square", icon: "ios-person", size: "small" }
                      })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c("Avatar", { attrs: { icon: "ios-person" } }),
                  _vm._v(" "),
                  _c("Avatar", [_vm._v("U")]),
                  _vm._v(" "),
                  _c("Avatar", [_vm._v("USER")]),
                  _vm._v(" "),
                  _c("Avatar", {
                    attrs: { src: "https://i.loli.net/2017/08/21/599a521472424.jpg" }
                  }),
                  _vm._v(" "),
                  _c(
                    "Avatar",
                    { staticStyle: { color: "#f56a00", "background-color": "#fde3cf" } },
                    [_vm._v("U")]
                  ),
                  _vm._v(" "),
                  _c("Avatar", {
                    staticStyle: { "background-color": "#87d068" },
                    attrs: { icon: "ios-person" }
                  }),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c(
                    "Badge",
                    { attrs: { count: 1 } },
                    [_c("Avatar", { attrs: { shape: "square", icon: "ios-person" } })],
                    1
                  ),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c(
                    "Badge",
                    { attrs: { dot: "" } },
                    [_c("Avatar", { attrs: { shape: "square", icon: "ios-person" } })],
                    1
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$1 = [];
            __vue_render__$1._withStripped = true;

              /* style */
              var __vue_inject_styles__$1 = undefined;
              /* scoped */
              var __vue_scope_id__$1 = undefined;
              /* module identifier */
              var __vue_module_identifier__$1 = undefined;
              /* functional template */
              var __vue_is_functional_template__$1 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Avatar = normalizeComponent_1(
                { render: __vue_render__$1, staticRenderFns: __vue_staticRenderFns__$1 },
                __vue_inject_styles__$1,
                {},
                __vue_scope_id__$1,
                __vue_is_functional_template__$1,
                __vue_module_identifier__$1,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //

            var script = {
              
            };

            function styleInject(css, ref) {
              if ( ref === void 0 ) { ref = {}; }
              var insertAt = ref.insertAt;

              if (!css || typeof document === 'undefined') { return; }

              var head = document.head || document.getElementsByTagName('head')[0];
              var style = document.createElement('style');
              style.type = 'text/css';

              if (insertAt === 'top') {
                if (head.firstChild) {
                  head.insertBefore(style, head.firstChild);
                } else {
                  head.appendChild(style);
                }
              } else {
                head.appendChild(style);
              }

              if (style.styleSheet) {
                style.styleSheet.cssText = css;
              } else {
                style.appendChild(document.createTextNode(css));
              }
            }

            var css = "";
            styleInject(css);

            /* script */
            var __vue_script__ = script;
            /* template */
            var __vue_render__$2 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", [_c("router-view")], 1)
            };
            var __vue_staticRenderFns__$2 = [];
            __vue_render__$2._withStripped = true;

              /* style */
              var __vue_inject_styles__$2 = undefined;
              /* scoped */
              var __vue_scope_id__$2 = undefined;
              /* module identifier */
              var __vue_module_identifier__$2 = undefined;
              /* functional template */
              var __vue_is_functional_template__$2 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var HomeRouter = normalizeComponent_1(
                { render: __vue_render__$2, staticRenderFns: __vue_staticRenderFns__$2 },
                __vue_inject_styles__$2,
                __vue_script__,
                __vue_scope_id__$2,
                __vue_is_functional_template__$2,
                __vue_module_identifier__$2,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$1 = {};

            var css$1 = "";
            styleInject(css$1);

            /* script */
            var __vue_script__$1 = script$1;
            /* template */
            var __vue_render__$3 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [
                    _vm._v("DatePicker 日期选择器")
                  ]),
                  _vm._v(" "),
                  _c("p", [_vm._v("选择或输入日期，支持年、月、日期等类型，支持选择范围")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "设置属性 type 为 date 或 daterange 分别显示选择单日和选择范围类型。"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    [
                      _c(
                        "Col",
                        { attrs: { span: "12" } },
                        [
                          _c("DatePicker", {
                            staticStyle: { width: "200px" },
                            attrs: { type: "date", placeholder: "Select date" }
                          })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Col",
                        { attrs: { span: "12" } },
                        [
                          _c("DatePicker", {
                            staticStyle: { width: "200px" },
                            attrs: {
                              type: "daterange",
                              placement: "bottom-end",
                              placeholder: "Select date"
                            }
                          })
                        ],
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$3 = [];
            __vue_render__$3._withStripped = true;

              /* style */
              var __vue_inject_styles__$3 = undefined;
              /* scoped */
              var __vue_scope_id__$3 = undefined;
              /* module identifier */
              var __vue_module_identifier__$3 = undefined;
              /* functional template */
              var __vue_is_functional_template__$3 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var DatePicker = normalizeComponent_1(
                { render: __vue_render__$3, staticRenderFns: __vue_staticRenderFns__$3 },
                __vue_inject_styles__$3,
                __vue_script__$1,
                __vue_scope_id__$3,
                __vue_is_functional_template__$3,
                __vue_module_identifier__$3,
                undefined,
                undefined
              );

            //
            //
            //

            var script$2 = {
              
            };

            var css$2 = "";
            styleInject(css$2);

            /* script */
            var __vue_script__$2 = script$2;
            /* template */
            var __vue_render__$4 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div")
            };
            var __vue_staticRenderFns__$4 = [];
            __vue_render__$4._withStripped = true;

              /* style */
              var __vue_inject_styles__$4 = undefined;
              /* scoped */
              var __vue_scope_id__$4 = undefined;
              /* module identifier */
              var __vue_module_identifier__$4 = undefined;
              /* functional template */
              var __vue_is_functional_template__$4 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var TimePicker = normalizeComponent_1(
                { render: __vue_render__$4, staticRenderFns: __vue_staticRenderFns__$4 },
                __vue_inject_styles__$4,
                __vue_script__$2,
                __vue_scope_id__$4,
                __vue_is_functional_template__$4,
                __vue_module_identifier__$4,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$3 = {
              data: function data() {
                return {
                  value1: "",
                  data1: [],
                  value2: "",
                  data2: [],
                  value3: "",
                  data3: ["Steve Jobs", "Stephen Gary Wozniak", "Jonathan Paul Ive"],
                  value4: "",
                  data4: [
                    {
                      title: "话题",
                      children: [
                        {
                          title: "iView",
                          count: 10000
                        },
                        {
                          title: "iView UI",
                          count: 10600
                        }
                      ]
                    },
                    {
                      title: "问题",
                      children: [
                        {
                          title: "iView UI 有多好",
                          count: 60100
                        },
                        {
                          title: "iView 是啥",
                          count: 30010
                        }
                      ]
                    },
                    {
                      title: "文章",
                      children: [
                        {
                          title: "iView 是一个设计语言",
                          count: 100000
                        }
                      ]
                    }
                  ]
                };
              },
              methods: {
                handleSearch1: function handleSearch1(value) {
                  this.data1 = !value ? [] : [value, value + value, value + value + value];
                },
                handleSearch2: function handleSearch2(value) {
                  this.data2 =
                    !value || value.indexOf("@") >= 0
                      ? []
                      : [value + "@qq.com", value + "@sina.com", value + "@163.com"];
                },
                filterMethod: function filterMethod(value, option) {
                  return option.toUpperCase().indexOf(value.toUpperCase()) !== -1;
                }
              }
            };

            var css$3 = ".demo-auto-complete-item{padding:4px 0;border-bottom:1px solid #f6f6f6}.demo-auto-complete-group{font-size:12px;padding:4px 6px}.demo-auto-complete-group span{color:#666;font-weight:700}.demo-auto-complete-group a{float:right}.demo-auto-complete-count{float:right;color:#999}.demo-auto-complete-more{display:block;margin:0 auto;padding:4px;text-align:center;font-size:12px}";
            styleInject(css$3);

            /* script */
            var __vue_script__$3 = script$3;
            /* template */
            var __vue_render__$5 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [
                    _vm._v("AutoComplete 自动完成")
                  ]),
                  _vm._v(" "),
                  _c("p", [_vm._v("输入框自动完成功能。")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("基本用法，通过 data 设置自动完成的数据源。")
                  ]),
                  _vm._v(" "),
                  _c("AutoComplete", {
                    staticStyle: { width: "200px" },
                    attrs: { data: _vm.data1, placeholder: "input here" },
                    on: { "on-search": _vm.handleSearch1 },
                    model: {
                      value: _vm.value1,
                      callback: function($$v) {
                        _vm.value1 = $$v;
                      },
                      expression: "value1"
                    }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("不区分大小写的 AutoComplete，及过滤的用法。")
                  ]),
                  _vm._v(" "),
                  _c("AutoComplete", {
                    staticStyle: { width: "200px" },
                    attrs: {
                      data: _vm.data3,
                      "filter-method": _vm.filterMethod,
                      placeholder: "input here"
                    },
                    model: {
                      value: _vm.value3,
                      callback: function($$v) {
                        _vm.value3 = $$v;
                      },
                      expression: "value3"
                    }
                  })
                ],
                1
              )
            };
            var __vue_staticRenderFns__$5 = [];
            __vue_render__$5._withStripped = true;

              /* style */
              var __vue_inject_styles__$5 = undefined;
              /* scoped */
              var __vue_scope_id__$5 = undefined;
              /* module identifier */
              var __vue_module_identifier__$5 = undefined;
              /* functional template */
              var __vue_is_functional_template__$5 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var AutoComplete = normalizeComponent_1(
                { render: __vue_render__$5, staticRenderFns: __vue_staticRenderFns__$5 },
                __vue_inject_styles__$5,
                __vue_script__$3,
                __vue_scope_id__$5,
                __vue_is_functional_template__$5,
                __vue_module_identifier__$5,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$4 = {
              data: function data() {
                var this$1 = this;

                var validatePass = function (rule, value, callback) {
                  if (value === "") {
                    callback(new Error("Please enter your password"));
                  } else {
                    if (this$1.formCustom.passwdCheck !== "") {
                      // 对第二个密码框单独验证
                      this$1.$refs.formCustom.validateField("passwdCheck");
                    }
                    callback();
                  }
                };
                var validatePassCheck = function (rule, value, callback) {
                  if (value === "") {
                    callback(new Error("Please enter your password again"));
                  } else if (value !== this$1.formCustom.passwd) {
                    callback(new Error("The two input passwords do not match!"));
                  } else {
                    callback();
                  }
                };
                var validateAge = function (rule, value, callback) {
                  if (!value) {
                    return callback(new Error("Age cannot be empty"));
                  }
                  // 模拟异步验证效果
                  setTimeout(function () {
                    if (!Number.isInteger(value)) {
                      callback(new Error("Please enter a numeric value"));
                    } else {
                      if (value < 18) {
                        callback(new Error("Must be over 18 years of age"));
                      } else {
                        callback();
                      }
                    }
                  }, 1000);
                };
                return {
                  formInline: {
                    user: "",
                    password: ""
                  },
                  ruleInline: {
                    user: [
                      {
                        required: true,
                        message: "Please fill in the user name",
                        trigger: "blur"
                      }
                    ],
                    password: [
                      {
                        required: true,
                        message: "Please fill in the password.",
                        trigger: "blur"
                      },
                      {
                        type: "string",
                        min: 6,
                        message: "The password length cannot be less than 6 bits",
                        trigger: "blur"
                      }
                    ]
                  },
                  formItem: {
                    input: "",
                    select: "",
                    radio: "male",
                    checkbox: [],
                    switch: true,
                    date: "",
                    time: "",
                    slider: [20, 50],
                    textarea: ""
                  },
                  formLeft: {
                    input1: "",
                    input2: "",
                    input3: ""
                  },
                  formRight: {
                    input1: "",
                    input2: "",
                    input3: ""
                  },
                  formTop: {
                    input1: "",
                    input2: "",
                    input3: ""
                  },
                  formValidate: {
                    name: "",
                    mail: "",
                    city: "",
                    gender: "",
                    interest: [],
                    date: "",
                    time: "",
                    desc: ""
                  },
                  ruleValidate: {
                    name: [
                      {
                        required: true,
                        message: "The name cannot be empty",
                        trigger: "blur"
                      }
                    ],
                    mail: [
                      {
                        required: true,
                        message: "Mailbox cannot be empty",
                        trigger: "blur"
                      },
                      { type: "email", message: "Incorrect email format", trigger: "blur" }
                    ],
                    city: [
                      {
                        required: true,
                        message: "Please select the city",
                        trigger: "change"
                      }
                    ],
                    gender: [
                      { required: true, message: "Please select gender", trigger: "change" }
                    ],
                    interest: [
                      {
                        required: true,
                        type: "array",
                        min: 1,
                        message: "Choose at least one hobby",
                        trigger: "change"
                      },
                      {
                        type: "array",
                        max: 2,
                        message: "Choose two hobbies at best",
                        trigger: "change"
                      }
                    ],
                    date: [
                      {
                        required: true,
                        type: "date",
                        message: "Please select the date",
                        trigger: "change"
                      }
                    ],
                    time: [
                      {
                        required: true,
                        type: "string",
                        message: "Please select time",
                        trigger: "change"
                      }
                    ],
                    desc: [
                      {
                        required: true,
                        message: "Please enter a personal introduction",
                        trigger: "blur"
                      },
                      {
                        type: "string",
                        min: 20,
                        message: "Introduce no less than 20 words",
                        trigger: "blur"
                      }
                    ]
                  },
                  formCustom: {
                    passwd: "",
                    passwdCheck: "",
                    age: ""
                  },
                  ruleCustom: {
                    passwd: [{ validator: validatePass, trigger: "blur" }],
                    passwdCheck: [{ validator: validatePassCheck, trigger: "blur" }],
                    age: [{ validator: validateAge, trigger: "blur" }]
                  },
                  index: 1,
                  formDynamic: {
                    items: [
                      {
                        value: "",
                        index: 1,
                        status: 1
                      }
                    ]
                  }
                };
              },
              methods: {
                handleSubmit: function handleSubmit(name) {
                  var this$1 = this;

                  this.$refs[name].validate(function (valid) {
                    if (valid) {
                      this$1.$Message.success("Success!");
                    } else {
                      this$1.$Message.error("Fail!");
                    }
                  });
                },
                handleReset: function handleReset(name) {
                  this.$refs[name].resetFields();
                },
                handleAdd: function handleAdd() {
                  this.index++;
                  this.formDynamic.items.push({
                    value: "",
                    index: this.index,
                    status: 1
                  });
                },
                handleRemove: function handleRemove(index) {
                  this.formDynamic.items[index].status = 0;
                }
              }
            };

            var css$4 = "";
            styleInject(css$4);

            /* script */
            var __vue_script__$4 = script$4;
            /* template */
            var __vue_render__$6 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Form 表单")]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "具有数据收集、校验和提交功能的表单，包含复选框、单选框、输入框、下拉选择框等元素。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("设置属性 inline，表单元素可以水平排列。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Form",
                    {
                      ref: "formInline",
                      attrs: { model: _vm.formInline, rules: _vm.ruleInline, inline: "" }
                    },
                    [
                      _c(
                        "FormItem",
                        { attrs: { prop: "user" } },
                        [
                          _c(
                            "Input",
                            {
                              attrs: { type: "text", placeholder: "Username" },
                              model: {
                                value: _vm.formInline.user,
                                callback: function($$v) {
                                  _vm.$set(_vm.formInline, "user", $$v);
                                },
                                expression: "formInline.user"
                              }
                            },
                            [
                              _c("Icon", {
                                attrs: { slot: "prepend", type: "ios-person-outline" },
                                slot: "prepend"
                              })
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "FormItem",
                        { attrs: { prop: "password" } },
                        [
                          _c(
                            "Input",
                            {
                              attrs: { type: "password", placeholder: "Password" },
                              model: {
                                value: _vm.formInline.password,
                                callback: function($$v) {
                                  _vm.$set(_vm.formInline, "password", $$v);
                                },
                                expression: "formInline.password"
                              }
                            },
                            [
                              _c("Icon", {
                                attrs: { slot: "prepend", type: "ios-locked-outline" },
                                slot: "prepend"
                              })
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "FormItem",
                        [
                          _c(
                            "Button",
                            {
                              attrs: { type: "primary" },
                              on: {
                                click: function($event) {
                                  return _vm.handleSubmit("formInline")
                                }
                              }
                            },
                            [_vm._v("Signin")]
                          )
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("表单控件")]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "\n    在 Form 内，每个表单域由 FormItem 组成，可包含的控件有：Input、Radio、Checkbox、Switch、Select、\n    Slider、DatePicker、TimePicker、Cascader、Transfer、InputNumber、Rate、Upload、AutoComplete、ColorPicker。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "给 FormItem 设置属性 label 可以显示表单域的标签，需要给 Form 设置 label-width"
                    )
                  ]),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "给 FormItem 设置属性 label-for 可以指定原生的 label 标签的 for 属性，配合设置控件的 element-id 属性，可以点击 label 时聚焦控件。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c(
                    "Form",
                    { attrs: { model: _vm.formItem, "label-width": 80 } },
                    [
                      _c(
                        "FormItem",
                        { attrs: { label: "Input" } },
                        [
                          _c("Input", {
                            attrs: { placeholder: "Enter something..." },
                            model: {
                              value: _vm.formItem.input,
                              callback: function($$v) {
                                _vm.$set(_vm.formItem, "input", $$v);
                              },
                              expression: "formItem.input"
                            }
                          })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "FormItem",
                        { attrs: { label: "Select" } },
                        [
                          _c(
                            "Select",
                            {
                              model: {
                                value: _vm.formItem.select,
                                callback: function($$v) {
                                  _vm.$set(_vm.formItem, "select", $$v);
                                },
                                expression: "formItem.select"
                              }
                            },
                            [
                              _c("Option", { attrs: { value: "beijing" } }, [
                                _vm._v("New York")
                              ]),
                              _vm._v(" "),
                              _c("Option", { attrs: { value: "shanghai" } }, [
                                _vm._v("London")
                              ]),
                              _vm._v(" "),
                              _c("Option", { attrs: { value: "shenzhen" } }, [
                                _vm._v("Sydney")
                              ])
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "FormItem",
                        { attrs: { label: "Radio" } },
                        [
                          _c(
                            "RadioGroup",
                            {
                              model: {
                                value: _vm.formItem.radio,
                                callback: function($$v) {
                                  _vm.$set(_vm.formItem, "radio", $$v);
                                },
                                expression: "formItem.radio"
                              }
                            },
                            [
                              _c("Radio", { attrs: { label: "male" } }, [_vm._v("Male")]),
                              _vm._v(" "),
                              _c("Radio", { attrs: { label: "female" } }, [
                                _vm._v("Female")
                              ])
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "FormItem",
                        { attrs: { label: "Checkbox" } },
                        [
                          _c(
                            "CheckboxGroup",
                            {
                              model: {
                                value: _vm.formItem.checkbox,
                                callback: function($$v) {
                                  _vm.$set(_vm.formItem, "checkbox", $$v);
                                },
                                expression: "formItem.checkbox"
                              }
                            },
                            [
                              _c("Checkbox", { attrs: { label: "Eat" } }),
                              _vm._v(" "),
                              _c("Checkbox", { attrs: { label: "Sleep" } }),
                              _vm._v(" "),
                              _c("Checkbox", { attrs: { label: "Run" } }),
                              _vm._v(" "),
                              _c("Checkbox", { attrs: { label: "Movie" } })
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "FormItem",
                        { attrs: { label: "Switch" } },
                        [
                          _c(
                            "i-switch",
                            {
                              attrs: { size: "large" },
                              model: {
                                value: _vm.formItem.switch,
                                callback: function($$v) {
                                  _vm.$set(_vm.formItem, "switch", $$v);
                                },
                                expression: "formItem.switch"
                              }
                            },
                            [
                              _c("span", { attrs: { slot: "open" }, slot: "open" }, [
                                _vm._v("On")
                              ]),
                              _vm._v(" "),
                              _c("span", { attrs: { slot: "close" }, slot: "close" }, [
                                _vm._v("Off")
                              ])
                            ]
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "FormItem",
                        { attrs: { label: "Slider" } },
                        [
                          _c("Slider", {
                            attrs: { range: "" },
                            model: {
                              value: _vm.formItem.slider,
                              callback: function($$v) {
                                _vm.$set(_vm.formItem, "slider", $$v);
                              },
                              expression: "formItem.slider"
                            }
                          })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "FormItem",
                        { attrs: { label: "Text" } },
                        [
                          _c("Input", {
                            attrs: {
                              type: "textarea",
                              autosize: { minRows: 2, maxRows: 5 },
                              placeholder: "Enter something..."
                            },
                            model: {
                              value: _vm.formItem.textarea,
                              callback: function($$v) {
                                _vm.$set(_vm.formItem, "textarea", $$v);
                              },
                              expression: "formItem.textarea"
                            }
                          })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "FormItem",
                        [
                          _c("Button", { attrs: { type: "primary" } }, [_vm._v("Submit")]),
                          _vm._v(" "),
                          _c(
                            "Button",
                            {
                              staticStyle: { "margin-left": "8px" },
                              attrs: { type: "ghost" }
                            },
                            [_vm._v("Cancel")]
                          )
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "设置属性 label-position，可以改变表单域标签的位置，left 为左对齐，right 为右对齐，top 会置于表单域顶部。"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Form",
                    {
                      attrs: {
                        model: _vm.formLeft,
                        "label-position": "left",
                        "label-width": 100
                      }
                    },
                    [
                      _c(
                        "FormItem",
                        { attrs: { label: "Title" } },
                        [
                          _c("Input", {
                            model: {
                              value: _vm.formLeft.input1,
                              callback: function($$v) {
                                _vm.$set(_vm.formLeft, "input1", $$v);
                              },
                              expression: "formLeft.input1"
                            }
                          })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "FormItem",
                        { attrs: { label: "Title name" } },
                        [
                          _c("Input", {
                            model: {
                              value: _vm.formLeft.input2,
                              callback: function($$v) {
                                _vm.$set(_vm.formLeft, "input2", $$v);
                              },
                              expression: "formLeft.input2"
                            }
                          })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "FormItem",
                        { attrs: { label: "Aligned title" } },
                        [
                          _c("Input", {
                            model: {
                              value: _vm.formLeft.input3,
                              callback: function($$v) {
                                _vm.$set(_vm.formLeft, "input3", $$v);
                              },
                              expression: "formLeft.input3"
                            }
                          })
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "Form",
                    {
                      attrs: {
                        model: _vm.formRight,
                        "label-position": "right",
                        "label-width": 100
                      }
                    },
                    [
                      _c(
                        "FormItem",
                        { attrs: { label: "Title" } },
                        [
                          _c("Input", {
                            model: {
                              value: _vm.formRight.input1,
                              callback: function($$v) {
                                _vm.$set(_vm.formRight, "input1", $$v);
                              },
                              expression: "formRight.input1"
                            }
                          })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "FormItem",
                        { attrs: { label: "Title name" } },
                        [
                          _c("Input", {
                            model: {
                              value: _vm.formRight.input2,
                              callback: function($$v) {
                                _vm.$set(_vm.formRight, "input2", $$v);
                              },
                              expression: "formRight.input2"
                            }
                          })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "FormItem",
                        { attrs: { label: "Aligned title" } },
                        [
                          _c("Input", {
                            model: {
                              value: _vm.formRight.input3,
                              callback: function($$v) {
                                _vm.$set(_vm.formRight, "input3", $$v);
                              },
                              expression: "formRight.input3"
                            }
                          })
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "Form",
                    { attrs: { model: _vm.formTop, "label-position": "top" } },
                    [
                      _c(
                        "FormItem",
                        { attrs: { label: "Title" } },
                        [
                          _c("Input", {
                            model: {
                              value: _vm.formTop.input1,
                              callback: function($$v) {
                                _vm.$set(_vm.formTop, "input1", $$v);
                              },
                              expression: "formTop.input1"
                            }
                          })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "FormItem",
                        { attrs: { label: "Title name" } },
                        [
                          _c("Input", {
                            model: {
                              value: _vm.formTop.input2,
                              callback: function($$v) {
                                _vm.$set(_vm.formTop, "input2", $$v);
                              },
                              expression: "formTop.input2"
                            }
                          })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "FormItem",
                        { attrs: { label: "Aligned title" } },
                        [
                          _c("Input", {
                            model: {
                              value: _vm.formTop.input3,
                              callback: function($$v) {
                                _vm.$set(_vm.formTop, "input3", $$v);
                              },
                              expression: "formTop.input3"
                            }
                          })
                        ],
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$6 = [];
            __vue_render__$6._withStripped = true;

              /* style */
              var __vue_inject_styles__$6 = undefined;
              /* scoped */
              var __vue_scope_id__$6 = undefined;
              /* module identifier */
              var __vue_module_identifier__$6 = undefined;
              /* functional template */
              var __vue_is_functional_template__$6 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Form = normalizeComponent_1(
                { render: __vue_render__$6, staticRenderFns: __vue_staticRenderFns__$6 },
                __vue_inject_styles__$6,
                __vue_script__$4,
                __vue_scope_id__$6,
                __vue_is_functional_template__$6,
                __vue_module_identifier__$6,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$5 = {
              data: function data() {
                return {
                  value1: 25,
                  value2: [20, 50],
                  value3: [20, 50],
                  value4: 30,
                  value5: [20, 50],
                  value6: 30,
                  value7: [20, 50],
                  value8: 25,
                  value9: 25,
                  value10: 25
                };
              },
              methods: {
                format: function format(val) {
                  return "Progress: " + val + "%";
                },
                hideFormat: function hideFormat() {
                  return null;
                }
              }
            };

            /* script */
            var __vue_script__$5 = script$5;

            /* template */
            var __vue_render__$7 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Slider 滑块")]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "滑动输入器，用于在数值区间/自定义区间内进行选择，支持连续或离散值。"
                    )
                  ]),
                  _vm._v(" "),
                  _vm._m(0),
                  _vm._v(" "),
                  _c("Slider", {
                    model: {
                      value: _vm.value1,
                      callback: function($$v) {
                        _vm.value1 = $$v;
                      },
                      expression: "value1"
                    }
                  }),
                  _vm._v(" "),
                  _c("Slider", {
                    attrs: { range: "" },
                    model: {
                      value: _vm.value2,
                      callback: function($$v) {
                        _vm.value2 = $$v;
                      },
                      expression: "value2"
                    }
                  }),
                  _vm._v(" "),
                  _c("Slider", {
                    attrs: { range: "", disabled: "" },
                    model: {
                      value: _vm.value3,
                      callback: function($$v) {
                        _vm.value3 = $$v;
                      },
                      expression: "value3"
                    }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过设置属性 step 可以控制每次滑动的间隔。")
                  ]),
                  _vm._v(" "),
                  _c("Slider", {
                    attrs: { step: 10 },
                    model: {
                      value: _vm.value4,
                      callback: function($$v) {
                        _vm.value4 = $$v;
                      },
                      expression: "value4"
                    }
                  }),
                  _vm._v(" "),
                  _c("Slider", {
                    attrs: { step: 10, range: "" },
                    model: {
                      value: _vm.value5,
                      callback: function($$v) {
                        _vm.value5 = $$v;
                      },
                      expression: "value5"
                    }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "通过设置属性 show-stops 可以显示间断点，建议在 step 间隔不密集时使用。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("Slider", {
                    attrs: { step: 10, "show-stops": "" },
                    model: {
                      value: _vm.value6,
                      callback: function($$v) {
                        _vm.value6 = $$v;
                      },
                      expression: "value6"
                    }
                  }),
                  _vm._v(" "),
                  _c("Slider", {
                    attrs: { step: 10, "show-stops": "", range: "" },
                    model: {
                      value: _vm.value7,
                      callback: function($$v) {
                        _vm.value7 = $$v;
                      },
                      expression: "value7"
                    }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "通过设置属性 show-input 可以显示数字输入框，配合使用，仅在单滑块模式下有效。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("Slider", {
                    attrs: { "show-input": "" },
                    model: {
                      value: _vm.value8,
                      callback: function($$v) {
                        _vm.value8 = $$v;
                      },
                      expression: "value8"
                    }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "Slider 会把当前值传给 tip-format，并在 Tooltip 中显示 tip-format 的返回值，若为 null，则隐藏 Tooltip。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("Slider", {
                    attrs: { "tip-format": _vm.format },
                    model: {
                      value: _vm.value9,
                      callback: function($$v) {
                        _vm.value9 = $$v;
                      },
                      expression: "value9"
                    }
                  }),
                  _vm._v(" "),
                  _c("Slider", {
                    attrs: { "tip-format": _vm.hideFormat },
                    model: {
                      value: _vm.value10,
                      callback: function($$v) {
                        _vm.value10 = $$v;
                      },
                      expression: "value10"
                    }
                  })
                ],
                1
              )
            };
            var __vue_staticRenderFns__$7 = [
              function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c("div", { staticClass: "page-sub-title" }, [
                  _vm._v("\n    滑块的基本用法，可以使用 v-model 双向绑定数据。\n    "),
                  _c("br"),
                  _vm._v(
                    "通过设置属性 range 开启双滑块，通过设置属性 disabled 禁用滑块。\n    "
                  ),
                  _c("br"),
                  _vm._v(
                    "注意，单滑块时，value 格式为数字，当开启双滑块时，value 为长度是2的数组，且每项为数字。\n  "
                  )
                ])
              }
            ];
            __vue_render__$7._withStripped = true;

              /* style */
              var __vue_inject_styles__$7 = undefined;
              /* scoped */
              var __vue_scope_id__$7 = undefined;
              /* module identifier */
              var __vue_module_identifier__$7 = undefined;
              /* functional template */
              var __vue_is_functional_template__$7 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Slider = normalizeComponent_1(
                { render: __vue_render__$7, staticRenderFns: __vue_staticRenderFns__$7 },
                __vue_inject_styles__$7,
                __vue_script__$5,
                __vue_scope_id__$7,
                __vue_is_functional_template__$7,
                __vue_module_identifier__$7,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$6 = {
              data: function data() {
                return {
                  columns1: [
                    {
                      title: "Name",
                      key: "name"
                    },
                    {
                      title: "Age",
                      key: "age"
                    },
                    {
                      title: "Address",
                      key: "address"
                    }
                  ],
                  data1: [
                    {
                      name: "John Brown",
                      age: 18,
                      address: "New York No. 1 Lake Park",
                      date: "2016-10-03"
                    },
                    {
                      name: "Jim Green",
                      age: 24,
                      address: "London No. 1 Lake Park",
                      date: "2016-10-01"
                    },
                    {
                      name: "Joe Black",
                      age: 30,
                      address: "Sydney No. 1 Lake Park",
                      date: "2016-10-02"
                    },
                    {
                      name: "Jon Snow",
                      age: 26,
                      address: "Ottawa No. 2 Lake Park",
                      date: "2016-10-04"
                    }
                  ],
                  columns9: [
                    {
                      title: "Name",
                      key: "name"
                    },
                    {
                      title: "Age",
                      key: "age",
                      className: "demo-table-info-column"
                    },
                    {
                      title: "Address",
                      key: "address"
                    }
                  ],
                  data8: [
                    {
                      name: "John Brown",
                      age: 18,
                      address: "New York No. 1 Lake Park"
                    },
                    {
                      name: "Jim Green",
                      age: 25,
                      address: "London No. 1 Lake Park",
                      cellClassName: {
                        age: "demo-table-info-cell-age",
                        address: "demo-table-info-cell-address"
                      }
                    },
                    {
                      name: "Joe Black",
                      age: 30,
                      address: "Sydney No. 1 Lake Park"
                    },
                    {
                      name: "Jon Snow",
                      age: 26,
                      address: "Ottawa No. 2 Lake Park",
                      cellClassName: {
                        name: "demo-table-info-cell-name"
                      }
                    }
                  ],
                  data2: [
                    {
                      name: "John Brown",
                      age: 18,
                      address: "New York No. 1 Lake Park",
                      date: "2016-10-03"
                    },
                    {
                      name: "Jim Green",
                      age: 24,
                      address: "London No. 1 Lake Park",
                      date: "2016-10-01"
                    },
                    {
                      name: "Joe Black",
                      age: 30,
                      address: "Sydney No. 1 Lake Park",
                      date: "2016-10-02"
                    },
                    {
                      name: "Jon Snow",
                      age: 26,
                      address: "Ottawa No. 2 Lake Park",
                      date: "2016-10-04"
                    },
                    {
                      name: "John Brown",
                      age: 18,
                      address: "New York No. 1 Lake Park",
                      date: "2016-10-03"
                    },
                    {
                      name: "Jim Green",
                      age: 24,
                      address: "London No. 1 Lake Park",
                      date: "2016-10-01"
                    },
                    {
                      name: "Joe Black",
                      age: 30,
                      address: "Sydney No. 1 Lake Park",
                      date: "2016-10-02"
                    },
                    {
                      name: "Jon Snow",
                      age: 26,
                      address: "Ottawa No. 2 Lake Park",
                      date: "2016-10-04"
                    }
                  ]
                };
              },
              methods: {
                rowClassName: function rowClassName(row, index) {
                  if (index === 1) {
                    return "demo-table-info-row";
                  } else if (index === 3) {
                    return "demo-table-error-row";
                  }
                  return "";
                }
              }
            };

            var css$5 = ".ui-table .demo-table-info-row td{background-color:#2db7f5;color:#fff}.ui-table .demo-table-error-row td{background-color:#f60;color:#fff}.ui-table .demo-table-info-cell-name,.ui-table td.demo-table-info-column{background-color:#2db7f5;color:#fff}.ui-table .demo-table-info-cell-age{background-color:#f60;color:#fff}.ui-table .demo-table-info-cell-address{background-color:#187;color:#fff}";
            styleInject(css$5);

            /* script */
            var __vue_script__$6 = script$6;
            /* template */
            var __vue_render__$8 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Table 表格")]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "\n    主要用于展示大量结构化数据。\n    支持排序、筛选、分页、自定义操作、导出 csv 等复杂功能。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("表格的最简单用法。")
                  ]),
                  _vm._v(" "),
                  _c("Table", { attrs: { columns: _vm.columns1, data: _vm.data1 } }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("设置属性 stripe ，表格会间隔显示不同颜色，用于区分不同行数据。")
                  ]),
                  _vm._v(" "),
                  _c("Table", {
                    attrs: { stripe: "", columns: _vm.columns1, data: _vm.data1 }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("添加表格的边框线")
                  ]),
                  _vm._v(" "),
                  _c("Table", {
                    attrs: { border: "", columns: _vm.columns1, data: _vm.data1 }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("特定样式")]),
                  _vm._v(" "),
                  _vm._m(0),
                  _vm._v(" "),
                  _vm._m(1),
                  _vm._v(" "),
                  _vm._m(2),
                  _vm._v(" "),
                  _c("p", [_vm._v("Custom row styles:")]),
                  _vm._v(" "),
                  _c("Table", {
                    attrs: {
                      "row-class-name": _vm.rowClassName,
                      columns: _vm.columns1,
                      data: _vm.data1
                    }
                  }),
                  _vm._v(" "),
                  _c("p", [_vm._v("Custom column styles:")]),
                  _vm._v(" "),
                  _c("Table", { attrs: { columns: _vm.columns9, data: _vm.data1 } }),
                  _vm._v(" "),
                  _c("p", [_vm._v("Custom arbitrary cell styles:")]),
                  _vm._v(" "),
                  _c("Table", { attrs: { columns: _vm.columns1, data: _vm.data8 } }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "通过设置属性 height 给表格指定高度后，会自动固定表头。当纵向内容过多时可以使用。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("Table", {
                    attrs: { height: "200", columns: _vm.columns1, data: _vm.data2 }
                  })
                ],
                1
              )
            };
            var __vue_staticRenderFns__$8 = [
              function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c("p", [
                  _c("b", [_vm._v("行：")]),
                  _vm._v("通过属性 row-class-name 可以给某一行指定一个样式名称。\n  ")
                ])
              },
              function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c("p", [
                  _c("b", [_vm._v("列：")]),
                  _vm._v("通过给列 columns 设置字段 className 可以给某一列指定一个样式\n  ")
                ])
              },
              function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c("p", [
                  _c("b", [_vm._v("单元格：")]),
                  _vm._v(
                    "通过给数据 data 设置字段 cellClassName 可以给任意一个单元格指定样式。\n  "
                  )
                ])
              }
            ];
            __vue_render__$8._withStripped = true;

              /* style */
              var __vue_inject_styles__$8 = undefined;
              /* scoped */
              var __vue_scope_id__$8 = undefined;
              /* module identifier */
              var __vue_module_identifier__$8 = undefined;
              /* functional template */
              var __vue_is_functional_template__$8 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Table = normalizeComponent_1(
                { render: __vue_render__$8, staticRenderFns: __vue_staticRenderFns__$8 },
                __vue_inject_styles__$8,
                __vue_script__$6,
                __vue_scope_id__$8,
                __vue_is_functional_template__$8,
                __vue_module_identifier__$8,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$7 = {
              data: function data() {
                var this$1 = this;

                return {
                  data1: [
                    {
                      title: "parent 1",
                      expand: true,
                      children: [
                        {
                          title: "parent 1-1",
                          expand: true,
                          children: [
                            {
                              title: "leaf 1-1-1"
                            },
                            {
                              title: "leaf 1-1-2"
                            }
                          ]
                        },
                        {
                          title: "parent 1-2",
                          expand: true,
                          children: [
                            {
                              title: "leaf 1-2-1"
                            },
                            {
                              title: "leaf 1-2-1"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  data2: [
                    {
                      title: "parent 1",
                      expand: true,
                      children: [
                        {
                          title: "parent 1-1",
                          expand: true,
                          children: [
                            {
                              title: "leaf 1-1-1"
                            },
                            {
                              title: "leaf 1-1-2"
                            }
                          ]
                        },
                        {
                          title: "parent 1-2",
                          expand: true,
                          children: [
                            {
                              title: "leaf 1-2-1"
                            },
                            {
                              title: "leaf 1-2-1"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  data3: [
                    {
                      title: "parent",
                      loading: false,
                      children: []
                    }
                  ],
                  data4: [
                    {
                      title: "parent 1",
                      expand: true,
                      selected: true,
                      children: [
                        {
                          title: "parent 1-1",
                          expand: true,
                          children: [
                            {
                              title: "leaf 1-1-1",
                              disabled: true
                            },
                            {
                              title: "leaf 1-1-2"
                            }
                          ]
                        },
                        {
                          title: "parent 1-2",
                          expand: true,
                          children: [
                            {
                              title: "leaf 1-2-1",
                              checked: true
                            },
                            {
                              title: "leaf 1-2-1"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  data5: [
                    {
                      title: "parent 1",
                      expand: true,
                      render: function (h, ref) {
                        var root = ref.root;
                        var node = ref.node;
                        var data = ref.data;

                        return h(
                          "span",
                          {
                            style: {
                              display: "inline-block",
                              width: "100%"
                            }
                          },
                          [
                            h("span", [
                              h("Icon", {
                                props: {
                                  type: "ios-folder-outline"
                                },
                                style: {
                                  marginRight: "8px"
                                }
                              }),
                              h("span", data.title)
                            ]),
                            h(
                              "span",
                              {
                                style: {
                                  display: "inline-block",
                                  float: "right",
                                  marginRight: "32px"
                                }
                              },
                              [
                                h("Button", {
                                  props: Object.assign({}, this$1.buttonProps, {
                                    icon: "ios-plus-empty",
                                    type: "primary"
                                  }),
                                  style: {
                                    width: "52px"
                                  },
                                  on: {
                                    click: function () {
                                      this$1.append(data);
                                    }
                                  }
                                })
                              ]
                            )
                          ]
                        );
                      },
                      children: [
                        {
                          title: "child 1-1",
                          expand: true,
                          children: [
                            {
                              title: "leaf 1-1-1",
                              expand: true
                            },
                            {
                              title: "leaf 1-1-2",
                              expand: true
                            }
                          ]
                        },
                        {
                          title: "child 1-2",
                          expand: true,
                          children: [
                            {
                              title: "leaf 1-2-1",
                              expand: true
                            },
                            {
                              title: "leaf 1-2-1",
                              expand: true
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  buttonProps: {
                    type: "ghost",
                    size: "small"
                  }
                };
              },
              methods: {
                loadData: function loadData(item, callback) {
                  setTimeout(function () {
                    var data = [
                      {
                        title: "children",
                        loading: false,
                        children: []
                      },
                      {
                        title: "children",
                        loading: false,
                        children: []
                      }
                    ];
                    callback(data);
                  }, 1000);
                },
                renderContent: function renderContent(h, ref) {
                  var this$1 = this;
                  var root = ref.root;
                  var node = ref.node;
                  var data = ref.data;

                  return h(
                    "span",
                    {
                      style: {
                        display: "inline-block",
                        width: "100%"
                      }
                    },
                    [
                      h("span", [
                        h("Icon", {
                          props: {
                            type: "ios-paper-outline"
                          },
                          style: {
                            marginRight: "8px"
                          }
                        }),
                        h("span", data.title)
                      ]),
                      h(
                        "span",
                        {
                          style: {
                            display: "inline-block",
                            float: "right",
                            marginRight: "32px"
                          }
                        },
                        [
                          h("Button", {
                            props: Object.assign({}, this.buttonProps, {
                              icon: "ios-plus-empty"
                            }),
                            style: {
                              marginRight: "8px"
                            },
                            on: {
                              click: function () {
                                this$1.append(data);
                              }
                            }
                          }),
                          h("Button", {
                            props: Object.assign({}, this.buttonProps, {
                              icon: "ios-minus-empty"
                            }),
                            on: {
                              click: function () {
                                this$1.remove(root, node, data);
                              }
                            }
                          })
                        ]
                      )
                    ]
                  );
                },
                append: function append(data) {
                  var children = data.children || [];
                  children.push({
                    title: "appended node",
                    expand: true
                  });
                  this.$set(data, "children", children);
                },
                remove: function remove(root, node, data) {
                  var parentKey = root.find(function (el) { return el === node; }).parent;
                  var parent = root.find(function (el) { return el.nodeKey === parentKey; }).node;
                  var index = parent.children.indexOf(data);
                  parent.children.splice(index, 1);
                }
              }
            };

            var css$6 = "";
            styleInject(css$6);

            /* script */
            var __vue_script__$7 = script$7;
            /* template */
            var __vue_render__$9 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Tree 树形控件")]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "\n    文件夹、组织架构、生物分类、国家地区等等，世间万物的大多数结构都是树形结构。\n    使用树控件可以完整展现其中的层级关系，并具有展开收起选择等交互功能。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("最简单的用法，展示可选中，默认展开功能。")
                  ]),
                  _vm._v(" "),
                  _c("Tree", { attrs: { data: _vm.data1 } }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("设置属性 show-checkbox 可以对节点进行勾选。")
                  ]),
                  _vm._v(" "),
                  _c("Tree", { attrs: { data: _vm.data2, "show-checkbox": "" } }),
                  _vm._v(" "),
                  _vm._m(0),
                  _vm._v(" "),
                  _c("Tree", {
                    attrs: {
                      data: _vm.data3,
                      "load-data": _vm.loadData,
                      "show-checkbox": ""
                    }
                  }),
                  _vm._v(" "),
                  _vm._m(1),
                  _vm._v(" "),
                  _c("Tree", {
                    attrs: { data: _vm.data4, "show-checkbox": "", multiple: "" }
                  })
                ],
                1
              )
            };
            var __vue_staticRenderFns__$9 = [
              function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c("div", { staticClass: "page-sub-title" }, [
                  _vm._v(
                    "\n    使用 load-data 属性可以异步加载子节点，需要给数据增加 loading 来标识当前是否在加载中。\n    "
                  ),
                  _c("br"),
                  _vm._v(
                    "load-data 第一个参数为当前节点信息；执行 load-data 的第二个参数，将需要添加的数据传入。\n    "
                  ),
                  _c("br"),
                  _vm._v(
                    "如果某节点不包含 loading 和 children 字段，则不会应用异步加载效果。\n  "
                  )
                ])
              },
              function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c("div", { staticClass: "page-sub-title" }, [
                  _vm._v(
                    "\n    给节点设置 expand、selected、checked 和 disabled 可以将节点设置为展开、选中、勾选和禁用。\n    "
                  ),
                  _c("br"),
                  _vm._v("设置属性 multiple 可进行多选。\n  ")
                ])
              }
            ];
            __vue_render__$9._withStripped = true;

              /* style */
              var __vue_inject_styles__$9 = undefined;
              /* scoped */
              var __vue_scope_id__$9 = undefined;
              /* module identifier */
              var __vue_module_identifier__$9 = undefined;
              /* functional template */
              var __vue_is_functional_template__$9 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Tree = normalizeComponent_1(
                { render: __vue_render__$9, staticRenderFns: __vue_staticRenderFns__$9 },
                __vue_inject_styles__$9,
                __vue_script__$7,
                __vue_scope_id__$9,
                __vue_is_functional_template__$9,
                __vue_module_identifier__$9,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$8 = {
              data: function data() {
                return {
                  visible: false
                };
              },
              methods: {
                close: function close() {
                  this.visible = false;
                },
                ok: function ok() {
                  this.$Message.info("You click ok");
                },
                cancel: function cancel() {
                  this.$Message.info("You click cancel");
                }
              }
            };

            var css$7 = ".bottom[data-v-64845f96],.top[data-v-64845f96]{text-align:center}.center[data-v-64845f96]{width:300px;margin:10px auto;overflow:hidden}.center-left[data-v-64845f96]{float:left}.center-right[data-v-64845f96]{float:right}";
            styleInject(css$7);

            /* script */
            var __vue_script__$8 = script$8;
            /* template */
            var __vue_render__$a = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Poptip 气泡提示")]),
                  _vm._v(" "),
                  _vm._m(0),
                  _vm._v(" "),
                  _vm._m(1),
                  _vm._v(" "),
                  _c(
                    "Poptip",
                    { attrs: { trigger: "hover", title: "Title", content: "content" } },
                    [_c("Button", [_vm._v("Hover")])],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "Poptip",
                    { attrs: { title: "Title", content: "content" } },
                    [_c("Button", [_vm._v("Click")])],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "Poptip",
                    { attrs: { trigger: "focus", title: "Title", content: "content" } },
                    [_c("Button", [_vm._v("Focus")])],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "Poptip",
                    { attrs: { trigger: "focus", title: "Title", content: "content" } },
                    [_c("Input", { attrs: { placeholder: "Input focus" } })],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("组件提供了12个不同的方向显示Poptip，具体配置可查看API。。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "top" },
                    [
                      _c(
                        "Poptip",
                        {
                          attrs: {
                            title: "Title",
                            content: "content",
                            placement: "top-start"
                          }
                        },
                        [_c("Button", [_vm._v("Top Left")])],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Poptip",
                        { attrs: { title: "Title", content: "content", placement: "top" } },
                        [_c("Button", [_vm._v("Top Center")])],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Poptip",
                        {
                          attrs: {
                            title: "Title",
                            content: "content",
                            placement: "top-end"
                          }
                        },
                        [_c("Button", [_vm._v("Top Right")])],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "center" }, [
                    _c(
                      "div",
                      { staticClass: "center-left" },
                      [
                        _c(
                          "Poptip",
                          {
                            attrs: {
                              title: "Title",
                              content: "content",
                              placement: "left-start"
                            }
                          },
                          [_c("Button", [_vm._v("Left Top")])],
                          1
                        ),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c(
                          "Poptip",
                          {
                            attrs: { title: "Title", content: "content", placement: "left" }
                          },
                          [_c("Button", [_vm._v("Left Center")])],
                          1
                        ),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c(
                          "Poptip",
                          {
                            attrs: {
                              title: "Title",
                              content: "content",
                              placement: "left-end"
                            }
                          },
                          [_c("Button", [_vm._v("Left Right")])],
                          1
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "center-right" },
                      [
                        _c(
                          "Poptip",
                          {
                            attrs: {
                              title: "Title",
                              content: "content",
                              placement: "right-start"
                            }
                          },
                          [_c("Button", [_vm._v("Right Top")])],
                          1
                        ),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c(
                          "Poptip",
                          {
                            attrs: {
                              title: "Title",
                              content: "content",
                              placement: "right"
                            }
                          },
                          [_c("Button", [_vm._v("Right Center")])],
                          1
                        ),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c(
                          "Poptip",
                          {
                            attrs: {
                              title: "Title",
                              content: "content",
                              placement: "right-end"
                            }
                          },
                          [_c("Button", [_vm._v("Right Bottom")])],
                          1
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "bottom" },
                    [
                      _c(
                        "Poptip",
                        {
                          attrs: {
                            title: "Title",
                            content: "content",
                            placement: "bottom-start"
                          }
                        },
                        [_c("Button", [_vm._v("Bottom Left")])],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Poptip",
                        {
                          attrs: { title: "Title", content: "content", placement: "bottom" }
                        },
                        [_c("Button", [_vm._v("Bottom Center")])],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Poptip",
                        {
                          attrs: {
                            title: "Title",
                            content: "content",
                            placement: "bottom-end"
                          }
                        },
                        [_c("Button", [_vm._v("Bottom Right")])],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过v-model来控制提示框的显示和隐藏。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Poptip",
                    {
                      model: {
                        value: _vm.visible,
                        callback: function($$v) {
                          _vm.visible = $$v;
                        },
                        expression: "visible"
                      }
                    },
                    [
                      _c("a", [_vm._v("Click")]),
                      _vm._v(" "),
                      _c("div", { attrs: { slot: "title" }, slot: "title" }, [
                        _c("i", [_vm._v("Custom title")])
                      ]),
                      _vm._v(" "),
                      _c("div", { attrs: { slot: "content" }, slot: "content" }, [
                        _c("a", { on: { click: _vm.close } }, [_vm._v("close")])
                      ])
                    ]
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过自定义 slot 来实现复杂的内容。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Poptip",
                    { attrs: { placement: "right", width: "400" } },
                    [
                      _c("Button", { attrs: { type: "ghost" } }, [_vm._v("Click")]),
                      _vm._v(" "),
                      _c(
                        "div",
                        { staticClass: "api", attrs: { slot: "content" }, slot: "content" },
                        [
                          _c("table", [
                            _c("thead", [
                              _c("tr", [
                                _c("th", [_vm._v("Version")]),
                                _vm._v(" "),
                                _c("th", [_vm._v("Update Time")]),
                                _vm._v(" "),
                                _c("th", [_vm._v("Description")])
                              ])
                            ]),
                            _vm._v(" "),
                            _c("tbody", [
                              _c("tr", [
                                _c("td", [_vm._v("0.9.5")]),
                                _vm._v(" "),
                                _c("td", [_vm._v("2016-10-26")]),
                                _vm._v(" "),
                                _c("td", [
                                  _vm._v(
                                    "\n              Add new components\n              "
                                  ),
                                  _c("code", [_vm._v("Tooltip")]),
                                  _vm._v(" and\n              "),
                                  _c("code", [_vm._v("Poptip")])
                                ])
                              ]),
                              _vm._v(" "),
                              _c("tr", [
                                _c("td", [_vm._v("0.9.4")]),
                                _vm._v(" "),
                                _c("td", [_vm._v("2016-10-25")]),
                                _vm._v(" "),
                                _c("td", [
                                  _vm._v(
                                    "\n              Add new components\n              "
                                  ),
                                  _c("code", [_vm._v("Modal")])
                                ])
                              ]),
                              _vm._v(" "),
                              _c("tr", [
                                _c("td", [_vm._v("0.9.2")]),
                                _vm._v(" "),
                                _c("td", [_vm._v("2016-09-28")]),
                                _vm._v(" "),
                                _c("td", [
                                  _vm._v(
                                    "\n              Add new components\n              "
                                  ),
                                  _c("code", [_vm._v("Select")])
                                ])
                              ])
                            ])
                          ])
                        ]
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "\n    通过设置属性confirm开启确认框模式。\n    确认框只会以 click 的形式激活，并且只会显示 title 的内容，忽略 content。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Poptip",
                    {
                      attrs: {
                        confirm: "",
                        title: "Are you sure you want to delete this item?"
                      },
                      on: { "on-ok": _vm.ok, "on-cancel": _vm.cancel }
                    },
                    [_c("Button", [_vm._v("Delete")])],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "Poptip",
                    {
                      attrs: {
                        confirm: "",
                        title: "Are you sure delete this task?",
                        "ok-text": "yes",
                        "cancel-text": "no"
                      },
                      on: { "on-ok": _vm.ok, "on-cancel": _vm.cancel }
                    },
                    [_c("Button", [_vm._v("Internationalization")])],
                    1
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$a = [
              function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c("p", [
                  _vm._v(
                    "\n    Poptip 与 Tooltip 类似，具有很多相同配置，不同点是 Poptip 以卡片的形式承载了更多的内容，比如链接、表格、按钮等。\n    "
                  ),
                  _c("br"),
                  _vm._v(
                    "Poptip 还 confirm 确认框，与 Modal 不同的是，它会出现在就近元素，相对轻量。\n  "
                  )
                ])
              },
              function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c("div", { staticClass: "page-sub-title" }, [
                  _vm._v(
                    "\n    支持三种触发方式：鼠标悬停、点击、聚焦。默认是点击。\n    "
                  ),
                  _c("br"),
                  _vm._v("注意 Poptip 内的文本使用了 white-space: nowrap;，\n    "),
                  _c("br"),
                  _vm._v(
                    "即不自动换行，如需展示很多内容并自动换行时，建议给内容 slot 增加样式 white-space: normal;。\n  "
                  )
                ])
              }
            ];
            __vue_render__$a._withStripped = true;

              /* style */
              var __vue_inject_styles__$a = undefined;
              /* scoped */
              var __vue_scope_id__$a = "data-v-64845f96";
              /* module identifier */
              var __vue_module_identifier__$a = undefined;
              /* functional template */
              var __vue_is_functional_template__$a = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Poptip = normalizeComponent_1(
                { render: __vue_render__$a, staticRenderFns: __vue_staticRenderFns__$a },
                __vue_inject_styles__$a,
                __vue_script__$8,
                __vue_scope_id__$a,
                __vue_is_functional_template__$a,
                __vue_module_identifier__$a,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$9 = {
              data: function data() {
                return {
                  disabled: false
                };
              }
            };

            var css$8 = ".bottom[data-v-30fb034c],.top[data-v-30fb034c]{text-align:center}.center[data-v-30fb034c]{width:300px;margin:10px auto;overflow:hidden}.center-left[data-v-30fb034c]{float:left}.center-right[data-v-30fb034c]{float:right}";
            styleInject(css$8);

            /* script */
            var __vue_script__$9 = script$9;
            /* template */
            var __vue_render__$b = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Tooltip 文字提示")]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v("文字提示气泡框，在鼠标悬停时显示，代替了系统的title提示。")
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "\n    注意 Tooltip 内的文本使用了 white-space: nowrap;\n    即不自动换行，如需展示很多内容并自动换行时，建议给内容 slot 增加样式 white-space: normal;。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c("Tooltip", { attrs: { content: "Here is the prompt text" } }, [
                    _vm._v("A balloon appears when the mouse passes over this text")
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("组件提供了12个不同的方向显示Tooltip，具体配置可查看API。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "top" },
                    [
                      _c(
                        "Tooltip",
                        { attrs: { content: "Top Left text", placement: "top-start" } },
                        [_c("Button", [_vm._v("Top Left")])],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Tooltip",
                        { attrs: { content: "Top Center text", placement: "top" } },
                        [_c("Button", [_vm._v("Top Center")])],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Tooltip",
                        { attrs: { content: "Top Right text", placement: "top-end" } },
                        [_c("Button", [_vm._v("Top Right")])],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "center" }, [
                    _c(
                      "div",
                      { staticClass: "center-left" },
                      [
                        _c(
                          "Tooltip",
                          { attrs: { content: "Left Top text", placement: "left-start" } },
                          [_c("Button", [_vm._v("Left Top")])],
                          1
                        ),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c(
                          "Tooltip",
                          { attrs: { content: "Left Center text", placement: "left" } },
                          [_c("Button", [_vm._v("Left Center")])],
                          1
                        ),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c(
                          "Tooltip",
                          { attrs: { content: "Left Bottom text", placement: "left-end" } },
                          [_c("Button", [_vm._v("Left Bottom")])],
                          1
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "center-right" },
                      [
                        _c(
                          "Tooltip",
                          {
                            attrs: { content: "Right Top text", placement: "right-start" }
                          },
                          [_c("Button", [_vm._v("Right Top")])],
                          1
                        ),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c(
                          "Tooltip",
                          { attrs: { content: "Right Center text", placement: "right" } },
                          [_c("Button", [_vm._v("Right Center")])],
                          1
                        ),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c(
                          "Tooltip",
                          {
                            attrs: { content: "Right Bottom text", placement: "right-end" }
                          },
                          [_c("Button", [_vm._v("Right Bottom")])],
                          1
                        )
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "bottom" },
                    [
                      _c(
                        "Tooltip",
                        {
                          attrs: { content: "Bottom Left text", placement: "bottom-start" }
                        },
                        [_c("Button", [_vm._v("Bottom Left")])],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Tooltip",
                        { attrs: { content: "Bottom Center text", placement: "bottom" } },
                        [_c("Button", [_vm._v("Bottom Center")])],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Tooltip",
                        {
                          attrs: { content: "Bottom Right text", placement: "bottom-end" }
                        },
                        [_c("Button", [_vm._v("Bottom Right")])],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过自定义 slot 显示多行文本或更复杂的样式。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Tooltip",
                    { attrs: { placement: "top" } },
                    [
                      _c("Button", [_vm._v("Multiple lines")]),
                      _vm._v(" "),
                      _c("div", { attrs: { slot: "content" }, slot: "content" }, [
                        _c("p", [_vm._v("Display multiple lines of information")]),
                        _vm._v(" "),
                        _c("p", [_c("i", [_vm._v("Can customize the style")])])
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过设置属性disabled可以禁用文字提示。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Tooltip",
                    {
                      attrs: {
                        placement: "top",
                        content: "Can disable text prompts",
                        disabled: _vm.disabled
                      }
                    },
                    [
                      _c(
                        "Button",
                        {
                          on: {
                            click: function($event) {
                              _vm.disabled = true;
                            }
                          }
                        },
                        [_vm._v("Click to close")]
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过设置属性delay可以延时显示文字提示，单位毫秒。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Tooltip",
                    { attrs: { placement: "top", content: "Tooltip text", delay: 1000 } },
                    [
                      _c(
                        "Button",
                        {
                          on: {
                            click: function($event) {
                              _vm.disabled = true;
                            }
                          }
                        },
                        [_vm._v("Delay 1 second to show")]
                      )
                    ],
                    1
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$b = [];
            __vue_render__$b._withStripped = true;

              /* style */
              var __vue_inject_styles__$b = undefined;
              /* scoped */
              var __vue_scope_id__$b = "data-v-30fb034c";
              /* module identifier */
              var __vue_module_identifier__$b = undefined;
              /* functional template */
              var __vue_is_functional_template__$b = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Tooltip = normalizeComponent_1(
                { render: __vue_render__$b, staticRenderFns: __vue_staticRenderFns__$b },
                __vue_inject_styles__$b,
                __vue_script__$9,
                __vue_scope_id__$b,
                __vue_is_functional_template__$b,
                __vue_module_identifier__$b,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$a = {
              data: function data() {
                return {
                  theme1: "light",
                  theme2: "light",
                  theme3: "light"
                };
              },
              methods: {
                handleOpenChange: function handleOpenChange(name, isOpen) {
                  // console.log(name, isOpen)
                },
                handleSelect: function handleSelect(name) {
                  // console.log(name)
                }
              }
            };

            var css$9 = "";
            styleInject(css$9);

            /* script */
            var __vue_script__$a = script$a;
            /* template */
            var __vue_render__$c = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Menu 导航菜单")]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v("为页面和功能提供导航的菜单列表，常用于网站顶部和左侧。")
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "\n    水平的顶部导航菜单。\n    通过设置属性 theme 为 light、dark、primary 可以选择主题。\n    通过事件 on-select 可以得到点击菜单的 name 值，从而控制页面路由或自定义操作。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Menu",
                    {
                      attrs: { mode: "horizontal", theme: _vm.theme1, "active-name": "1" },
                      on: {
                        "on-open-change": _vm.handleOpenChange,
                        "on-select": _vm.handleSelect
                      }
                    },
                    [
                      _c(
                        "MenuItem",
                        { attrs: { name: "1" } },
                        [
                          _c("Icon", { attrs: { type: "ios-paper" } }),
                          _vm._v("内容管理\n    ")
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "MenuItem",
                        { attrs: { name: "2" } },
                        [
                          _c("Icon", { attrs: { type: "ios-people" } }),
                          _vm._v("用户管理\n    ")
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Submenu",
                        { attrs: { name: "3" } },
                        [
                          _c(
                            "template",
                            { slot: "title" },
                            [
                              _c("Icon", { attrs: { type: "stats-bars" } }),
                              _vm._v("统计分析\n      ")
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "MenuGroup",
                            { attrs: { title: "使用" } },
                            [
                              _c("MenuItem", { attrs: { name: "3-1" } }, [
                                _vm._v("新增和启动")
                              ]),
                              _vm._v(" "),
                              _c("MenuItem", { attrs: { name: "3-2" } }, [
                                _vm._v("活跃分析")
                              ]),
                              _vm._v(" "),
                              _c("MenuItem", { attrs: { name: "3-3" } }, [
                                _vm._v("时段分析")
                              ])
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "MenuGroup",
                            { attrs: { title: "留存" } },
                            [
                              _c("MenuItem", { attrs: { name: "3-4" } }, [
                                _vm._v("用户留存")
                              ]),
                              _vm._v(" "),
                              _c("MenuItem", { attrs: { name: "3-5" } }, [
                                _vm._v("流失用户")
                              ])
                            ],
                            1
                          )
                        ],
                        2
                      ),
                      _vm._v(" "),
                      _c(
                        "MenuItem",
                        { attrs: { name: "4" } },
                        [
                          _c("Icon", { attrs: { type: "settings" } }),
                          _vm._v("综合设置\n    ")
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c("p", [_vm._v("Change theme")]),
                  _vm._v(" "),
                  _c(
                    "RadioGroup",
                    {
                      model: {
                        value: _vm.theme1,
                        callback: function($$v) {
                          _vm.theme1 = $$v;
                        },
                        expression: "theme1"
                      }
                    },
                    [
                      _c("Radio", { attrs: { label: "light" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "dark" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "primary" } })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "\n    垂直导航菜单，可以内嵌子菜单。\n    设置 active-name 可以选中指定的菜单，设置 open-names 可以展开指定的子菜单。\n    设置属性 accordion 可以开启手风琴模式，每次只能展开一个子菜单。\n    通过设置属性 theme 为 light、dark 可以选择主题，侧栏菜单不支持 primary 主题。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    [
                      _c(
                        "Col",
                        { attrs: { span: "8" } },
                        [
                          _c(
                            "Menu",
                            { attrs: { theme: _vm.theme2 } },
                            [
                              _c(
                                "Submenu",
                                { attrs: { name: "1" } },
                                [
                                  _c(
                                    "template",
                                    { slot: "title" },
                                    [
                                      _c("Icon", { attrs: { type: "ios-paper" } }),
                                      _vm._v("内容管理\n          ")
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c("MenuItem", { attrs: { name: "1-1" } }, [
                                    _vm._v("文章管理")
                                  ]),
                                  _vm._v(" "),
                                  _c("MenuItem", { attrs: { name: "1-2" } }, [
                                    _vm._v("评论管理")
                                  ]),
                                  _vm._v(" "),
                                  _c("MenuItem", { attrs: { name: "1-3" } }, [
                                    _vm._v("举报管理")
                                  ])
                                ],
                                2
                              ),
                              _vm._v(" "),
                              _c(
                                "Submenu",
                                { attrs: { name: "2" } },
                                [
                                  _c(
                                    "template",
                                    { slot: "title" },
                                    [
                                      _c("Icon", { attrs: { type: "ios-people" } }),
                                      _vm._v("用户管理\n          ")
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c("MenuItem", { attrs: { name: "2-1" } }, [
                                    _vm._v("新增用户")
                                  ]),
                                  _vm._v(" "),
                                  _c("MenuItem", { attrs: { name: "2-2" } }, [
                                    _vm._v("活跃用户")
                                  ])
                                ],
                                2
                              ),
                              _vm._v(" "),
                              _c(
                                "Submenu",
                                { attrs: { name: "3" } },
                                [
                                  _c(
                                    "template",
                                    { slot: "title" },
                                    [
                                      _c("Icon", { attrs: { type: "stats-bars" } }),
                                      _vm._v("统计分析\n          ")
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "MenuGroup",
                                    { attrs: { title: "使用" } },
                                    [
                                      _c("MenuItem", { attrs: { name: "3-1" } }, [
                                        _vm._v("新增和启动")
                                      ]),
                                      _vm._v(" "),
                                      _c("MenuItem", { attrs: { name: "3-2" } }, [
                                        _vm._v("活跃分析")
                                      ]),
                                      _vm._v(" "),
                                      _c("MenuItem", { attrs: { name: "3-3" } }, [
                                        _vm._v("时段分析")
                                      ])
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "MenuGroup",
                                    { attrs: { title: "留存" } },
                                    [
                                      _c("MenuItem", { attrs: { name: "3-4" } }, [
                                        _vm._v("用户留存")
                                      ]),
                                      _vm._v(" "),
                                      _c("MenuItem", { attrs: { name: "3-5" } }, [
                                        _vm._v("流失用户")
                                      ])
                                    ],
                                    1
                                  )
                                ],
                                2
                              )
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Col",
                        { attrs: { span: "8" } },
                        [
                          _c(
                            "Menu",
                            {
                              attrs: {
                                theme: _vm.theme2,
                                "active-name": "1-2",
                                "open-names": ["1"]
                              }
                            },
                            [
                              _c(
                                "Submenu",
                                { attrs: { name: "1" } },
                                [
                                  _c(
                                    "template",
                                    { slot: "title" },
                                    [
                                      _c("Icon", { attrs: { type: "ios-paper" } }),
                                      _vm._v("内容管理\n          ")
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c("MenuItem", { attrs: { name: "1-1" } }, [
                                    _vm._v("文章管理")
                                  ]),
                                  _vm._v(" "),
                                  _c("MenuItem", { attrs: { name: "1-2" } }, [
                                    _vm._v("评论管理")
                                  ]),
                                  _vm._v(" "),
                                  _c("MenuItem", { attrs: { name: "1-3" } }, [
                                    _vm._v("举报管理")
                                  ])
                                ],
                                2
                              ),
                              _vm._v(" "),
                              _c(
                                "Submenu",
                                { attrs: { name: "2" } },
                                [
                                  _c(
                                    "template",
                                    { slot: "title" },
                                    [
                                      _c("Icon", { attrs: { type: "ios-people" } }),
                                      _vm._v("用户管理\n          ")
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c("MenuItem", { attrs: { name: "2-1" } }, [
                                    _vm._v("新增用户")
                                  ]),
                                  _vm._v(" "),
                                  _c("MenuItem", { attrs: { name: "2-2" } }, [
                                    _vm._v("活跃用户")
                                  ])
                                ],
                                2
                              ),
                              _vm._v(" "),
                              _c(
                                "Submenu",
                                { attrs: { name: "3" } },
                                [
                                  _c(
                                    "template",
                                    { slot: "title" },
                                    [
                                      _c("Icon", { attrs: { type: "stats-bars" } }),
                                      _vm._v("统计分析\n          ")
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "MenuGroup",
                                    { attrs: { title: "使用" } },
                                    [
                                      _c("MenuItem", { attrs: { name: "3-1" } }, [
                                        _vm._v("新增和启动")
                                      ]),
                                      _vm._v(" "),
                                      _c("MenuItem", { attrs: { name: "3-2" } }, [
                                        _vm._v("活跃分析")
                                      ]),
                                      _vm._v(" "),
                                      _c("MenuItem", { attrs: { name: "3-3" } }, [
                                        _vm._v("时段分析")
                                      ])
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "MenuGroup",
                                    { attrs: { title: "留存" } },
                                    [
                                      _c("MenuItem", { attrs: { name: "3-4" } }, [
                                        _vm._v("用户留存")
                                      ]),
                                      _vm._v(" "),
                                      _c("MenuItem", { attrs: { name: "3-5" } }, [
                                        _vm._v("流失用户")
                                      ])
                                    ],
                                    1
                                  )
                                ],
                                2
                              )
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Col",
                        { attrs: { span: "8" } },
                        [
                          _c(
                            "Menu",
                            {
                              attrs: {
                                theme: _vm.theme2,
                                "open-names": ["1"],
                                accordion: ""
                              }
                            },
                            [
                              _c(
                                "Submenu",
                                { attrs: { name: "1" } },
                                [
                                  _c(
                                    "template",
                                    { slot: "title" },
                                    [
                                      _c("Icon", { attrs: { type: "ios-paper" } }),
                                      _vm._v("内容管理\n          ")
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c("MenuItem", { attrs: { name: "1-1" } }, [
                                    _vm._v("文章管理")
                                  ]),
                                  _vm._v(" "),
                                  _c("MenuItem", { attrs: { name: "1-2" } }, [
                                    _vm._v("评论管理")
                                  ]),
                                  _vm._v(" "),
                                  _c("MenuItem", { attrs: { name: "1-3" } }, [
                                    _vm._v("举报管理")
                                  ])
                                ],
                                2
                              ),
                              _vm._v(" "),
                              _c(
                                "Submenu",
                                { attrs: { name: "2" } },
                                [
                                  _c(
                                    "template",
                                    { slot: "title" },
                                    [
                                      _c("Icon", { attrs: { type: "ios-people" } }),
                                      _vm._v("用户管理\n          ")
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c("MenuItem", { attrs: { name: "2-1" } }, [
                                    _vm._v("新增用户")
                                  ]),
                                  _vm._v(" "),
                                  _c("MenuItem", { attrs: { name: "2-2" } }, [
                                    _vm._v("活跃用户")
                                  ])
                                ],
                                2
                              ),
                              _vm._v(" "),
                              _c(
                                "Submenu",
                                { attrs: { name: "3" } },
                                [
                                  _c(
                                    "template",
                                    { slot: "title" },
                                    [
                                      _c("Icon", { attrs: { type: "stats-bars" } }),
                                      _vm._v("统计分析\n          ")
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "MenuGroup",
                                    { attrs: { title: "使用" } },
                                    [
                                      _c("MenuItem", { attrs: { name: "3-1" } }, [
                                        _vm._v("新增和启动")
                                      ]),
                                      _vm._v(" "),
                                      _c("MenuItem", { attrs: { name: "3-2" } }, [
                                        _vm._v("活跃分析")
                                      ]),
                                      _vm._v(" "),
                                      _c("MenuItem", { attrs: { name: "3-3" } }, [
                                        _vm._v("时段分析")
                                      ])
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "MenuGroup",
                                    { attrs: { title: "留存" } },
                                    [
                                      _c("MenuItem", { attrs: { name: "3-4" } }, [
                                        _vm._v("用户留存")
                                      ]),
                                      _vm._v(" "),
                                      _c("MenuItem", { attrs: { name: "3-5" } }, [
                                        _vm._v("流失用户")
                                      ])
                                    ],
                                    1
                                  )
                                ],
                                2
                              )
                            ],
                            1
                          )
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c("p", [_vm._v("Change theme")]),
                  _vm._v(" "),
                  _c(
                    "RadioGroup",
                    {
                      model: {
                        value: _vm.theme2,
                        callback: function($$v) {
                          _vm.theme2 = $$v;
                        },
                        expression: "theme2"
                      }
                    },
                    [
                      _c("Radio", { attrs: { label: "light" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "dark" } })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("垂直菜单，子菜单内嵌在菜单区域。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Menu",
                    { attrs: { "active-name": "1-2", "open-names": ["1"] } },
                    [
                      _c(
                        "Submenu",
                        { attrs: { name: "1" } },
                        [
                          _c(
                            "template",
                            { slot: "title" },
                            [
                              _c("Icon", { attrs: { type: "ios-analytics" } }),
                              _vm._v("Navigation One\n      ")
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "MenuGroup",
                            { attrs: { title: "Item 1" } },
                            [
                              _c("MenuItem", { attrs: { name: "1-1" } }, [
                                _vm._v("Option 1")
                              ]),
                              _vm._v(" "),
                              _c("MenuItem", { attrs: { name: "1-2" } }, [
                                _vm._v("Option 2")
                              ])
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "MenuGroup",
                            { attrs: { title: "Item 2" } },
                            [
                              _c("MenuItem", { attrs: { name: "1-3" } }, [
                                _vm._v("Option 3")
                              ]),
                              _vm._v(" "),
                              _c("MenuItem", { attrs: { name: "1-4" } }, [
                                _vm._v("Option 4")
                              ])
                            ],
                            1
                          )
                        ],
                        2
                      ),
                      _vm._v(" "),
                      _c(
                        "Submenu",
                        { attrs: { name: "2" } },
                        [
                          _c(
                            "template",
                            { slot: "title" },
                            [
                              _c("Icon", { attrs: { type: "ios-filing" } }),
                              _vm._v("Navigation Two\n      ")
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c("MenuItem", { attrs: { name: "2-1" } }, [_vm._v("Option 5")]),
                          _vm._v(" "),
                          _c("MenuItem", { attrs: { name: "2-2" } }, [_vm._v("Option 6")]),
                          _vm._v(" "),
                          _c(
                            "Submenu",
                            { attrs: { name: "3" } },
                            [
                              _c("template", { slot: "title" }, [_vm._v("Submenu")]),
                              _vm._v(" "),
                              _c("MenuItem", { attrs: { name: "3-1" } }, [
                                _vm._v("Option 7")
                              ]),
                              _vm._v(" "),
                              _c("MenuItem", { attrs: { name: "3-2" } }, [
                                _vm._v("Option 8")
                              ])
                            ],
                            2
                          )
                        ],
                        2
                      ),
                      _vm._v(" "),
                      _c(
                        "Submenu",
                        { attrs: { name: "4" } },
                        [
                          _c(
                            "template",
                            { slot: "title" },
                            [
                              _c("Icon", { attrs: { type: "ios-gear" } }),
                              _vm._v("Navigation Three\n      ")
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c("MenuItem", { attrs: { name: "4-1" } }, [_vm._v("Option 9")]),
                          _vm._v(" "),
                          _c("MenuItem", { attrs: { name: "4-2" } }, [_vm._v("Option 10")]),
                          _vm._v(" "),
                          _c("MenuItem", { attrs: { name: "4-3" } }, [_vm._v("Option 11")]),
                          _vm._v(" "),
                          _c("MenuItem", { attrs: { name: "4-4" } }, [_vm._v("Option 12")])
                        ],
                        2
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("使用 MenuGroup 组件进行分组。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Menu",
                    { attrs: { theme: _vm.theme3, "active-name": "1" } },
                    [
                      _c(
                        "MenuGroup",
                        { attrs: { title: "内容管理" } },
                        [
                          _c(
                            "MenuItem",
                            { attrs: { name: "1" } },
                            [
                              _c("Icon", { attrs: { type: "document-text" } }),
                              _vm._v("文章管理\n      ")
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "MenuItem",
                            { attrs: { name: "2" } },
                            [
                              _c("Icon", { attrs: { type: "chatbubbles" } }),
                              _vm._v("评论管理\n      ")
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "MenuGroup",
                        { attrs: { title: "统计分析" } },
                        [
                          _c(
                            "MenuItem",
                            { attrs: { name: "3" } },
                            [
                              _c("Icon", { attrs: { type: "heart" } }),
                              _vm._v("用户留存\n      ")
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "MenuItem",
                            { attrs: { name: "4" } },
                            [
                              _c("Icon", { attrs: { type: "heart-broken" } }),
                              _vm._v("流失用户\n      ")
                            ],
                            1
                          )
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c("p", [_vm._v("Change theme")]),
                  _vm._v(" "),
                  _c(
                    "RadioGroup",
                    {
                      model: {
                        value: _vm.theme3,
                        callback: function($$v) {
                          _vm.theme3 = $$v;
                        },
                        expression: "theme3"
                      }
                    },
                    [
                      _c("Radio", { attrs: { label: "light" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "dark" } })
                    ],
                    1
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$c = [];
            __vue_render__$c._withStripped = true;

              /* style */
              var __vue_inject_styles__$c = undefined;
              /* scoped */
              var __vue_scope_id__$c = undefined;
              /* module identifier */
              var __vue_module_identifier__$c = undefined;
              /* functional template */
              var __vue_is_functional_template__$c = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Menu = normalizeComponent_1(
                { render: __vue_render__$c, staticRenderFns: __vue_staticRenderFns__$c },
                __vue_inject_styles__$c,
                __vue_script__$a,
                __vue_scope_id__$c,
                __vue_is_functional_template__$c,
                __vue_module_identifier__$c,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$b = {
              data: function data() {
                return {
                  visible: false
                };
              },
              methods: {
                handleOpen: function handleOpen() {
                  this.visible = true;
                },
                handleClose: function handleClose() {
                  this.visible = false;
                }
              }
            };

            var css$a = "";
            styleInject(css$a);

            /* script */
            var __vue_script__$b = script$b;
            /* template */
            var __vue_render__$d = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Dropdown 下拉菜单")]),
                  _vm._v(" "),
                  _c("p", [_vm._v("展示一组折叠的下拉菜单。")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "\n    需要配合 DropdownMenu 和 DropdownItem 两个组件来使用，并且给列表设置具名 slot 为 list。\n    触发对象可以是链接、按钮等各种元素。本例还展示了禁用项和分隔线。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Dropdown",
                    [
                      _c(
                        "a",
                        { attrs: { href: "javascript:void(0)" } },
                        [
                          _vm._v("\n      下拉菜单\n      "),
                          _c("Icon", { attrs: { type: "arrow-down-b" } })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "DropdownMenu",
                        { attrs: { slot: "list" }, slot: "list" },
                        [
                          _c("DropdownItem", [_vm._v("驴打滚")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("炸酱面")]),
                          _vm._v(" "),
                          _c("DropdownItem", { attrs: { disabled: "" } }, [
                            _vm._v("豆汁儿")
                          ]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("冰糖葫芦")]),
                          _vm._v(" "),
                          _c("DropdownItem", { attrs: { divided: "" } }, [
                            _vm._v("北京烤鸭")
                          ])
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "Dropdown",
                    { staticStyle: { "margin-left": "20px" } },
                    [
                      _c(
                        "Button",
                        { attrs: { type: "primary" } },
                        [
                          _vm._v("\n      下拉菜单\n      "),
                          _c("Icon", { attrs: { type: "arrow-down-b" } })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "DropdownMenu",
                        { attrs: { slot: "list" }, slot: "list" },
                        [
                          _c("DropdownItem", [_vm._v("驴打滚")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("炸酱面")]),
                          _vm._v(" "),
                          _c("DropdownItem", { attrs: { disabled: "" } }, [
                            _vm._v("豆汁儿")
                          ]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("冰糖葫芦")]),
                          _vm._v(" "),
                          _c("DropdownItem", { attrs: { divided: "" } }, [
                            _vm._v("北京烤鸭")
                          ])
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "\n    通过设置属性 trigger 可以更改触发方式，可选项为 click 、 hover(默认) 或 custom(自定义)。\n    触发方式设置为 custom 自定义时，需手动设置 visible 属性来控制下拉框的显示。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Dropdown",
                    [
                      _c(
                        "a",
                        { attrs: { href: "javascript:void(0)" } },
                        [
                          _vm._v("\n      hover 触发\n      "),
                          _c("Icon", { attrs: { type: "arrow-down-b" } })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "DropdownMenu",
                        { attrs: { slot: "list" }, slot: "list" },
                        [
                          _c("DropdownItem", [_vm._v("驴打滚")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("炸酱面")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("豆汁儿")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("冰糖葫芦")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("北京烤鸭")])
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "Dropdown",
                    { staticStyle: { "margin-left": "20px" }, attrs: { trigger: "click" } },
                    [
                      _c(
                        "a",
                        { attrs: { href: "javascript:void(0)" } },
                        [
                          _vm._v("\n      click 触发\n      "),
                          _c("Icon", { attrs: { type: "arrow-down-b" } })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "DropdownMenu",
                        { attrs: { slot: "list" }, slot: "list" },
                        [
                          _c("DropdownItem", [_vm._v("驴打滚")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("炸酱面")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("豆汁儿")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("冰糖葫芦")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("北京烤鸭")])
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "Dropdown",
                    {
                      staticStyle: { "margin-left": "20px" },
                      attrs: { trigger: "custom", visible: _vm.visible }
                    },
                    [
                      _c(
                        "a",
                        {
                          attrs: { href: "javascript:void(0)" },
                          on: { click: _vm.handleOpen }
                        },
                        [
                          _vm._v("\n      custom 触发\n      "),
                          _c("Icon", { attrs: { type: "arrow-down-b" } })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("DropdownMenu", { attrs: { slot: "list" }, slot: "list" }, [
                        _c("p", { staticStyle: { margin: "5px" } }, [
                          _vm._v("常用于各种自定义下拉内容的场景。")
                        ]),
                        _vm._v(" "),
                        _c(
                          "div",
                          { staticStyle: { "text-align": "right", margin: "10px" } },
                          [
                            _c(
                              "Button",
                              {
                                attrs: { type: "primary" },
                                on: { click: _vm.handleClose }
                              },
                              [_vm._v("关闭")]
                            )
                          ],
                          1
                        )
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "通过设置属性 placement 可以更改下拉菜单出现的方向，与 Poptip 和 Tooltip 配置一致，支持 12 个方向，详见 API。"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Dropdown",
                    { attrs: { placement: "bottom-start" } },
                    [
                      _c(
                        "a",
                        { attrs: { href: "javascript:void(0)" } },
                        [
                          _vm._v("\n      菜单(左)\n      "),
                          _c("Icon", { attrs: { type: "arrow-down-b" } })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "DropdownMenu",
                        { attrs: { slot: "list" }, slot: "list" },
                        [
                          _c("DropdownItem", [_vm._v("驴打滚")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("炸酱面")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("豆汁儿")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("冰糖葫芦")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("北京烤鸭")])
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "Dropdown",
                    { staticStyle: { "margin-left": "20px" } },
                    [
                      _c(
                        "a",
                        { attrs: { href: "javascript:void(0)" } },
                        [
                          _vm._v("\n      菜单(居中)\n      "),
                          _c("Icon", { attrs: { type: "arrow-down-b" } })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "DropdownMenu",
                        { attrs: { slot: "list" }, slot: "list" },
                        [
                          _c("DropdownItem", [_vm._v("驴打滚")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("炸酱面")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("豆汁儿")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("冰糖葫芦")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("北京烤鸭")])
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "Dropdown",
                    {
                      staticStyle: { "margin-left": "20px" },
                      attrs: { placement: "bottom-end" }
                    },
                    [
                      _c(
                        "a",
                        { attrs: { href: "javascript:void(0)" } },
                        [
                          _vm._v("\n      菜单(右)\n      "),
                          _c("Icon", { attrs: { type: "arrow-down-b" } })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "DropdownMenu",
                        { attrs: { slot: "list" }, slot: "list" },
                        [
                          _c("DropdownItem", [_vm._v("驴打滚")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("炸酱面")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("豆汁儿")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("冰糖葫芦")]),
                          _vm._v(" "),
                          _c("DropdownItem", [_vm._v("北京烤鸭")])
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticStyle: { padding: "100px" } })
                ],
                1
              )
            };
            var __vue_staticRenderFns__$d = [];
            __vue_render__$d._withStripped = true;

              /* style */
              var __vue_inject_styles__$d = undefined;
              /* scoped */
              var __vue_scope_id__$d = undefined;
              /* module identifier */
              var __vue_module_identifier__$d = undefined;
              /* functional template */
              var __vue_is_functional_template__$d = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Dropdown = normalizeComponent_1(
                { render: __vue_render__$d, staticRenderFns: __vue_staticRenderFns__$d },
                __vue_inject_styles__$d,
                __vue_script__$b,
                __vue_scope_id__$d,
                __vue_is_functional_template__$d,
                __vue_module_identifier__$d,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$c = {
              
            };

            var css$b = "";
            styleInject(css$b);

            /* script */
            var __vue_script__$c = script$c;
            /* template */
            var __vue_render__$e = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Page 分页")]),
                  _vm._v(" "),
                  _c("p", [_vm._v("当数据量较多时，使用分页可以快速进行数据切换。")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("基本的分页，页数过多时会自动折叠。")
                  ]),
                  _vm._v(" "),
                  _c("Page", { attrs: { total: 105 } }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("可以切换每页显示的数量。")
                  ]),
                  _vm._v(" "),
                  _c("Page", { attrs: { total: 100, "show-sizer": "" } }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("快速跳转到某一页")
                  ]),
                  _vm._v(" "),
                  _c("Page", { attrs: { total: 100, "show-elevator": "" } }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "显示总共多少条数据，接受 slot 来自定义内容，默认显示共{ total }条"
                    )
                  ]),
                  _vm._v(" "),
                  _c("Page", { attrs: { total: 100, "show-total": "" } }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("设置size为small使用迷你型，迷你型拥有普通的所有功能。")
                  ]),
                  _vm._v(" "),
                  _c("Page", {
                    staticStyle: { "margin-bottom": "15px" },
                    attrs: { total: 40, size: "small" }
                  }),
                  _vm._v(" "),
                  _c("Page", {
                    staticStyle: { "margin-bottom": "15px" },
                    attrs: {
                      total: 40,
                      size: "small",
                      "show-elevator": "",
                      "show-sizer": ""
                    }
                  }),
                  _vm._v(" "),
                  _c("Page", { attrs: { total: 40, size: "small", "show-total": "" } }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "设置simple属性即可使用简洁版的分页，通过输入页码回车切换，或使用鼠标点击切换页码，或使用键盘的上下键来切换。\n    简洁分页不能使用总数、电梯和切换数量。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("Page", { attrs: { current: 2, total: 50, simple: "" } }),
                  _vm._v(" "),
                  _c("div", { staticStyle: { "padding-top": "200px" } })
                ],
                1
              )
            };
            var __vue_staticRenderFns__$e = [];
            __vue_render__$e._withStripped = true;

              /* style */
              var __vue_inject_styles__$e = undefined;
              /* scoped */
              var __vue_scope_id__$e = undefined;
              /* module identifier */
              var __vue_module_identifier__$e = undefined;
              /* functional template */
              var __vue_is_functional_template__$e = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Page = normalizeComponent_1(
                { render: __vue_render__$e, staticRenderFns: __vue_staticRenderFns__$e },
                __vue_inject_styles__$e,
                __vue_script__$c,
                __vue_scope_id__$e,
                __vue_is_functional_template__$e,
                __vue_module_identifier__$e,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$d = {
              methods: {
                start: function start() {
                  this.$Loading.start();
                },
                finish: function finish() {
                  this.$Loading.finish();
                },
                error: function error() {
                  this.$Loading.error();
                },
                destroy: function destroy() {
                  this.$Loading.destroy();
                }
              }
            };

            var css$c = ".list[data-v-349ef28c]{padding-left:30px;line-height:2;font-size:14px}";
            styleInject(css$c);

            /* script */
            var __vue_script__$d = script$d;
            /* template */
            var __vue_render__$f = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [
                    _vm._v("LoadingBar 加载进度条")
                  ]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v("全局创建一个显示页面加载、异步请求、文件上传等的加载进度条。")
                  ]),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "\n    LoadingBar 只会在全局创建一个，因此在任何位置调用的方法都会控制这同一个组件。\n    主要使用场景是路由切换和Ajax，因为这两者都不能拿到精确的进度，LoadingBar 会模拟进度，\n    当然也可以通过update()方法来传入一个精确的进度，比如在文件上传时会很有用，具体见API。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "点击 Start 开始进度，点击 Finish 结束。在调用start()方法后，组件会自动模拟进度，当调用finish()或error()时，补全进度并自动消失。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("Button", { on: { click: _vm.start } }, [_vm._v("开始")]),
                  _vm._v(" "),
                  _c(
                    "Button",
                    { staticStyle: { "margin-left": "4px" }, on: { click: _vm.finish } },
                    [_vm._v("完成")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Button",
                    { staticStyle: { "margin-left": "4px" }, on: { click: _vm.error } },
                    [_vm._v("错误")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Button",
                    { staticStyle: { "margin-left": "4px" }, on: { click: _vm.destroy } },
                    [_vm._v("注销")]
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过直接调用以下方法来使用组件：")
                  ]),
                  _vm._v(" "),
                  _vm._m(0),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("另外提供了全局配置和全局销毁的方法：")
                  ]),
                  _vm._v(" "),
                  _vm._m(1),
                  _vm._v(" "),
                  _c("br"),
                  _c("br"),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "如果要在路由中使用，请用Vue.LoadingBar 代替 this.$Loading，API完全一致"
                    )
                  ])
                ],
                1
              )
            };
            var __vue_staticRenderFns__$f = [
              function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c("ul", { staticClass: "list" }, [
                  _c("li", [_vm._v("this.$Loading.start()")]),
                  _vm._v(" "),
                  _c("li", [_vm._v("this.$Loading.finish()")]),
                  _vm._v(" "),
                  _c("li", [_vm._v("this.$Loading.error()")]),
                  _vm._v(" "),
                  _c("li", [_vm._v("this.$Loading.update(percent)")])
                ])
              },
              function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c("ul", { staticClass: "list" }, [
                  _c("li", [_vm._v("this.$Loading.config(options)")]),
                  _vm._v(" "),
                  _c("li", [_vm._v("this.$Loading.destroy()")])
                ])
              }
            ];
            __vue_render__$f._withStripped = true;

              /* style */
              var __vue_inject_styles__$f = undefined;
              /* scoped */
              var __vue_scope_id__$f = "data-v-349ef28c";
              /* module identifier */
              var __vue_module_identifier__$f = undefined;
              /* functional template */
              var __vue_is_functional_template__$f = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var LoadingBar = normalizeComponent_1(
                { render: __vue_render__$f, staticRenderFns: __vue_staticRenderFns__$f },
                __vue_inject_styles__$f,
                __vue_script__$d,
                __vue_scope_id__$f,
                __vue_is_functional_template__$f,
                __vue_module_identifier__$f,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$e = {
              methods: {
                change: function change(status) {
                  this.$Message.info(("Status: " + status));
                }
              }
            };

            var css$d = ".demo-affix[data-v-2e3a372e]{display:inline-block;color:#fff;padding:10px 30px;text-align:center;background:rgba(0,153,229,.9)}";
            styleInject(css$d);

            /* script */
            var __vue_script__$e = script$e;
            /* template */
            var __vue_render__$g = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Affix 图钉")]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "使用图钉，可以将内容固定在屏幕上，并且不随页面的滚动而滚动。常用于侧边菜单等。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticStyle: { padding: "150px" } }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("简单使用，当元素不可见时，直接固定在最顶端。")
                  ]),
                  _vm._v(" "),
                  _c("Affix", [
                    _c("span", { staticClass: "demo-affix" }, [_vm._v("固定在最顶部")])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("当滚动到一定距离时再固定。")
                  ]),
                  _vm._v(" "),
                  _c("Affix", { attrs: { "offset-top": 50 } }, [
                    _c("span", { staticClass: "demo-affix" }, [
                      _vm._v("固定在距离顶部 50px 的位置")
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "\n    在屏幕下方固定，可以通过缩小浏览器窗口高度来查看效果。\n    注意，offset-top和offset-bottom只可以设置一个，如果都设置，会使用offset-top。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c("Affix", { attrs: { "offset-bottom": 20 } }, [
                    _c("span", { staticClass: "demo-affix" }, [
                      _vm._v("固定在距离底部 20px 的位置")
                    ])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("当固定状态发生改变时，会触发on-change事件")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Affix",
                    { attrs: { "offset-top": 100 }, on: { "on-change": _vm.change } },
                    [
                      _c("span", { staticClass: "demo-affix" }, [
                        _vm._v("固定在距离顶部 100px 的位置")
                      ])
                    ]
                  ),
                  _vm._v(" "),
                  _c("div", { staticStyle: { padding: "320px" } })
                ],
                1
              )
            };
            var __vue_staticRenderFns__$g = [];
            __vue_render__$g._withStripped = true;

              /* style */
              var __vue_inject_styles__$g = undefined;
              /* scoped */
              var __vue_scope_id__$g = "data-v-2e3a372e";
              /* module identifier */
              var __vue_module_identifier__$g = undefined;
              /* functional template */
              var __vue_is_functional_template__$g = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Affix = normalizeComponent_1(
                { render: __vue_render__$g, staticRenderFns: __vue_staticRenderFns__$g },
                __vue_inject_styles__$g,
                __vue_script__$e,
                __vue_scope_id__$g,
                __vue_is_functional_template__$g,
                __vue_module_identifier__$g,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$f = {
              data: function data() {
                return {
                  list1: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                  list2: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                  list3: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
                };
              },
              methods: {
                handleReachBottom: function handleReachBottom() {
                  var this$1 = this;

                  return new Promise(function (resolve) {
                    setTimeout(function () {
                      var last = this$1.list1[this$1.list1.length - 1];
                      for (var i = 1; i < 11; i++) {
                        this$1.list1.push(last + i);
                      }
                      resolve();
                    }, 2000);
                  });
                },
                handleReachTop: function handleReachTop() {
                  var this$1 = this;

                  return new Promise(function (resolve) {
                    setTimeout(function () {
                      var first = this$1.list2[0];
                      for (var i = 1; i < 11; i++) {
                        this$1.list2.unshift(first - i);
                      }
                      resolve();
                    }, 2000);
                  });
                },
                handleReachEdge: function handleReachEdge(dir) {
                  var this$1 = this;

                  return new Promise(function (resolve) {
                    setTimeout(function () {
                      if (dir > 0) {
                        var first = this$1.list3[0];
                        for (var i = 1; i < 11; i++) {
                          this$1.list3.unshift(first - i);
                        }
                      } else {
                        var last = this$1.list3[this$1.list3.length - 1];
                        for (var i$1 = 1; i$1 < 11; i$1++) {
                          this$1.list3.push(last + i$1);
                        }
                      }
                      resolve();
                    }, 2000);
                  });
                }
              }
            };

            var css$e = "";
            styleInject(css$e);

            /* script */
            var __vue_script__$f = script$f;
            /* template */
            var __vue_render__$h = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Scroll 无限滚动")]),
                  _vm._v(" "),
                  _c("p", [_vm._v("常用于滚动至底部时，触发加载更多数据。")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("当滚动至底部时，触发加载更多。需返回 Promise。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Scroll",
                    {
                      staticStyle: { "max-width": "400px" },
                      attrs: { "on-reach-bottom": _vm.handleReachBottom }
                    },
                    _vm._l(_vm.list1, function(item, index) {
                      return _c(
                        "Card",
                        {
                          key: index,
                          staticStyle: { margin: "32px 0" },
                          attrs: { "dis-hover": "" }
                        },
                        [_vm._v("Content " + _vm._s(item))]
                      )
                    }),
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("当滚动至顶部时，触发加载更多。需返回 Promise。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Scroll",
                    {
                      staticStyle: { "max-width": "400px" },
                      attrs: { "on-reach-top": _vm.handleReachTop }
                    },
                    _vm._l(_vm.list2, function(item, index) {
                      return _c(
                        "Card",
                        {
                          key: index,
                          staticStyle: { margin: "32px 0" },
                          attrs: { "dis-hover": "" }
                        },
                        [_vm._v("Content " + _vm._s(item))]
                      )
                    }),
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("当滚动至底部或顶部时，触发加载更多。需返回 Promise。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Scroll",
                    {
                      staticStyle: { "max-width": "400px" },
                      attrs: { "on-reach-edge": _vm.handleReachEdge }
                    },
                    _vm._l(_vm.list3, function(item, index) {
                      return _c(
                        "Card",
                        {
                          key: index,
                          staticStyle: { margin: "32px 0" },
                          attrs: { "dis-hover": "" }
                        },
                        [_vm._v("Content " + _vm._s(item))]
                      )
                    }),
                    1
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$h = [];
            __vue_render__$h._withStripped = true;

              /* style */
              var __vue_inject_styles__$h = undefined;
              /* scoped */
              var __vue_scope_id__$h = undefined;
              /* module identifier */
              var __vue_module_identifier__$h = undefined;
              /* functional template */
              var __vue_is_functional_template__$h = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Scroll = normalizeComponent_1(
                { render: __vue_render__$h, staticRenderFns: __vue_staticRenderFns__$h },
                __vue_inject_styles__$h,
                __vue_script__$f,
                __vue_scope_id__$h,
                __vue_is_functional_template__$h,
                __vue_module_identifier__$h,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$g = {
              data: function data() {
                return {
                  percent: 0
                };
              },
              computed: {
                color: function color() {
                  var color = "#2db7f5";
                  if (this.percent == 100) {
                    color = "#5cb85c";
                  }
                  return color;
                }
              },
              methods: {
                add: function add() {
                  if (this.percent >= 100) {
                    return false;
                  }
                  this.percent += 10;
                },
                minus: function minus() {
                  if (this.percent <= 0) {
                    return false;
                  }
                  this.percent -= 10;
                }
              }
            };

            var css$f = ".demo-Circle-custom h1[data-v-ce1573fa]{color:#3f414d;font-size:28px;font-weight:400}.demo-Circle-custom p[data-v-ce1573fa]{color:#657180;font-size:14px;margin:10px 0 15px}.demo-Circle-custom span[data-v-ce1573fa]{display:block;padding-top:15px;color:#657180;font-size:14px}.demo-Circle-custom span[data-v-ce1573fa]:before{content:\"\";display:block;width:50px;height:1px;margin:0 auto;background:#e0e3e6;position:relative;top:-15px}.demo-Circle-custom span i[data-v-ce1573fa]{font-style:normal;color:#3f414d}";
            styleInject(css$f);

            /* script */
            var __vue_script__$g = script$g;
            /* template */
            var __vue_render__$i = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("ICircle 进度环")]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "图表类组件。一般有两种用途：显示某项任务进度的百分比；统计某些指标的占比。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("基础用法")]),
                  _vm._v(" "),
                  _c("ICircle", { attrs: { percent: 80 } }, [
                    _c(
                      "span",
                      {
                        staticClass: "demo-Circle-inner",
                        staticStyle: { "font-size": "24px" }
                      },
                      [_vm._v("80%")]
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "ICircle",
                    {
                      staticStyle: { "margin-left": "10px" },
                      attrs: { percent: 100, "stroke-color": "#5cb85c" }
                    },
                    [
                      _c("Icon", {
                        staticStyle: { color: "#5cb85c" },
                        attrs: { type: "ios-checkmark-empty", size: "60" }
                      })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "ICircle",
                    {
                      staticStyle: { "margin-left": "10px" },
                      attrs: { percent: 35, "stroke-color": "#ff5500" }
                    },
                    [
                      _c(
                        "span",
                        { staticClass: "demo-Circle-inner" },
                        [
                          _c("Icon", {
                            staticStyle: { color: "#ff5500" },
                            attrs: { type: "ios-close-empty", size: "50" }
                          })
                        ],
                        1
                      )
                    ]
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过数据的联动和逻辑控制，实现交互效果。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "ICircle",
                    { attrs: { percent: _vm.percent, "stroke-color": _vm.color } },
                    [
                      _vm.percent == 100
                        ? _c("Icon", {
                            staticStyle: { color: "#5cb85c" },
                            attrs: { type: "ios-checkmark-empty", size: "60" }
                          })
                        : _c("span", { staticStyle: { "font-size": "24px" } }, [
                            _vm._v(_vm._s(_vm.percent) + "%")
                          ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "ButtonGroup",
                    { attrs: { size: "large" } },
                    [
                      _c("Button", {
                        attrs: { icon: "ios-plus-empty" },
                        on: { click: _vm.add }
                      }),
                      _vm._v(" "),
                      _c("Button", {
                        attrs: { icon: "ios-minus-empty" },
                        on: { click: _vm.minus }
                      })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过自定义slot和丰富的配置，可以组合出很多统计效果。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "ICircle",
                    {
                      attrs: {
                        size: 250,
                        "trail-width": 4,
                        "stroke-width": 5,
                        percent: 75,
                        "stroke-linecap": "square",
                        "stroke-color": "#43a3fb"
                      }
                    },
                    [
                      _c("div", { staticClass: "demo-Circle-custom" }, [
                        _c("h1", [_vm._v("42,001,776")]),
                        _vm._v(" "),
                        _c("p", [_vm._v("消费人群规模")]),
                        _vm._v(" "),
                        _c("span", [
                          _vm._v("\n        总占人数\n        "),
                          _c("i", [_vm._v("75%")])
                        ])
                      ])
                    ]
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$i = [];
            __vue_render__$i._withStripped = true;

              /* style */
              var __vue_inject_styles__$i = undefined;
              /* scoped */
              var __vue_scope_id__$i = "data-v-ce1573fa";
              /* module identifier */
              var __vue_module_identifier__$i = undefined;
              /* functional template */
              var __vue_is_functional_template__$i = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var ICircle = normalizeComponent_1(
                { render: __vue_render__$i, staticRenderFns: __vue_staticRenderFns__$i },
                __vue_inject_styles__$i,
                __vue_script__$g,
                __vue_scope_id__$i,
                __vue_is_functional_template__$i,
                __vue_module_identifier__$i,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$h = {
              data: function data() {
                return {
                  current: 0
                };
              },
              methods: {
                next: function next() {
                  if (this.current == 3) {
                    this.current = 0;
                  } else {
                    this.current += 1;
                  }
                }
              }
            };

            var css$g = "";
            styleInject(css$g);

            /* script */
            var __vue_script__$h = script$h;
            /* template */
            var __vue_render__$j = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Steps 步骤条")]),
                  _vm._v(" "),
                  _c("p", [_vm._v("拆分某项流程的步骤，引导用户按流程完成任务。")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("基本用法，组件会根据current自动判断各步骤状态。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Steps",
                    { attrs: { current: 1 } },
                    [
                      _c("Step", {
                        attrs: { title: "已完成", content: "这里是该步骤的描述信息" }
                      }),
                      _vm._v(" "),
                      _c("Step", {
                        attrs: { title: "进行中", content: "这里是该步骤的描述信息" }
                      }),
                      _vm._v(" "),
                      _c("Step", {
                        attrs: { title: "待进行", content: "这里是该步骤的描述信息" }
                      }),
                      _vm._v(" "),
                      _c("Step", {
                        attrs: { title: "待进行", content: "这里是该步骤的描述信息" }
                      })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("设置属性size为small启用迷你版。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Steps",
                    { attrs: { current: 2, size: "small" } },
                    [
                      _c("Step", { attrs: { title: "已完成" } }),
                      _vm._v(" "),
                      _c("Step", { attrs: { title: "已完成" } }),
                      _vm._v(" "),
                      _c("Step", { attrs: { title: "进行中" } }),
                      _vm._v(" "),
                      _c("Step", { attrs: { title: "待进行" } })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过设置Step的icon属性可以自定义图标。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Steps",
                    { attrs: { current: 1 } },
                    [
                      _c("Step", { attrs: { title: "注册", icon: "person-add" } }),
                      _vm._v(" "),
                      _c("Step", { attrs: { title: "上传头像", icon: "camera" } }),
                      _vm._v(" "),
                      _c("Step", { attrs: { title: "验证邮箱", icon: "email" } })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("点击下一步按钮可以切换当前进度状态。")
                  ]),
                  _vm._v(" "),
                  _c("p", [_vm._v("当前正在进行第 " + _vm._s(_vm.current + 1) + " 步")]),
                  _vm._v(" "),
                  _c(
                    "Steps",
                    { staticStyle: { margin: "15px 0" }, attrs: { current: _vm.current } },
                    [
                      _c("Step", { attrs: { title: "步骤1" } }),
                      _vm._v(" "),
                      _c("Step", { attrs: { title: "步骤2" } }),
                      _vm._v(" "),
                      _c("Step", { attrs: { title: "步骤3" } }),
                      _vm._v(" "),
                      _c("Step", { attrs: { title: "步骤4" } })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("Button", { attrs: { type: "primary" }, on: { click: _vm.next } }, [
                    _vm._v("Next step")
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("设置属性direction为vertical在垂直方向展示。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Steps",
                    { attrs: { current: 2, direction: "vertical" } },
                    [
                      _c("Step", {
                        attrs: { title: "已完成", content: "这里是该步骤的描述信息" }
                      }),
                      _vm._v(" "),
                      _c("Step", {
                        attrs: { title: "已完成", content: "这里是该步骤的描述信息" }
                      }),
                      _vm._v(" "),
                      _c("Step", {
                        attrs: { title: "进行中", content: "这里是该步骤的描述信息" }
                      }),
                      _vm._v(" "),
                      _c("Step", {
                        attrs: { title: "待进行", content: "这里是该步骤的描述信息" }
                      })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("设置Steps的属性status为error指定当前步骤状态。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Steps",
                    { attrs: { current: 1, status: "error" } },
                    [
                      _c("Step", {
                        attrs: { title: "已完成", content: "这里是该步骤的描述信息" }
                      }),
                      _vm._v(" "),
                      _c("Step", {
                        attrs: { title: "进行中", content: "这里是该步骤的描述信息" }
                      }),
                      _vm._v(" "),
                      _c("Step", {
                        attrs: { title: "待进行", content: "这里是该步骤的描述信息" }
                      }),
                      _vm._v(" "),
                      _c("Step", {
                        attrs: { title: "待进行", content: "这里是该步骤的描述信息" }
                      })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticStyle: { padding: "100px" } })
                ],
                1
              )
            };
            var __vue_staticRenderFns__$j = [];
            __vue_render__$j._withStripped = true;

              /* style */
              var __vue_inject_styles__$j = undefined;
              /* scoped */
              var __vue_scope_id__$j = undefined;
              /* module identifier */
              var __vue_module_identifier__$j = undefined;
              /* functional template */
              var __vue_is_functional_template__$j = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Steps = normalizeComponent_1(
                { render: __vue_render__$j, staticRenderFns: __vue_staticRenderFns__$j },
                __vue_inject_styles__$j,
                __vue_script__$h,
                __vue_scope_id__$j,
                __vue_is_functional_template__$j,
                __vue_module_identifier__$j,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$i = {
              data: function data() {
                return {
                  cityList: [
                    {
                      value: "New York",
                      label: "New York"
                    },
                    {
                      value: "London",
                      label: "London"
                    },
                    {
                      value: "Sydney",
                      label: "Sydney"
                    },
                    {
                      value: "Ottawa",
                      label: "Ottawa"
                    },
                    {
                      value: "Paris",
                      label: "Paris"
                    },
                    {
                      value: "Canberra",
                      label: "Canberra"
                    }
                  ],
                  model1: "London",
                  model2: "",
                  model3: "",
                  model4: "",
                  model5: "",
                  model6: "",
                  model8: "",
                  cityList1: [
                    {
                      value: "New York",
                      label: "New York"
                    },
                    {
                      value: "London",
                      label: "London"
                    },
                    {
                      value: "Sydney",
                      label: "Sydney"
                    }
                  ],
                  cityList2: [
                    {
                      value: "Ottawa",
                      label: "Ottawa"
                    },
                    {
                      value: "Paris",
                      label: "Paris"
                    },
                    {
                      value: "Canberra",
                      label: "Canberra"
                    }
                  ],
                  model7: "",
                  model9: "",
                  model10: [],
                  model11: "",
                  model12: [],
                  model13: "",
                  loading1: false,
                  options1: [],
                  model14: [],
                  loading2: false,
                  options2: [],
                  list: [
                    "Alabama",
                    "Alaska",
                    "Arizona",
                    "Arkansas",
                    "California",
                    "Colorado",
                    "Connecticut",
                    "Delaware",
                    "Florida",
                    "Georgia",
                    "Hawaii",
                    "Idaho",
                    "Illinois",
                    "Indiana",
                    "Iowa",
                    "Kansas",
                    "Kentucky",
                    "Louisiana",
                    "Maine",
                    "Maryland",
                    "Massachusetts",
                    "Michigan",
                    "Minnesota",
                    "Mississippi",
                    "Missouri",
                    "Montana",
                    "Nebraska",
                    "Nevada",
                    "New hampshire",
                    "New jersey",
                    "New mexico",
                    "New york",
                    "North carolina",
                    "North dakota",
                    "Ohio",
                    "Oklahoma",
                    "Oregon",
                    "Pennsylvania",
                    "Rhode island",
                    "South carolina",
                    "South dakota",
                    "Tennessee",
                    "Texas",
                    "Utah",
                    "Vermont",
                    "Virginia",
                    "Washington",
                    "West virginia",
                    "Wisconsin",
                    "Wyoming"
                  ]
                };
              },
              methods: {
                remoteMethod1: function remoteMethod1(query) {
                  var this$1 = this;

                  if (query !== "") {
                    this.loading1 = true;
                    setTimeout(function () {
                      this$1.loading1 = false;
                      var list = this$1.list.map(function (item) {
                        return {
                          value: item,
                          label: item
                        };
                      });
                      this$1.options1 = list.filter(
                        function (item) { return item.label.toLowerCase().indexOf(query.toLowerCase()) > -1; }
                      );
                    }, 200);
                  } else {
                    this.options1 = [];
                  }
                },
                remoteMethod2: function remoteMethod2(query) {
                  var this$1 = this;

                  if (query !== "") {
                    this.loading2 = true;
                    setTimeout(function () {
                      this$1.loading2 = false;
                      var list = this$1.list.map(function (item) {
                        return {
                          value: item,
                          label: item
                        };
                      });
                      this$1.options2 = list.filter(
                        function (item) { return item.label.toLowerCase().indexOf(query.toLowerCase()) > -1; }
                      );
                    }, 200);
                  } else {
                    this.options2 = [];
                  }
                }
              }
            };

            var css$h = "";
            styleInject(css$h);

            /* script */
            var __vue_script__$i = script$i;
            /* template */
            var __vue_render__$k = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Select 选择器")]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "使用模拟的增强下拉选择器来代替浏览器原生的选择器。选择器支持单选、多选、搜索，以及键盘快捷操作。"
                    )
                  ]),
                  _vm._v(" "),
                  _vm._m(0),
                  _vm._v(" "),
                  _c(
                    "Select",
                    {
                      staticStyle: { width: "200px" },
                      model: {
                        value: _vm.model1,
                        callback: function($$v) {
                          _vm.model1 = $$v;
                        },
                        expression: "model1"
                      }
                    },
                    _vm._l(_vm.cityList, function(item) {
                      return _c(
                        "Option",
                        { key: item.value, attrs: { value: item.value } },
                        [_vm._v(_vm._s(item.label))]
                      )
                    }),
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "通过设置size属性为large和small将输入框设置为大和小尺寸，不设置为默认（中）尺寸。"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Select",
                    {
                      staticStyle: { width: "100px" },
                      attrs: { size: "small" },
                      model: {
                        value: _vm.model2,
                        callback: function($$v) {
                          _vm.model2 = $$v;
                        },
                        expression: "model2"
                      }
                    },
                    _vm._l(_vm.cityList, function(item) {
                      return _c(
                        "Option",
                        { key: item.value, attrs: { value: item.value } },
                        [_vm._v(_vm._s(item.label))]
                      )
                    }),
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "Select",
                    {
                      staticStyle: { width: "100px", "margin-left": "10px" },
                      model: {
                        value: _vm.model3,
                        callback: function($$v) {
                          _vm.model3 = $$v;
                        },
                        expression: "model3"
                      }
                    },
                    _vm._l(_vm.cityList, function(item) {
                      return _c(
                        "Option",
                        { key: item.value, attrs: { value: item.value } },
                        [_vm._v(_vm._s(item.label))]
                      )
                    }),
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "Select",
                    {
                      staticStyle: { width: "100px", "margin-left": "10px" },
                      attrs: { size: "large" },
                      model: {
                        value: _vm.model4,
                        callback: function($$v) {
                          _vm.model4 = $$v;
                        },
                        expression: "model4"
                      }
                    },
                    _vm._l(_vm.cityList, function(item) {
                      return _c(
                        "Option",
                        { key: item.value, attrs: { value: item.value } },
                        [_vm._v(_vm._s(item.label))]
                      )
                    }),
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "通过给Select设置属性disabled禁用整个选择器。通过给Option设置属性disabled可以禁用当前项。"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Select",
                    {
                      staticStyle: { width: "200px" },
                      attrs: { disabled: "" },
                      model: {
                        value: _vm.model5,
                        callback: function($$v) {
                          _vm.model5 = $$v;
                        },
                        expression: "model5"
                      }
                    },
                    _vm._l(_vm.cityList, function(item) {
                      return _c(
                        "Option",
                        { key: item.value, attrs: { value: item.value } },
                        [_vm._v(_vm._s(item.label))]
                      )
                    }),
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "Select",
                    {
                      staticStyle: { width: "200px", "margin-left": "10px" },
                      model: {
                        value: _vm.model6,
                        callback: function($$v) {
                          _vm.model6 = $$v;
                        },
                        expression: "model6"
                      }
                    },
                    [
                      _c("Option", { attrs: { value: "beijing" } }, [_vm._v("New York")]),
                      _vm._v(" "),
                      _c("Option", { attrs: { value: "shanghai", disabled: "" } }, [
                        _vm._v("London")
                      ]),
                      _vm._v(" "),
                      _c("Option", { attrs: { value: "shenzhen" } }, [_vm._v("Sydney")])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过设置属性clearable可以清空已选项，仅适用于单选模式。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Select",
                    {
                      staticStyle: { width: "200px" },
                      attrs: { clearable: "" },
                      model: {
                        value: _vm.model8,
                        callback: function($$v) {
                          _vm.model8 = $$v;
                        },
                        expression: "model8"
                      }
                    },
                    _vm._l(_vm.cityList, function(item) {
                      return _c(
                        "Option",
                        { key: item.value, attrs: { value: item.value } },
                        [_vm._v(_vm._s(item.label))]
                      )
                    }),
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("使用OptionGroup可将选项进行分组。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Select",
                    {
                      staticStyle: { width: "200px" },
                      model: {
                        value: _vm.model7,
                        callback: function($$v) {
                          _vm.model7 = $$v;
                        },
                        expression: "model7"
                      }
                    },
                    [
                      _c(
                        "OptionGroup",
                        { attrs: { label: "Hot Cities" } },
                        _vm._l(_vm.cityList1, function(item) {
                          return _c(
                            "Option",
                            { key: item.value, attrs: { value: item.value } },
                            [_vm._v(_vm._s(item.label))]
                          )
                        }),
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "OptionGroup",
                        { attrs: { label: "Other Cities" } },
                        _vm._l(_vm.cityList2, function(item) {
                          return _c(
                            "Option",
                            { key: item.value, attrs: { value: item.value } },
                            [_vm._v(_vm._s(item.label))]
                          )
                        }),
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("自定义模板")]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "\n    对选项内容可以进行自定义。注意在Option中使用label属性，可以让选择器优先读取该属性的值以显示，\n    否则选中时显示的内容会和自定义的一样，这往往不是我们想要的。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "对于选项显示内容的逻辑：优先显示 slot 内容，如果没有定义 slot，则显示label的值，如果没有设置 label，则显示value的值。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c(
                    "Select",
                    {
                      staticStyle: { width: "200px" },
                      model: {
                        value: _vm.model9,
                        callback: function($$v) {
                          _vm.model9 = $$v;
                        },
                        expression: "model9"
                      }
                    },
                    [
                      _c("Option", { attrs: { value: "New York", label: "纽约" } }, [
                        _c("span", [_vm._v("New York")]),
                        _vm._v(" "),
                        _c("span", { staticStyle: { float: "right", color: "#ccc" } }, [
                          _vm._v("America")
                        ])
                      ]),
                      _vm._v(" "),
                      _c("Option", { attrs: { value: "London", label: "伦敦" } }, [
                        _c("span", [_vm._v("London")]),
                        _vm._v(" "),
                        _c("span", { staticStyle: { float: "right", color: "#ccc" } }, [
                          _vm._v("U.K.")
                        ])
                      ]),
                      _vm._v(" "),
                      _c("Option", { attrs: { value: "Sydney", label: "悉尼" } }, [
                        _c("span", [_vm._v("Sydney")]),
                        _vm._v(" "),
                        _c("span", { staticStyle: { float: "right", color: "#ccc" } }, [
                          _vm._v("Australian")
                        ])
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "通过设置属性multiple可以开启多选模式。多选模式下，model 接受数组类型的数据，所返回的也是数组。"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Select",
                    {
                      staticStyle: { width: "260px" },
                      attrs: { multiple: "" },
                      model: {
                        value: _vm.model10,
                        callback: function($$v) {
                          _vm.model10 = $$v;
                        },
                        expression: "model10"
                      }
                    },
                    _vm._l(_vm.cityList, function(item) {
                      return _c(
                        "Option",
                        { key: item.value, attrs: { value: item.value } },
                        [_vm._v(_vm._s(item.label))]
                      )
                    }),
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "\n    通过设置属性filterable可以开启搜索模式。\n    单选和多选都支持搜索模式。多选搜索时，可以使用键盘Delete快捷删除最后一个已选项。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    [
                      _c(
                        "Col",
                        { staticStyle: { "padding-right": "10px" }, attrs: { span: "12" } },
                        [
                          _c(
                            "Select",
                            {
                              attrs: { filterable: "" },
                              model: {
                                value: _vm.model11,
                                callback: function($$v) {
                                  _vm.model11 = $$v;
                                },
                                expression: "model11"
                              }
                            },
                            _vm._l(_vm.cityList, function(item) {
                              return _c(
                                "Option",
                                { key: item.value, attrs: { value: item.value } },
                                [_vm._v(_vm._s(item.label))]
                              )
                            }),
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Col",
                        { attrs: { span: "12" } },
                        [
                          _c(
                            "Select",
                            {
                              attrs: { filterable: "", multiple: "" },
                              model: {
                                value: _vm.model12,
                                callback: function($$v) {
                                  _vm.model12 = $$v;
                                },
                                expression: "model12"
                              }
                            },
                            _vm._l(_vm.cityList, function(item) {
                              return _c(
                                "Option",
                                { key: item.value, attrs: { value: item.value } },
                                [_vm._v(_vm._s(item.label))]
                              )
                            }),
                            1
                          )
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("远程搜索")]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "\n    远程搜索需同时设置 filterable、remote、remote-method、loading 四个 props，其中 loading 用于控制是否正在搜索中，\n    remote-method 是远程搜索的方法。注意：需要给 Option 设置 key。设置初始显示值，需设置 label 属性。本例为美国州名，尝试输入一些字母。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    [
                      _c(
                        "Col",
                        { staticStyle: { "padding-right": "10px" }, attrs: { span: "12" } },
                        [
                          _c(
                            "Select",
                            {
                              attrs: {
                                filterable: "",
                                remote: "",
                                "remote-method": _vm.remoteMethod1,
                                loading: _vm.loading1
                              },
                              model: {
                                value: _vm.model13,
                                callback: function($$v) {
                                  _vm.model13 = $$v;
                                },
                                expression: "model13"
                              }
                            },
                            _vm._l(_vm.options1, function(option, index) {
                              return _c(
                                "Option",
                                { key: index, attrs: { value: option.value } },
                                [_vm._v(_vm._s(option.label))]
                              )
                            }),
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Col",
                        { attrs: { span: "12" } },
                        [
                          _c(
                            "Select",
                            {
                              attrs: {
                                multiple: "",
                                filterable: "",
                                remote: "",
                                "remote-method": _vm.remoteMethod2,
                                loading: _vm.loading2
                              },
                              model: {
                                value: _vm.model14,
                                callback: function($$v) {
                                  _vm.model14 = $$v;
                                },
                                expression: "model14"
                              }
                            },
                            _vm._l(_vm.options2, function(option, index) {
                              return _c(
                                "Option",
                                { key: index, attrs: { value: option.value } },
                                [_vm._v(_vm._s(option.label))]
                              )
                            }),
                            1
                          )
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticStyle: { padding: "100px" } })
                ],
                1
              )
            };
            var __vue_staticRenderFns__$k = [
              function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c("div", { staticClass: "page-sub-title" }, [
                  _vm._v("\n    基本用法。可以使用 v-model 双向绑定数据。\n    "),
                  _c("br"),
                  _vm._v(
                    "单选时，value 只接受字符串和数字类型，多选时，只接受数组类型，组件会自动根据Option的value来返回选中的数据。\n    "
                  ),
                  _c("br"),
                  _vm._v("可以给Select添加 style 样式，比如宽度。\n    "),
                  _c("br"),
                  _vm._v(
                    "在展开选择器后，可以使用键盘的up和down快速上下选择，按下Enter选择，按下Esc收起选择器。\n  "
                  )
                ])
              }
            ];
            __vue_render__$k._withStripped = true;

              /* style */
              var __vue_inject_styles__$k = undefined;
              /* scoped */
              var __vue_scope_id__$k = undefined;
              /* module identifier */
              var __vue_module_identifier__$k = undefined;
              /* functional template */
              var __vue_is_functional_template__$k = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Select = normalizeComponent_1(
                { render: __vue_render__$k, staticRenderFns: __vue_staticRenderFns__$k },
                __vue_inject_styles__$k,
                __vue_script__$i,
                __vue_scope_id__$k,
                __vue_is_functional_template__$k,
                __vue_module_identifier__$k,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$j = {
              data: function data() {
                return {
                  value1: 1,
                  value2: 1,
                  value9: 1000,
                  value10: 100,
                  value3: 2,
                  value4: 2,
                  value5: 2,
                  disabled: true,
                  value6: 1,
                  value7: 1,
                  value8: 1
                };
              }
            };

            var css$i = "";
            styleInject(css$i);

            /* script */
            var __vue_script__$j = script$j;
            /* template */
            var __vue_render__$l = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [
                    _vm._v("InputNumber 数字输入框")
                  ]),
                  _vm._v(" "),
                  _c("p", [_vm._v("使用鼠标或键盘输入一定范围的标准数值。")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("可以通过输入、鼠标点击或键盘的上下键来改变数值大小。")
                  ]),
                  _vm._v(" "),
                  _c("InputNumber", {
                    attrs: { max: 10, min: 1 },
                    model: {
                      value: _vm.value1,
                      callback: function($$v) {
                        _vm.value1 = $$v;
                      },
                      expression: "value1"
                    }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("可以通过输入、鼠标点击或键盘的上下键来改变数值大小。")
                  ]),
                  _vm._v(" "),
                  _c("InputNumber", {
                    attrs: { max: 10, min: 1, step: 1.2 },
                    model: {
                      value: _vm.value2,
                      callback: function($$v) {
                        _vm.value2 = $$v;
                      },
                      expression: "value2"
                    }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "通过设置size属性为large和small将输入框设置为大和小尺寸，不设置为默认（中）尺寸。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("InputNumber", {
                    attrs: { size: "small" },
                    model: {
                      value: _vm.value3,
                      callback: function($$v) {
                        _vm.value3 = $$v;
                      },
                      expression: "value3"
                    }
                  }),
                  _vm._v(" "),
                  _c("InputNumber", {
                    staticStyle: { "margin-left": "12px" },
                    model: {
                      value: _vm.value4,
                      callback: function($$v) {
                        _vm.value4 = $$v;
                      },
                      expression: "value4"
                    }
                  }),
                  _vm._v(" "),
                  _c("InputNumber", {
                    staticStyle: { "margin-left": "12px" },
                    attrs: { size: "large" },
                    model: {
                      value: _vm.value5,
                      callback: function($$v) {
                        _vm.value5 = $$v;
                      },
                      expression: "value5"
                    }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过设置disabled属性禁用输入框，点击按钮切换状态。")
                  ]),
                  _vm._v(" "),
                  _c("InputNumber", {
                    attrs: { disabled: _vm.disabled },
                    model: {
                      value: _vm.value6,
                      callback: function($$v) {
                        _vm.value6 = $$v;
                      },
                      expression: "value6"
                    }
                  }),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      staticStyle: { "margin-left": "12px" },
                      attrs: { type: "primary" },
                      on: {
                        click: function($event) {
                          _vm.disabled = !_vm.disabled;
                        }
                      }
                    },
                    [_vm._v("Toggle Disabled")]
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过设置readonly属性开启只读。")
                  ]),
                  _vm._v(" "),
                  _c("InputNumber", {
                    attrs: { readonly: "" },
                    model: {
                      value: _vm.value7,
                      callback: function($$v) {
                        _vm.value7 = $$v;
                      },
                      expression: "value7"
                    }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过设置editable属性控制是否能编辑。")
                  ]),
                  _vm._v(" "),
                  _c("InputNumber", {
                    attrs: { editable: false },
                    model: {
                      value: _vm.value8,
                      callback: function($$v) {
                        _vm.value8 = $$v;
                      },
                      expression: "value8"
                    }
                  })
                ],
                1
              )
            };
            var __vue_staticRenderFns__$l = [];
            __vue_render__$l._withStripped = true;

              /* style */
              var __vue_inject_styles__$l = undefined;
              /* scoped */
              var __vue_scope_id__$l = undefined;
              /* module identifier */
              var __vue_module_identifier__$l = undefined;
              /* functional template */
              var __vue_is_functional_template__$l = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var InputNumber = normalizeComponent_1(
                { render: __vue_render__$l, staticRenderFns: __vue_staticRenderFns__$l },
                __vue_inject_styles__$l,
                __vue_script__$j,
                __vue_scope_id__$l,
                __vue_is_functional_template__$l,
                __vue_module_identifier__$l,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$k = {
              data: function data() {
                return {
                  value: 0,
                  valueHalf: 2.5,
                  valueText: 3,
                  valueCustomText: 3.8,
                  valueDisabled: 2
                };
              }
            };

            /* script */
            var __vue_script__$k = script$k;

            /* template */
            var __vue_render__$m = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Rate 评分")]),
                  _vm._v(" "),
                  _c("p", [_vm._v("对事物进行快速的评级操作，或对评价进行展示。")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("基本用法。")]),
                  _vm._v(" "),
                  _c("Rate", {
                    model: {
                      value: _vm.value,
                      callback: function($$v) {
                        _vm.value = $$v;
                      },
                      expression: "value"
                    }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("设置属性 allow-half 可以选中半星。")
                  ]),
                  _vm._v(" "),
                  _c("Rate", {
                    attrs: { "allow-half": "" },
                    model: {
                      value: _vm.valueHalf,
                      callback: function($$v) {
                        _vm.valueHalf = $$v;
                      },
                      expression: "valueHalf"
                    }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "设置属性 show-text 可以显示提示文字。提示内容也可以通过 slot 自定义。"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    [
                      _c(
                        "Col",
                        { attrs: { span: "12" } },
                        [
                          _c("Rate", {
                            attrs: { "show-text": "" },
                            model: {
                              value: _vm.valueText,
                              callback: function($$v) {
                                _vm.valueText = $$v;
                              },
                              expression: "valueText"
                            }
                          })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Col",
                        { attrs: { span: "12" } },
                        [
                          _c(
                            "Rate",
                            {
                              attrs: { "show-text": "", "allow-half": "" },
                              model: {
                                value: _vm.valueCustomText,
                                callback: function($$v) {
                                  _vm.valueCustomText = $$v;
                                },
                                expression: "valueCustomText"
                              }
                            },
                            [
                              _c("span", { staticStyle: { color: "#f5a623" } }, [
                                _vm._v(_vm._s(_vm.valueCustomText))
                              ])
                            ]
                          )
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("设置属性 disabled 开启只读模式，无法交互。")
                  ]),
                  _vm._v(" "),
                  _c("Rate", {
                    attrs: { disabled: "" },
                    model: {
                      value: _vm.valueDisabled,
                      callback: function($$v) {
                        _vm.valueDisabled = $$v;
                      },
                      expression: "valueDisabled"
                    }
                  })
                ],
                1
              )
            };
            var __vue_staticRenderFns__$m = [];
            __vue_render__$m._withStripped = true;

              /* style */
              var __vue_inject_styles__$m = undefined;
              /* scoped */
              var __vue_scope_id__$m = undefined;
              /* module identifier */
              var __vue_module_identifier__$m = undefined;
              /* functional template */
              var __vue_is_functional_template__$m = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Rate = normalizeComponent_1(
                { render: __vue_render__$m, staticRenderFns: __vue_staticRenderFns__$m },
                __vue_inject_styles__$m,
                __vue_script__$k,
                __vue_scope_id__$m,
                __vue_is_functional_template__$m,
                __vue_module_identifier__$m,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$l = {
              data: function data() {
                return {
                  data1: this.getMockData(),
                  targetKeys1: this.getTargetKeys(),
                  data2: this.getMockData(),
                  targetKeys2: this.getTargetKeys(),
                  data3: this.getMockData(),
                  targetKeys3: this.getTargetKeys(),
                  data4: this.getMockData(),
                  targetKeys4: this.getTargetKeys(),
                  listStyle: {
                    height: "250px"
                  },
                  boxStyle: {
                    width: "250px"
                  }
                };
              },
              methods: {
                getMockData: function getMockData() {
                  var mockData = [];
                  for (var i = 1; i <= 20; i++) {
                    mockData.push({
                      key: i.toString(),
                      label: "Content " + i,
                      description: "The desc of content  " + i,
                      disabled: Math.random() * 3 < 1
                    });
                  }
                  return mockData;
                },
                getTargetKeys: function getTargetKeys() {
                  return this.getMockData()
                    .filter(function () { return Math.random() * 2 > 1; })
                    .map(function (item) { return item.key; });
                },
                render1: function render1(item) {
                  return item.label;
                },
                handleChange1: function handleChange1(newTargetKeys, direction, moveKeys) {
                  console.log(newTargetKeys);
                  console.log(direction);
                  console.log(moveKeys);
                  this.targetKeys1 = newTargetKeys;
                },
                handleChange2: function handleChange2(newTargetKeys) {
                  this.targetKeys2 = newTargetKeys;
                },
                filterMethod: function filterMethod(data, query) {
                  return data.filter(function (_) { return _.label.indexOf(query) !== -1; });
                },
                handleChange3: function handleChange3(newTargetKeys) {
                  this.targetKeys3 = newTargetKeys;
                },
                render3: function render3(item) {
                  return item.label + " - " + item.description;
                },
                reloadMockData: function reloadMockData() {
                  this.data3 = this.getMockData();
                  this.targetKeys3 = this.getTargetKeys();
                },
                handleChange4: function handleChange4(newTargetKeys) {
                  this.targetKeys4 = newTargetKeys;
                },
                render4: function render4(item) {
                  return item.label + " - " + item.description;
                }
              }
            };

            var css$j = ".list[data-v-5afce635]{padding-left:30px;line-height:2.2}";
            styleInject(css$j);

            /* script */
            var __vue_script__$l = script$l;
            /* template */
            var __vue_render__$n = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Transfer 穿梭框")]),
                  _vm._v(" "),
                  _c("p", [_vm._v("双栏穿梭选择框，常用于将多个项目从一边移动到另一边。")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("Transfer 组件主要基于以下四个 API 来使用:")
                  ]),
                  _vm._v(" "),
                  _vm._m(0),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "基本用法，展示了 data、target-keys、每行的渲染函数 render-format 以及回调函数 on-change 的用法。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("Transfer", {
                    attrs: {
                      data: _vm.data1,
                      "target-keys": _vm.targetKeys1,
                      "render-format": _vm.render1
                    },
                    on: { "on-change": _vm.handleChange1 }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过设置属性 filterable 可以进行搜索，可以自定义搜索函数。")
                  ]),
                  _vm._v(" "),
                  _c("Transfer", {
                    attrs: {
                      data: _vm.data2,
                      "target-keys": _vm.targetKeys2,
                      filterable: "",
                      "filter-method": _vm.filterMethod
                    },
                    on: { "on-change": _vm.handleChange2 }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "穿梭框高级用法，可以自定义两列的宽高、操作文案，以及底部自定义操作，更多配置见 API。"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Transfer",
                    {
                      attrs: {
                        data: _vm.data3,
                        "target-keys": _vm.targetKeys3,
                        boxStyle: _vm.boxStyle,
                        "list-style": _vm.listStyle,
                        "render-format": _vm.render3,
                        operations: ["To left", "To right"],
                        filterable: ""
                      },
                      on: { "on-change": _vm.handleChange3 }
                    },
                    [
                      _c(
                        "div",
                        { style: { float: "right", margin: "5px" } },
                        [
                          _c(
                            "Button",
                            {
                              attrs: { type: "ghost", size: "small" },
                              on: { click: _vm.reloadMockData }
                            },
                            [_vm._v("Refresh")]
                          )
                        ],
                        1
                      )
                    ]
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("可以通过 render-format 来渲染复杂的数据。")
                  ]),
                  _vm._v(" "),
                  _c("Transfer", {
                    attrs: {
                      data: _vm.data4,
                      "target-keys": _vm.targetKeys4,
                      "render-format": _vm.render4
                    },
                    on: { "on-change": _vm.handleChange4 }
                  })
                ],
                1
              )
            };
            var __vue_staticRenderFns__$n = [
              function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c("ul", { staticClass: "list" }, [
                  _c("li", [
                    _c("p", [
                      _vm._v(
                        ":data：总体数据，数组，每项为一个对象，且必须含有 key 值，组件基于此做索引。"
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _c("li", [
                    _c("p", [
                      _vm._v(
                        ":target-keys：目标列索引集合，数组，每项为数据的 key 值，Transfer 会将含有这些 key 值的数据筛选到右边。"
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _c("li", [
                    _c("p", [
                      _vm._v(
                        ":render-format：每行数据显示的格式函数，默认优先显示 label 值，没有时显示 key 值，可以自己组合出需要的数据格式。"
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _c("li", [
                    _c("p", [
                      _vm._v(
                        "@on-change：当点击转移按钮时，组件本身并不会转移数据，而是触发事件，由用户来操作数据。"
                      )
                    ])
                  ])
                ])
              }
            ];
            __vue_render__$n._withStripped = true;

              /* style */
              var __vue_inject_styles__$n = undefined;
              /* scoped */
              var __vue_scope_id__$n = "data-v-5afce635";
              /* module identifier */
              var __vue_module_identifier__$n = undefined;
              /* functional template */
              var __vue_is_functional_template__$n = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Transfer = normalizeComponent_1(
                { render: __vue_render__$n, staticRenderFns: __vue_staticRenderFns__$n },
                __vue_inject_styles__$n,
                __vue_script__$l,
                __vue_scope_id__$n,
                __vue_is_functional_template__$n,
                __vue_module_identifier__$n,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$m = {
              data: function data() {
                return {
                  spinShow: true
                };
              },
              methods: {
                handleSpinShow: function handleSpinShow() {
                  var this$1 = this;

                  this.$Spin.show();
                  setTimeout(function () {
                    this$1.$Spin.hide();
                  }, 3000);
                },
                handleSpinCustom: function handleSpinCustom() {
                  var this$1 = this;

                  this.$Spin.show({
                    render: function (h) {
                      return h("div", [
                        h("Icon", {
                          class: "demo-spin-icon-load",
                          props: {
                            type: "load-c",
                            size: 18
                          }
                        }),
                        h("div", "Loading")
                      ]);
                    }
                  });
                  setTimeout(function () {
                    this$1.$Spin.hide();
                  }, 3000);
                }
              }
            };

            var css$k = ".demo-spin-container[data-v-81e6de22]{display:inline-block;width:200px}.demo-spin-col[data-v-81e6de22],.demo-spin-container[data-v-81e6de22]{height:100px;position:relative;border:1px solid #eee}svg[data-v-81e6de22]:not(:root){overflow:hidden}.circular[data-v-81e6de22]{-webkit-animation:rotate-data-v-81e6de22 2s linear infinite;animation:rotate-data-v-81e6de22 2s linear infinite;height:100%;-webkit-transform-origin:center center;transform-origin:center center;width:100%;position:absolute;top:0;bottom:0;left:0;right:0;margin:auto}.path[data-v-81e6de22]{stroke-dasharray:1,200;stroke-dashoffset:0;-webkit-animation:dash-data-v-81e6de22 1.5s ease-in-out infinite,color-data-v-81e6de22 6s ease-in-out infinite;animation:dash-data-v-81e6de22 1.5s ease-in-out infinite,color-data-v-81e6de22 6s ease-in-out infinite;stroke-linecap:round}.loader[data-v-81e6de22]{width:30px;height:30px;position:relative;margin:0 auto}@-webkit-keyframes dash-data-v-81e6de22{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@keyframes dash-data-v-81e6de22{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@-webkit-keyframes color-data-v-81e6de22{0%,to{stroke:#d62d20}40%{stroke:#0057e7}66%{stroke:#008744}80%,90%{stroke:#ffa700}}@keyframes color-data-v-81e6de22{0%,to{stroke:#d62d20}40%{stroke:#0057e7}66%{stroke:#008744}80%,90%{stroke:#ffa700}}@-webkit-keyframes rotate-data-v-81e6de22{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes rotate-data-v-81e6de22{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}.demo-spin-article[data-v-81e6de22]{width:400px;height:200px;padding:10px;text-align:center;position:relative;border:1px solid #eee}";
            styleInject(css$k);

            var css$l = ".demo-spin-icon-load{-webkit-animation:ani-demo-spin 1s linear infinite;animation:ani-demo-spin 1s linear infinite}@-webkit-keyframes ani-demo-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}50%{-webkit-transform:rotate(180deg);transform:rotate(180deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes ani-demo-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}50%{-webkit-transform:rotate(180deg);transform:rotate(180deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}";
            styleInject(css$l);

            /* script */
            var __vue_script__$m = script$m;
            /* template */
            var __vue_render__$o = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Spin 加载中")]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v("当区块正在获取数据中时可使用，适当的等待动画可以提升用户体验。")
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("最简单使用 Spin 的方法。")
                  ]),
                  _vm._v(" "),
                  _c("Spin"),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "通过设置size属性为large和small将 Spin 设置为大和小尺寸，不设置为默认（中）尺寸。"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    [
                      _c(
                        "Col",
                        { attrs: { span: "8" } },
                        [_c("Spin", { attrs: { size: "small" } })],
                        1
                      ),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "8" } }, [_c("Spin")], 1),
                      _vm._v(" "),
                      _c(
                        "Col",
                        { attrs: { span: "8" } },
                        [_c("Spin", { attrs: { size: "large" } })],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("在容器内部垂直居中固定，需要父级有relative或absolute。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "demo-spin-container" },
                    [_c("Spin", { attrs: { fix: "" } })],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("自定义 Spin 的内容，可以是简单的文字，也可以是很复杂的动画。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    [
                      _c(
                        "Col",
                        { staticClass: "demo-spin-col", attrs: { span: "8" } },
                        [_c("Spin", { attrs: { fix: "" } }, [_vm._v("加载中...")])],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Col",
                        { staticClass: "demo-spin-col", attrs: { span: "8" } },
                        [
                          _c(
                            "Spin",
                            { attrs: { fix: "" } },
                            [
                              _c("Icon", {
                                staticClass: "demo-spin-icon-load",
                                attrs: { type: "load-c", size: "18" }
                              }),
                              _vm._v(" "),
                              _c("div", [_vm._v("Loading")])
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Col",
                        { staticClass: "demo-spin-col", attrs: { span: "8" } },
                        [
                          _c("Spin", { attrs: { fix: "" } }, [
                            _c("div", { staticClass: "loader" }, [
                              _c(
                                "svg",
                                {
                                  staticClass: "circular",
                                  attrs: { viewBox: "25 25 50 50" }
                                },
                                [
                                  _c("circle", {
                                    staticClass: "path",
                                    attrs: {
                                      cx: "50",
                                      cy: "50",
                                      r: "20",
                                      fill: "none",
                                      "stroke-width": "5",
                                      "stroke-miterlimit": "10"
                                    }
                                  })
                                ]
                              )
                            ])
                          ])
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("控制 Spin 组件的显示和消失。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "demo-spin-article" },
                    [
                      _c("h3", [_vm._v("登金陵凤凰台")]),
                      _vm._v(" "),
                      _c("address", [_vm._v("李白")]),
                      _vm._v(" "),
                      _vm._m(0),
                      _vm._v(" "),
                      _vm.spinShow
                        ? _c("Spin", { attrs: { size: "large", fix: "" } })
                        : _vm._e()
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v("切换显示状态：\n  "),
                  _c("i-switch", {
                    on: {
                      "on-change": function($event) {
                        _vm.spinShow = !_vm.spinShow;
                      }
                    }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "使用内置的 $Spin 方法可以全局加载。可以使用 Render 函数自定义显示内容"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    [
                      _c(
                        "Button",
                        { attrs: { type: "primary" }, on: { click: _vm.handleSpinShow } },
                        [_vm._v("整页显示，3秒后关闭")]
                      ),
                      _vm._v(" "),
                      _c(
                        "Button",
                        {
                          staticStyle: { "margin-left": "10px" },
                          attrs: { type: "primary" },
                          on: { click: _vm.handleSpinCustom }
                        },
                        [_vm._v("自定义显示内容")]
                      )
                    ],
                    1
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$o = [
              function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c("article", [
                  _c("p", [_vm._v("凤凰台上凤凰游，凤去台空江自流。")]),
                  _vm._v(" "),
                  _c("p", [_vm._v("吴宫花草埋幽径，晋代衣冠成古丘。")]),
                  _vm._v(" "),
                  _c("p", [_vm._v("三山半落青天外，二水中分白鹭洲。")]),
                  _vm._v(" "),
                  _c("p", [_vm._v("总为浮云能蔽日，长安不见使人愁。")])
                ])
              }
            ];
            __vue_render__$o._withStripped = true;

              /* style */
              var __vue_inject_styles__$o = undefined;
              /* scoped */
              var __vue_scope_id__$o = "data-v-81e6de22";
              /* module identifier */
              var __vue_module_identifier__$o = undefined;
              /* functional template */
              var __vue_is_functional_template__$o = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Spin = normalizeComponent_1(
                { render: __vue_render__$o, staticRenderFns: __vue_staticRenderFns__$o },
                __vue_inject_styles__$o,
                __vue_script__$m,
                __vue_scope_id__$o,
                __vue_is_functional_template__$o,
                __vue_module_identifier__$o,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$n = {
              data: function data() {
                return {
                  tab0: true,
                  tab1: true,
                  tab2: true,
                  tabs: 2,
                  label: function (h) {
                    return h("div", [
                      h("span", "标签一"),
                      h("Badge", {
                        props: {
                          count: 3
                        }
                      })
                    ]);
                  }
                };
              },
              methods: {
                handleTabRemove: function handleTabRemove(name) {
                  this["tab" + name] = false;
                },
                handleTabsAdd: function handleTabsAdd() {
                  this.tabs++;
                }
              }
            };

            var css$m = "";
            styleInject(css$m);

            /* script */
            var __vue_script__$n = script$n;
            /* template */
            var __vue_render__$p = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Tabs 标签页")]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v("选项卡切换组件，常用于平级区域大块内容的的收纳和展现。")
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "\n    value 与 TabPane 的 name 对应，用于标识当前激活的是哪一项，name 值默认从 0 开始，默认激活第一项。\n    可以使用 v-model 双向绑定数据。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Tabs",
                    { attrs: { value: "name1" } },
                    [
                      _c("TabPane", { attrs: { label: "标签一", name: "name1" } }, [
                        _vm._v("标签一的内容")
                      ]),
                      _vm._v(" "),
                      _c("TabPane", { attrs: { label: "标签二", name: "name2" } }, [
                        _vm._v("标签二的内容")
                      ]),
                      _vm._v(" "),
                      _c("TabPane", { attrs: { label: "标签三", name: "name3" } }, [
                        _vm._v("标签三的内容")
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("禁用某一项。")]),
                  _vm._v(" "),
                  _c(
                    "Tabs",
                    [
                      _c("TabPane", { attrs: { label: "标签一" } }, [
                        _vm._v("标签一的内容")
                      ]),
                      _vm._v(" "),
                      _c("TabPane", { attrs: { label: "标签二", disabled: "" } }, [
                        _vm._v("标签二的内容")
                      ]),
                      _vm._v(" "),
                      _c("TabPane", { attrs: { label: "标签三" } }, [
                        _vm._v("标签三的内容")
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过设置属性 icon，可以显示一个图标。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Tabs",
                    [
                      _c("TabPane", { attrs: { label: "macOS", icon: "social-apple" } }, [
                        _vm._v("标签一的内容")
                      ]),
                      _vm._v(" "),
                      _c(
                        "TabPane",
                        { attrs: { label: "Windows", icon: "social-windows" } },
                        [_vm._v("标签二的内容")]
                      ),
                      _vm._v(" "),
                      _c("TabPane", { attrs: { label: "Linux", icon: "social-tux" } }, [
                        _vm._v("标签三的内容")
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "设置属性 size 为 small 可以显示为迷你型，只在 type 为 line 时有效。"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Tabs",
                    { attrs: { size: "small" } },
                    [
                      _c("TabPane", { attrs: { label: "标签一" } }, [
                        _vm._v("标签一的内容")
                      ]),
                      _vm._v(" "),
                      _c("TabPane", { attrs: { label: "标签二" } }, [
                        _vm._v("标签二的内容")
                      ]),
                      _vm._v(" "),
                      _c("TabPane", { attrs: { label: "标签三" } }, [
                        _vm._v("标签三的内容")
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("设置属性 type 为 card 可以显示卡片样式，常用于容器顶部。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Tabs",
                    { attrs: { type: "card" } },
                    [
                      _c("TabPane", { attrs: { label: "标签一" } }, [
                        _vm._v("标签一的内容")
                      ]),
                      _vm._v(" "),
                      _c("TabPane", { attrs: { label: "标签二" } }, [
                        _vm._v("标签二的内容")
                      ]),
                      _vm._v(" "),
                      _c("TabPane", { attrs: { label: "标签三" } }, [
                        _vm._v("标签三的内容")
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "\n    通过设置属性 closable 可以关闭某一项，仅在 type 为 card 时有效。\n    需结合 @on-tab-remove 事件手动关闭标签页。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Tabs",
                    {
                      attrs: { type: "card", closable: "" },
                      on: { "on-tab-remove": _vm.handleTabRemove }
                    },
                    [
                      _vm.tab0
                        ? _c("TabPane", { attrs: { label: "标签一" } }, [
                            _vm._v("标签一的内容")
                          ])
                        : _vm._e(),
                      _vm._v(" "),
                      _vm.tab1
                        ? _c("TabPane", { attrs: { label: "标签二" } }, [
                            _vm._v("标签二的内容")
                          ])
                        : _vm._e(),
                      _vm._v(" "),
                      _vm.tab2
                        ? _c("TabPane", { attrs: { label: "标签三" } }, [
                            _vm._v("标签三的内容")
                          ])
                        : _vm._e()
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("设置 label 为 Render 函数后，可以自定义标签页的内容。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Tabs",
                    { attrs: { value: "name1" } },
                    [
                      _c("TabPane", { attrs: { label: _vm.label, name: "name1" } }, [
                        _vm._v("标签一的内容")
                      ]),
                      _vm._v(" "),
                      _c("TabPane", { attrs: { label: "标签二", name: "name2" } }, [
                        _vm._v("标签二的内容")
                      ]),
                      _vm._v(" "),
                      _c("TabPane", { attrs: { label: "标签三", name: "name3" } }, [
                        _vm._v("标签三的内容")
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("设置 slot extra 可以在页签右边添加附加操作。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Tabs",
                    { attrs: { type: "card" } },
                    [
                      _vm._l(_vm.tabs, function(tab) {
                        return _c("TabPane", { key: tab, attrs: { label: "标签" + tab } }, [
                          _vm._v("标签" + _vm._s(tab))
                        ])
                      }),
                      _vm._v(" "),
                      _c(
                        "Button",
                        {
                          attrs: { slot: "extra", type: "ghost", size: "small" },
                          on: { click: _vm.handleTabsAdd },
                          slot: "extra"
                        },
                        [_vm._v("增加")]
                      )
                    ],
                    2
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过设置属性 animated 为 false 可以禁用动画。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Tabs",
                    { attrs: { animated: false } },
                    [
                      _c("TabPane", { attrs: { label: "标签一" } }, [
                        _vm._v("标签一的内容")
                      ]),
                      _vm._v(" "),
                      _c("TabPane", { attrs: { label: "标签二" } }, [
                        _vm._v("标签二的内容")
                      ]),
                      _vm._v(" "),
                      _c("TabPane", { attrs: { label: "标签三" } }, [
                        _vm._v("标签三的内容")
                      ])
                    ],
                    1
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$p = [];
            __vue_render__$p._withStripped = true;

              /* style */
              var __vue_inject_styles__$p = undefined;
              /* scoped */
              var __vue_scope_id__$p = undefined;
              /* module identifier */
              var __vue_module_identifier__$p = undefined;
              /* functional template */
              var __vue_is_functional_template__$p = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Tabs = normalizeComponent_1(
                { render: __vue_render__$p, staticRenderFns: __vue_staticRenderFns__$p },
                __vue_inject_styles__$p,
                __vue_script__$n,
                __vue_scope_id__$p,
                __vue_is_functional_template__$p,
                __vue_module_identifier__$p,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$o = {
              data: function data() {
                return {
                  switch1: false,
                  disabled: true
                };
              },
              methods: {
                change: function change(status) {
                  this.$Message.info("开关状态：" + status);
                }
              }
            };

            var css$n = ".switchbox .ui-switch+.ui-switch[data-v-b14f28c8]{margin-left:10px}";
            styleInject(css$n);

            /* script */
            var __vue_script__$o = script$o;
            /* template */
            var __vue_render__$q = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Switch 开关")]),
                  _vm._v(" "),
                  _c("p", [_vm._v("在两种状态间切换时用到的开关选择器。")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("基本用法，状态切换时会触发事件。")
                  ]),
                  _vm._v(" "),
                  _c("ISwitch", {
                    on: { "on-change": _vm.change },
                    model: {
                      value: _vm.switch1,
                      callback: function($$v) {
                        _vm.switch1 = $$v;
                      },
                      expression: "switch1"
                    }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("设置size为 large 或 small 使用大号和小号的开关。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "switchbox" },
                    [
                      _c("ISwitch", { attrs: { size: "large" } }),
                      _vm._v(" "),
                      _c("ISwitch"),
                      _vm._v(" "),
                      _c("ISwitch", { attrs: { size: "small" } })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("br"),
                  _c("br"),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("自定义内容，建议如果使用2个汉字，将开关尺寸设置为 large。")
                  ]),
                  _vm._v(" "),
                  _c("ISwitch", [
                    _c("span", { attrs: { slot: "open" }, slot: "open" }, [_vm._v("开")]),
                    _vm._v(" "),
                    _c("span", { attrs: { slot: "close" }, slot: "close" }, [_vm._v("关")])
                  ]),
                  _vm._v(" "),
                  _c(
                    "ISwitch",
                    { staticStyle: { "margin-left": "10px" } },
                    [
                      _c("Icon", {
                        attrs: { slot: "open", type: "android-done" },
                        slot: "open"
                      }),
                      _vm._v(" "),
                      _c("Icon", {
                        attrs: { slot: "close", type: "android-close" },
                        slot: "close"
                      })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("br"),
                  _c("br"),
                  _vm._v(" "),
                  _c("ISwitch", { attrs: { size: "large" } }, [
                    _c("span", { attrs: { slot: "open" }, slot: "open" }, [_vm._v("开启")]),
                    _vm._v(" "),
                    _c("span", { attrs: { slot: "close" }, slot: "close" }, [
                      _vm._v("关闭")
                    ])
                  ]),
                  _vm._v(" "),
                  _c(
                    "ISwitch",
                    { staticStyle: { "margin-left": "10px" }, attrs: { size: "large" } },
                    [
                      _c("span", { attrs: { slot: "open" }, slot: "open" }, [_vm._v("ON")]),
                      _vm._v(" "),
                      _c("span", { attrs: { slot: "close" }, slot: "close" }, [
                        _vm._v("OFF")
                      ])
                    ]
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("禁用开关。")]),
                  _vm._v(" "),
                  _c("ISwitch", {
                    staticStyle: { "margin-right": "10px" },
                    attrs: { disabled: _vm.disabled }
                  }),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      attrs: { type: "primary" },
                      on: {
                        click: function($event) {
                          _vm.disabled = !_vm.disabled;
                        }
                      }
                    },
                    [_vm._v("Toggle Disabled")]
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$q = [];
            __vue_render__$q._withStripped = true;

              /* style */
              var __vue_inject_styles__$q = undefined;
              /* scoped */
              var __vue_scope_id__$q = "data-v-b14f28c8";
              /* module identifier */
              var __vue_module_identifier__$q = undefined;
              /* functional template */
              var __vue_is_functional_template__$q = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Switch = normalizeComponent_1(
                { render: __vue_render__$q, staticRenderFns: __vue_staticRenderFns__$q },
                __vue_inject_styles__$q,
                __vue_script__$o,
                __vue_scope_id__$q,
                __vue_is_functional_template__$q,
                __vue_module_identifier__$q,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$p = {
              data: function data() {
                return {
                  single: true,
                  phone: "apple",
                  animal: "爪哇犀牛",
                  disabledSingle: true,
                  disabledGroup: "爪哇犀牛",
                  vertical: "apple",
                  button1: "北京",
                  button2: "北京",
                  button3: "北京",
                  button4: "北京",
                  button5: "北京",
                  button6: "北京"
                };
              }
            };

            /* script */
            var __vue_script__$p = script$p;

            /* template */
            var __vue_render__$r = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Radio 单选框")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "基本组件-单选框。主要用于一组可选项单项选择，或者单独用于切换到选中状态。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "\n    使用RadioGroup实现一组互斥的选项组。在组合使用时，Radio 使用 label 来自动判断。\n    每个 Radio 的内容可以自定义，如不填写则默认使用 label 的值。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("单独使用")]),
                  _vm._v(" "),
                  _c("p", [_vm._v("使用 v-model 可以双向绑定数据。")]),
                  _vm._v(" "),
                  _c(
                    "Radio",
                    {
                      model: {
                        value: _vm.single,
                        callback: function($$v) {
                          _vm.single = $$v;
                        },
                        expression: "single"
                      }
                    },
                    [_vm._v("Radio")]
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("组合使用")]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "\n    使用RadioGroup实现一组互斥的选项组。在组合使用时，Radio 使用 label 来自动判断。\n    每个 Radio 的内容可以自定义，如不填写则默认使用 label 的值\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "RadioGroup",
                    {
                      model: {
                        value: _vm.phone,
                        callback: function($$v) {
                          _vm.phone = $$v;
                        },
                        expression: "phone"
                      }
                    },
                    [
                      _c(
                        "Radio",
                        { attrs: { label: "apple" } },
                        [
                          _c("Icon", { attrs: { type: "social-apple" } }),
                          _vm._v(" "),
                          _c("span", [_vm._v("Apple")])
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Radio",
                        { attrs: { label: "android" } },
                        [
                          _c("Icon", { attrs: { type: "social-android" } }),
                          _vm._v(" "),
                          _c("span", [_vm._v("Android")])
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Radio",
                        { attrs: { label: "windows" } },
                        [
                          _c("Icon", { attrs: { type: "social-windows" } }),
                          _vm._v(" "),
                          _c("span", [_vm._v("Windows")])
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "RadioGroup",
                    {
                      model: {
                        value: _vm.animal,
                        callback: function($$v) {
                          _vm.animal = $$v;
                        },
                        expression: "animal"
                      }
                    },
                    [
                      _c("Radio", { attrs: { label: "金斑蝶" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "爪哇犀牛" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "印度黑羚" } })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("不可用")]),
                  _vm._v(" "),
                  _c("p", [_vm._v("通过设置disabled属性来禁用单选框。")]),
                  _vm._v(" "),
                  _c(
                    "Radio",
                    {
                      attrs: { disabled: "" },
                      model: {
                        value: _vm.disabledSingle,
                        callback: function($$v) {
                          _vm.disabledSingle = $$v;
                        },
                        expression: "disabledSingle"
                      }
                    },
                    [_vm._v("Radio")]
                  ),
                  _vm._v(" "),
                  _c(
                    "RadioGroup",
                    {
                      model: {
                        value: _vm.disabledGroup,
                        callback: function($$v) {
                          _vm.disabledGroup = $$v;
                        },
                        expression: "disabledGroup"
                      }
                    },
                    [
                      _c("Radio", { attrs: { label: "金斑蝶", disabled: "" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "爪哇犀牛" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "印度黑羚" } })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("垂直")]),
                  _vm._v(" "),
                  _c("p", [_vm._v("设置属性 vertical 可以垂直显示，按钮样式下无效。")]),
                  _vm._v(" "),
                  _c(
                    "RadioGroup",
                    {
                      attrs: { vertical: "" },
                      model: {
                        value: _vm.vertical,
                        callback: function($$v) {
                          _vm.vertical = $$v;
                        },
                        expression: "vertical"
                      }
                    },
                    [
                      _c(
                        "Radio",
                        { attrs: { label: "apple" } },
                        [
                          _c("Icon", { attrs: { type: "social-apple" } }),
                          _vm._v(" "),
                          _c("span", [_vm._v("Apple")])
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Radio",
                        { attrs: { label: "android" } },
                        [
                          _c("Icon", { attrs: { type: "social-android" } }),
                          _vm._v(" "),
                          _c("span", [_vm._v("Android")])
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "Radio",
                        { attrs: { label: "windows" } },
                        [
                          _c("Icon", { attrs: { type: "social-windows" } }),
                          _vm._v(" "),
                          _c("span", [_vm._v("Windows")])
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("按钮样式")]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v("组合使用时可以设置属性type为 button 来应用按钮的样式。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "RadioGroup",
                    {
                      attrs: { type: "button" },
                      model: {
                        value: _vm.button1,
                        callback: function($$v) {
                          _vm.button1 = $$v;
                        },
                        expression: "button1"
                      }
                    },
                    [
                      _c("Radio", { attrs: { label: "北京" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "上海" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "深圳" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "杭州" } })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "RadioGroup",
                    {
                      attrs: { type: "button" },
                      model: {
                        value: _vm.button2,
                        callback: function($$v) {
                          _vm.button2 = $$v;
                        },
                        expression: "button2"
                      }
                    },
                    [
                      _c("Radio", { attrs: { label: "北京" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "上海", disabled: "" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "深圳" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "杭州" } })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "RadioGroup",
                    {
                      attrs: { type: "button" },
                      model: {
                        value: _vm.button3,
                        callback: function($$v) {
                          _vm.button3 = $$v;
                        },
                        expression: "button3"
                      }
                    },
                    [
                      _c("Radio", { attrs: { label: "北京", disabled: "" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "上海", disabled: "" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "深圳", disabled: "" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "杭州", disabled: "" } })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("尺寸")]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "通过设置属性size为large或small将按钮样式设置为大和小尺寸，不设置为默认(中)尺寸。"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "RadioGroup",
                    {
                      attrs: { type: "button", size: "large" },
                      model: {
                        value: _vm.button4,
                        callback: function($$v) {
                          _vm.button4 = $$v;
                        },
                        expression: "button4"
                      }
                    },
                    [
                      _c("Radio", { attrs: { label: "北京" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "上海" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "深圳" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "杭州" } })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "RadioGroup",
                    {
                      attrs: { type: "button" },
                      model: {
                        value: _vm.button5,
                        callback: function($$v) {
                          _vm.button5 = $$v;
                        },
                        expression: "button5"
                      }
                    },
                    [
                      _c("Radio", { attrs: { label: "北京" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "上海" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "深圳" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "杭州" } })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "RadioGroup",
                    {
                      attrs: { type: "button", size: "small" },
                      model: {
                        value: _vm.button6,
                        callback: function($$v) {
                          _vm.button6 = $$v;
                        },
                        expression: "button6"
                      }
                    },
                    [
                      _c("Radio", { attrs: { label: "北京" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "上海" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "深圳" } }),
                      _vm._v(" "),
                      _c("Radio", { attrs: { label: "杭州" } })
                    ],
                    1
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$r = [];
            __vue_render__$r._withStripped = true;

              /* style */
              var __vue_inject_styles__$r = undefined;
              /* scoped */
              var __vue_scope_id__$r = undefined;
              /* module identifier */
              var __vue_module_identifier__$r = undefined;
              /* functional template */
              var __vue_is_functional_template__$r = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Radio = normalizeComponent_1(
                { render: __vue_render__$r, staticRenderFns: __vue_staticRenderFns__$r },
                __vue_inject_styles__$r,
                __vue_script__$p,
                __vue_scope_id__$r,
                __vue_is_functional_template__$r,
                __vue_module_identifier__$r,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$q = {};

            var css$o = ".desc[data-v-4077b895]{padding-left:30px;line-height:1.8}.example-demo .ui-col[data-v-4077b895],.example-demo .ui-col div[data-v-4077b895]{color:#fff;padding:10px 0;text-align:center;background:rgba(0,153,229,.9)}.example-demo .ui-col:nth-child(odd) div[data-v-4077b895],.example-demo .ui-col[data-v-4077b895]:nth-child(odd){background:rgba(0,153,229,.7)}.example-demo .gutter .ui-col[data-v-4077b895]{background:transparent!important}.code-row-bg[data-v-4077b895]{background:rgba(0,0,0,.05)}";
            styleInject(css$o);

            /* script */
            var __vue_script__$q = script$q;
            /* template */
            var __vue_render__$s = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "example-demo" },
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Grid 栅格")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "\n    我们采用了24栅格系统，将区域进行24等分，这样可以轻松应对大部分布局问题。使用栅格系统进行网页布局，可以使页面排版美观、舒适。\n    我们定义了两个概念，行row和列col，具体使用方法如下：\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _vm._m(0),
                  _vm._v(" "),
                  _c(
                    "Row",
                    [
                      _c("Col", { attrs: { span: "12" } }, [_vm._v("col-12")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "12" } }, [_vm._v("col-12")])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c(
                    "Row",
                    [
                      _c("Col", { attrs: { span: "8" } }, [_vm._v("col-8")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "8" } }, [_vm._v("col-8")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "8" } }, [_vm._v("col-8")])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c(
                    "Row",
                    [
                      _c("Col", { attrs: { span: "6" } }, [_vm._v("col-6")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "6" } }, [_vm._v("col-6")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "6" } }, [_vm._v("col-6")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "6" } }, [_vm._v("col-6")])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "通过给 row 添加 gutter 属性，可以给下属的 col 添加间距，推荐使用 (16+8n)px 作为栅格间隔。"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    { attrs: { gutter: 16 } },
                    [
                      _c("Col", { attrs: { span: "6" } }, [_c("div", [_vm._v("col-6")])]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "6" } }, [_c("div", [_vm._v("col-6")])]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "6" } }, [_c("div", [_vm._v("col-6")])]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "6" } }, [_c("div", [_vm._v("col-6")])])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过order来改变栅格的顺序。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    { attrs: { type: "flex" } },
                    [
                      _c("Col", { attrs: { span: "6", order: "4" } }, [
                        _vm._v("1 | order-4")
                      ]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "6", order: "3" } }, [
                        _vm._v("2 | order-3")
                      ]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "6", order: "2" } }, [
                        _vm._v("3 | order-2")
                      ]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "6", order: "1" } }, [
                        _vm._v("4 | order-1")
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过设置push和pull来改变栅格的顺序。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    [
                      _c("Col", { attrs: { span: "18", push: "6" } }, [
                        _vm._v("col-18 | push-6")
                      ]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "6", pull: "18" } }, [
                        _vm._v("col-6 | pull-18")
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过设置offset属性，将列进行左右偏移，偏移栅格数为offset的值。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    [
                      _c("Col", { attrs: { span: "8" } }, [_vm._v("col-8")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "8", offset: "8" } }, [
                        _vm._v("col-8 | offset-8")
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c(
                    "Row",
                    [
                      _c("Col", { attrs: { span: "6", offset: "8" } }, [
                        _vm._v("col-6 | offset-8")
                      ]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "6", offset: "4" } }, [
                        _vm._v("col-6 | offset-4")
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("br"),
                  _vm._v(" "),
                  _c(
                    "Row",
                    [
                      _c("Col", { attrs: { span: "12", offset: "8" } }, [
                        _vm._v("col-12 | offset-8")
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过给row设置参数justify为不同的值，来定义子元素的排布方式。")
                  ]),
                  _vm._v(" "),
                  _c("p", [_vm._v("子元素向左排列")]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    {
                      staticClass: "code-row-bg",
                      attrs: { type: "flex", justify: "start" }
                    },
                    [
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("p", [_vm._v("子元素向右排列")]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    { staticClass: "code-row-bg", attrs: { type: "flex", justify: "end" } },
                    [
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("p", [_vm._v("子元素居中排列")]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    {
                      staticClass: "code-row-bg",
                      attrs: { type: "flex", justify: "center" }
                    },
                    [
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("p", [_vm._v("子元素等宽排列")]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    {
                      staticClass: "code-row-bg",
                      attrs: { type: "flex", justify: "space-between" }
                    },
                    [
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("p", [_vm._v("子元素分散排列")]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    {
                      staticClass: "code-row-bg",
                      attrs: { type: "flex", justify: "space-around" }
                    },
                    [
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [_vm._v("col-4")])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "通过给row设置参数align为不同的值，来定义子元素在垂直方向上的排布方式。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("p", [_vm._v("顶部对齐")]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    {
                      staticClass: "code-row-bg",
                      attrs: { type: "flex", justify: "center", align: "top" }
                    },
                    [
                      _c("Col", { attrs: { span: "4" } }, [
                        _c("p", { staticStyle: { height: "80px" } }, [_vm._v("col-4")])
                      ]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [
                        _c("p", { staticStyle: { height: "30px" } }, [_vm._v("col-4")])
                      ]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [
                        _c("p", { staticStyle: { height: "100px" } }, [_vm._v("col-4")])
                      ]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [
                        _c("p", { staticStyle: { height: "60px" } }, [_vm._v("col-4")])
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("p", [_vm._v("底部对齐")]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    {
                      staticClass: "code-row-bg",
                      attrs: { type: "flex", justify: "center", align: "bottom" }
                    },
                    [
                      _c("Col", { attrs: { span: "4" } }, [
                        _c("p", { staticStyle: { height: "80px" } }, [_vm._v("col-4")])
                      ]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [
                        _c("p", { staticStyle: { height: "30px" } }, [_vm._v("col-4")])
                      ]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [
                        _c("p", { staticStyle: { height: "100px" } }, [_vm._v("col-4")])
                      ]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [
                        _c("p", { staticStyle: { height: "60px" } }, [_vm._v("col-4")])
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("p", [_vm._v("居中对齐")]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    {
                      staticClass: "code-row-bg",
                      attrs: { type: "flex", justify: "center", align: "middle" }
                    },
                    [
                      _c("Col", { attrs: { span: "4" } }, [
                        _c("p", { staticStyle: { height: "80px" } }, [_vm._v("col-4")])
                      ]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [
                        _c("p", { staticStyle: { height: "30px" } }, [_vm._v("col-4")])
                      ]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [
                        _c("p", { staticStyle: { height: "100px" } }, [_vm._v("col-4")])
                      ]),
                      _vm._v(" "),
                      _c("Col", { attrs: { span: "4" } }, [
                        _c("p", { staticStyle: { height: "60px" } }, [_vm._v("col-4")])
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "参照 Bootstrap 的 响应式设计，预设四个响应尺寸：xs sm md lg，详见 API。调整浏览器尺寸来查看效果"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    [
                      _c("Col", { attrs: { xs: 2, sm: 4, md: 6, lg: 8 } }, [_vm._v("Col")]),
                      _vm._v(" "),
                      _c("Col", { attrs: { xs: 20, sm: 16, md: 12, lg: 8 } }, [
                        _vm._v("Col")
                      ]),
                      _vm._v(" "),
                      _c("Col", { attrs: { xs: 2, sm: 4, md: 6, lg: 8 } }, [_vm._v("Col")])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      'span pull push offset order 属性可以通过内嵌到 xs sm md lg 属性中来使用。其中 :xs="6" 相当于 :xs="{ span: 6 }"。'
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Row",
                    [
                      _c(
                        "Col",
                        {
                          attrs: { xs: { span: 5, offset: 1 }, lg: { span: 6, offset: 2 } }
                        },
                        [_vm._v("Col")]
                      ),
                      _vm._v(" "),
                      _c(
                        "Col",
                        {
                          attrs: { xs: { span: 11, offset: 1 }, lg: { span: 6, offset: 2 } }
                        },
                        [_vm._v("Col")]
                      ),
                      _vm._v(" "),
                      _c(
                        "Col",
                        {
                          attrs: { xs: { span: 5, offset: 1 }, lg: { span: 6, offset: 2 } }
                        },
                        [_vm._v("Col")]
                      )
                    ],
                    1
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$s = [
              function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c("ul", { staticClass: "desc" }, [
                  _c("li", [_vm._v("使用row在水平方向创建一行")]),
                  _vm._v(" "),
                  _c("li", [_vm._v("将一组col插入在row中")]),
                  _vm._v(" "),
                  _c("li", [_vm._v("在每个col中，键入自己的内容")]),
                  _vm._v(" "),
                  _c("li", [
                    _vm._v("通过设置col的span参数，指定跨越的范围，其范围是1到24")
                  ]),
                  _vm._v(" "),
                  _c("li", [_vm._v("每个row中的col总和应该为24")])
                ])
              }
            ];
            __vue_render__$s._withStripped = true;

              /* style */
              var __vue_inject_styles__$s = undefined;
              /* scoped */
              var __vue_scope_id__$s = "data-v-4077b895";
              /* module identifier */
              var __vue_module_identifier__$s = undefined;
              /* functional template */
              var __vue_is_functional_template__$s = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Grid = normalizeComponent_1(
                { render: __vue_render__$s, staticRenderFns: __vue_staticRenderFns__$s },
                __vue_inject_styles__$s,
                __vue_script__$q,
                __vue_scope_id__$s,
                __vue_is_functional_template__$s,
                __vue_module_identifier__$s,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$r = {
              data: function data() {
                return {
                  isCollapsed: false
                };
              },
              computed: {
                rotateIcon: function rotateIcon() {
                  return ["menu-icon", this.isCollapsed ? "rotate-icon" : ""];
                }
              },
              methods: {
                collapsedSider: function collapsedSider() {
                  this.$refs.side1.toggleCollapse();
                }
              }
            };

            var css$p = ".layout[data-v-161e6a46]{border:1px solid #d7dde4;background:#f5f7f9;position:relative;border-radius:4px;overflow:hidden}.layout-logo[data-v-161e6a46]{width:100px;height:30px;background:#5b6270;border-radius:3px;float:left;position:relative;top:15px;left:20px}.menu-icon[data-v-161e6a46]{-webkit-transition:all .3s;transition:all .3s}.rotate-icon[data-v-161e6a46]{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}.layout-nav[data-v-161e6a46]{width:420px;margin:0 20px 0 auto}.layout-footer-center[data-v-161e6a46]{text-align:center}.layout-header-bar[data-v-161e6a46]{background:#fff;-webkit-box-shadow:0 1px 1px rgba(0,0,0,.1);box-shadow:0 1px 1px rgba(0,0,0,.1)}.layout-single[data-v-161e6a46]{height:253px;margin-bottom:48px;font-size:14px;color:#fff;text-align:center}.layout-footer[data-v-161e6a46],.layout-header[data-v-161e6a46]{background:#7cbce9;color:#fff}.layout-content[data-v-161e6a46]{background:#0f8de9;min-height:120px;line-height:120px}.layout-sider[data-v-161e6a46]{background:#3a9fe8;min-height:120px;line-height:120px}.desc[data-v-161e6a46]{margin-bottom:15px}";
            styleInject(css$p);

            /* script */
            var __vue_script__$r = script$r;
            /* template */
            var __vue_render__$t = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { staticClass: "page-layout" }, [
                _c("div", { staticClass: "page-title" }, [_vm._v("Layout 布局")]),
                _vm._v(" "),
                _c("p", { staticClass: "desc" }, [_vm._v("协助进行页面级整体布局。")]),
                _vm._v(" "),
                _c("div", { staticClass: "page-sub-title" }, [_vm._v("典型的页面布局")]),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "layout-single" },
                  [
                    _c(
                      "Layout",
                      [
                        _c("Header", { staticClass: "layout-header" }, [_vm._v("Header")]),
                        _vm._v(" "),
                        _c("Content", { staticClass: "layout-content" }, [
                          _vm._v("Content")
                        ]),
                        _vm._v(" "),
                        _c("Footer", { staticClass: "layout-footer" }, [_vm._v("Footer")])
                      ],
                      1
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "layout-single" },
                  [
                    _c(
                      "Layout",
                      [
                        _c("Header", { staticClass: "layout-header" }, [_vm._v("Header")]),
                        _vm._v(" "),
                        _c(
                          "Layout",
                          [
                            _c(
                              "Sider",
                              {
                                staticClass: "layout-sider",
                                attrs: { "hide-trigger": "" }
                              },
                              [_vm._v("Sider")]
                            ),
                            _vm._v(" "),
                            _c("Content", { staticClass: "layout-content" }, [
                              _vm._v("Content")
                            ])
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c("Footer", { staticClass: "layout-footer" }, [_vm._v("Footer")])
                      ],
                      1
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "layout-single" },
                  [
                    _c(
                      "Layout",
                      [
                        _c("Header", { staticClass: "layout-header" }, [_vm._v("Header")]),
                        _vm._v(" "),
                        _c(
                          "Layout",
                          [
                            _c("Content", { staticClass: "layout-content" }, [
                              _vm._v("Content")
                            ]),
                            _vm._v(" "),
                            _c(
                              "Sider",
                              {
                                staticClass: "layout-sider",
                                attrs: { "hide-trigger": "" }
                              },
                              [_vm._v("Sider")]
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c("Footer", { staticClass: "layout-footer" }, [_vm._v("Footer")])
                      ],
                      1
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "layout-single" },
                  [
                    _c(
                      "Layout",
                      [
                        _c(
                          "Sider",
                          { staticClass: "layout-sider", attrs: { "hide-trigger": "" } },
                          [_vm._v("Sider")]
                        ),
                        _vm._v(" "),
                        _c(
                          "Layout",
                          [
                            _c("Header", { staticClass: "layout-header" }, [
                              _vm._v("Header")
                            ]),
                            _vm._v(" "),
                            _c("Content", { staticClass: "layout-content" }, [
                              _vm._v("Content")
                            ]),
                            _vm._v(" "),
                            _c("Footer", { staticClass: "layout-footer" }, [
                              _vm._v("Footer")
                            ])
                          ],
                          1
                        )
                      ],
                      1
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c("div", { staticClass: "page-sub-title" }, [
                  _vm._v("最基本的『上-中-下』布局。")
                ]),
                _vm._v(" "),
                _c("p", { staticClass: "desc" }, [
                  _vm._v(
                    "\n    一般主导航放置于页面的顶端，从左自右依次为：logo、一级导航项、辅助菜单（用户、设置、通知等）。\n    通常将内容放在固定尺寸（例如：1200px）内，整个页面排版稳定，不受用户终端显示器影响；\n    上下级的结构符合用户上下浏览的习惯，也是较为经典的网站导航模式。\n    页面上下切分的方式提高了主工作区域的信息展示效率，但在纵向空间上会有一些牺牲。\n    此外，由于导航栏水平空间的限制，不适合那些一级导航项很多的信息结构。\n  "
                  )
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "layout" },
                  [
                    _c(
                      "Layout",
                      [
                        _c("Header", [_c("div", { staticClass: "layout-logo" })]),
                        _vm._v(" "),
                        _c(
                          "Content",
                          { style: { padding: "0 50px" } },
                          [
                            _c(
                              "Breadcrumb",
                              { style: { margin: "20px 0" } },
                              [
                                _c("BreadcrumbItem", [_vm._v("Home")]),
                                _vm._v(" "),
                                _c("BreadcrumbItem", [_vm._v("Components")]),
                                _vm._v(" "),
                                _c("BreadcrumbItem", [_vm._v("Layout")])
                              ],
                              1
                            ),
                            _vm._v(" "),
                            _c("Card", [
                              _c("div", { staticStyle: { "min-height": "200px" } }, [
                                _vm._v("Content")
                              ])
                            ])
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c("Footer", { staticClass: "layout-footer-center" }, [
                          _vm._v("2011-2016 © TalkingData")
                        ])
                      ],
                      1
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c("div", { staticClass: "page-sub-title" }, [
                  _vm._v(
                    "同样拥有顶部导航及侧边栏，区别是两边未留边距，多用于应用型的网站。"
                  )
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "layout" },
                  [
                    _c(
                      "Layout",
                      [
                        _c("Header", [
                          _c("div", { staticClass: "layout-logo" }),
                          _vm._v(" "),
                          _c("div", { staticClass: "layout-nav" })
                        ]),
                        _vm._v(" "),
                        _c(
                          "Layout",
                          [
                            _c("Sider", {
                              style: { background: "#fff" },
                              attrs: { "hide-trigger": "" }
                            }),
                            _vm._v(" "),
                            _c(
                              "Layout",
                              { style: { padding: "0 24px 24px" } },
                              [
                                _c(
                                  "Breadcrumb",
                                  { style: { margin: "24px 0" } },
                                  [
                                    _c("BreadcrumbItem", [_vm._v("Home")]),
                                    _vm._v(" "),
                                    _c("BreadcrumbItem", [_vm._v("Components")]),
                                    _vm._v(" "),
                                    _c("BreadcrumbItem", [_vm._v("Layout")])
                                  ],
                                  1
                                ),
                                _vm._v(" "),
                                _c(
                                  "Content",
                                  {
                                    style: {
                                      padding: "24px",
                                      minHeight: "280px",
                                      background: "#fff"
                                    }
                                  },
                                  [_vm._v("Content")]
                                )
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ],
                      1
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c("div", { staticClass: "page-sub-title" }, [
                  _vm._v("拥有顶部导航及侧边栏的页面，多用于展示类网站。")
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "layout" },
                  [
                    _c(
                      "Layout",
                      [
                        _c("Header", [_c("div", { staticClass: "layout-logo" })]),
                        _vm._v(" "),
                        _c(
                          "Layout",
                          { style: { padding: "0 50px" } },
                          [
                            _c(
                              "Breadcrumb",
                              { style: { margin: "16px 0" } },
                              [
                                _c("BreadcrumbItem", [_vm._v("Home")]),
                                _vm._v(" "),
                                _c("BreadcrumbItem", [_vm._v("Components")]),
                                _vm._v(" "),
                                _c("BreadcrumbItem", [_vm._v("Layout")])
                              ],
                              1
                            ),
                            _vm._v(" "),
                            _c(
                              "Content",
                              {
                                style: {
                                  padding: "24px 0",
                                  minHeight: "280px",
                                  background: "#fff"
                                }
                              },
                              [
                                _c(
                                  "Layout",
                                  [
                                    _c("Sider", {
                                      style: { background: "#fff" },
                                      attrs: { "hide-trigger": "" }
                                    }),
                                    _vm._v(" "),
                                    _c(
                                      "Content",
                                      {
                                        style: {
                                          padding: "24px",
                                          minHeight: "280px",
                                          background: "#fff"
                                        }
                                      },
                                      [_vm._v("Content")]
                                    )
                                  ],
                                  1
                                )
                              ],
                              1
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c("Footer", { staticClass: "layout-footer-center" }, [
                          _vm._v("2011-2016 © TalkingData")
                        ])
                      ],
                      1
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c("div", { staticClass: "page-sub-title" }, [_vm._v("侧边布局")]),
                _vm._v(" "),
                _c("p", { staticClass: "desc" }, [
                  _vm._v(
                    "\n    侧边两列式布局。页面横向空间有限时，侧边导航可收起。\n    侧边导航在页面布局上采用的是左右的结构，一般主导航放置于页面的左侧固定位置，辅助菜单放置于工作区顶部。\n    内容根据浏览器终端进行自适应，能提高横向空间的使用率，但是整个页面排版不稳定。\n    侧边导航的模式层级扩展性强，一、二、三级导航项目可以更为顺畅且具关联性的被展示，同时侧边导航可以固定，\n    使得用户在操作和浏览中可以快速的定位和切换当前位置，有很高的操作效率。\n    但这类导航横向页面内容的空间会被牺牲一部份。\n  "
                  )
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  {
                    staticClass: "layout",
                    staticStyle: { height: "360px", overflow: "auto" }
                  },
                  [
                    _c(
                      "Layout",
                      { style: { minHeight: "100vh" } },
                      [
                        _c("Sider", {
                          attrs: {
                            "hide-trigger": "",
                            collapsible: "",
                            "collapsed-width": 78
                          },
                          model: {
                            value: _vm.isCollapsed,
                            callback: function($$v) {
                              _vm.isCollapsed = $$v;
                            },
                            expression: "isCollapsed"
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "Layout",
                          [
                            _c("Header", {
                              style: {
                                background: "#fff",
                                boxShadow: "0 2px 3px 2px rgba(0,0,0,.1)"
                              }
                            }),
                            _vm._v(" "),
                            _c(
                              "Content",
                              { style: { padding: "0 16px 16px" } },
                              [
                                _c(
                                  "Breadcrumb",
                                  { style: { margin: "16px 0" } },
                                  [
                                    _c("BreadcrumbItem", [_vm._v("Home")]),
                                    _vm._v(" "),
                                    _c("BreadcrumbItem", [_vm._v("Components")]),
                                    _vm._v(" "),
                                    _c("BreadcrumbItem", [_vm._v("Layout")])
                                  ],
                                  1
                                ),
                                _vm._v(" "),
                                _c("Card", [
                                  _c("div", { staticStyle: { height: "600px" } }, [
                                    _vm._v("Content")
                                  ])
                                ])
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ],
                      1
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c("div", { staticClass: "page-sub-title" }, [_vm._v("自定义触发器")]),
                _vm._v(" "),
                _c("p", { staticClass: "desc" }, [
                  _vm._v(
                    "要使用自定义触发器，可以设置hide-trigger属性来隐藏默认触发器，也可以通过slot替换默认触发器。"
                  )
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "layout" },
                  [
                    _c(
                      "Layout",
                      [
                        _c("Sider", {
                          ref: "side1",
                          attrs: {
                            "hide-trigger": "",
                            collapsible: "",
                            "collapsed-width": 78
                          },
                          model: {
                            value: _vm.isCollapsed,
                            callback: function($$v) {
                              _vm.isCollapsed = $$v;
                            },
                            expression: "isCollapsed"
                          }
                        }),
                        _vm._v(" "),
                        _c(
                          "Layout",
                          [
                            _c(
                              "Header",
                              { staticClass: "layout-header-bar", style: { padding: 0 } },
                              [
                                _c("Icon", {
                                  class: _vm.rotateIcon,
                                  style: { margin: "20px 20px 0" },
                                  attrs: { type: "navicon-round", size: "24" },
                                  nativeOn: {
                                    click: function($event) {
                                      return _vm.collapsedSider($event)
                                    }
                                  }
                                })
                              ],
                              1
                            ),
                            _vm._v(" "),
                            _c(
                              "Content",
                              {
                                style: {
                                  margin: "20px",
                                  background: "#fff",
                                  minHeight: "260px"
                                }
                              },
                              [_vm._v("Content")]
                            )
                          ],
                          1
                        )
                      ],
                      1
                    )
                  ],
                  1
                )
              ])
            };
            var __vue_staticRenderFns__$t = [];
            __vue_render__$t._withStripped = true;

              /* style */
              var __vue_inject_styles__$t = undefined;
              /* scoped */
              var __vue_scope_id__$t = "data-v-161e6a46";
              /* module identifier */
              var __vue_module_identifier__$t = undefined;
              /* functional template */
              var __vue_is_functional_template__$t = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Layout = normalizeComponent_1(
                { render: __vue_render__$t, staticRenderFns: __vue_staticRenderFns__$t },
                __vue_inject_styles__$t,
                __vue_script__$r,
                __vue_scope_id__$t,
                __vue_is_functional_template__$t,
                __vue_module_identifier__$t,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$s = {
              data: function data() {
                return {
                  value1: 3,
                  value2: 0,
                  value3: 0,
                  setting: {
                    autoplay: false,
                    autoplaySpeed: 2000,
                    dots: "inside",
                    radiusDot: false,
                    trigger: "click",
                    arrow: "hover"
                  }
                };
              }
            };

            var css$q = ".demo-carousel[data-v-5f42bfa4]{height:200px;line-height:200px;text-align:center;color:#fff;font-size:20px;background:#506b9e}";
            styleInject(css$q);

            /* script */
            var __vue_script__$s = script$s;
            /* template */
            var __vue_render__$u = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Swiper 走马灯")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "常用于一组图片或卡片轮播，当内容空间不足时，可以用走马灯的形式进行收纳，进行轮播展现。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("最基本的用法。")]),
                  _vm._v(" "),
                  _c(
                    "Swiper",
                    {
                      attrs: { loop: "" },
                      model: {
                        value: _vm.value1,
                        callback: function($$v) {
                          _vm.value1 = $$v;
                        },
                        expression: "value1"
                      }
                    },
                    [
                      _c("SwiperItem", [
                        _c("div", { staticClass: "demo-carousel" }, [_vm._v("1")])
                      ]),
                      _vm._v(" "),
                      _c("SwiperItem", [
                        _c("div", { staticClass: "demo-carousel" }, [_vm._v("2")])
                      ]),
                      _vm._v(" "),
                      _c("SwiperItem", [
                        _c("div", { staticClass: "demo-carousel" }, [_vm._v("3")])
                      ]),
                      _vm._v(" "),
                      _c("SwiperItem", [
                        _c("div", { staticClass: "demo-carousel" }, [_vm._v("4")])
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "设置属性 autoplay 可以自动轮播，同时可以设置属性 autoplay-speed 改变自动播放的速度。"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Swiper",
                    {
                      attrs: { autoplay: "", loop: "", radiusDot: "" },
                      model: {
                        value: _vm.value2,
                        callback: function($$v) {
                          _vm.value2 = $$v;
                        },
                        expression: "value2"
                      }
                    },
                    [
                      _c("SwiperItem", [
                        _c("div", { staticClass: "demo-carousel" }, [_vm._v("1")])
                      ]),
                      _vm._v(" "),
                      _c("SwiperItem", [
                        _c("div", { staticClass: "demo-carousel" }, [_vm._v("2")])
                      ]),
                      _vm._v(" "),
                      _c("SwiperItem", [
                        _c("div", { staticClass: "demo-carousel" }, [_vm._v("3")])
                      ]),
                      _vm._v(" "),
                      _c("SwiperItem", [
                        _c("div", { staticClass: "demo-carousel" }, [_vm._v("4")])
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("动态调整各配置")]),
                  _vm._v(" "),
                  _c(
                    "Checkbox",
                    {
                      model: {
                        value: _vm.setting.autoplay,
                        callback: function($$v) {
                          _vm.$set(_vm.setting, "autoplay", $$v);
                        },
                        expression: "setting.autoplay"
                      }
                    },
                    [_vm._v("自动切换")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Checkbox",
                    {
                      model: {
                        value: _vm.setting.radiusDot,
                        callback: function($$v) {
                          _vm.$set(_vm.setting, "radiusDot", $$v);
                        },
                        expression: "setting.radiusDot"
                      }
                    },
                    [_vm._v("圆形指示器")]
                  ),
                  _vm._v(" "),
                  _c("br"),
                  _c("br"),
                  _vm._v(" "),
                  _c(
                    "Swiper",
                    {
                      attrs: {
                        loop: "",
                        autoplay: _vm.setting.autoplay,
                        "autoplay-speed": _vm.setting.autoplaySpeed,
                        dots: _vm.setting.dots,
                        "radius-dot": _vm.setting.radiusDot,
                        trigger: _vm.setting.trigger,
                        arrow: _vm.setting.arrow
                      },
                      model: {
                        value: _vm.value3,
                        callback: function($$v) {
                          _vm.value3 = $$v;
                        },
                        expression: "value3"
                      }
                    },
                    [
                      _c("SwiperItem", [
                        _c("div", { staticClass: "demo-carousel" }, [_vm._v("1")])
                      ]),
                      _vm._v(" "),
                      _c("SwiperItem", [
                        _c("div", { staticClass: "demo-carousel" }, [_vm._v("2")])
                      ]),
                      _vm._v(" "),
                      _c("SwiperItem", [
                        _c("div", { staticClass: "demo-carousel" }, [_vm._v("3")])
                      ]),
                      _vm._v(" "),
                      _c("SwiperItem", [
                        _c("div", { staticClass: "demo-carousel" }, [_vm._v("4")])
                      ])
                    ],
                    1
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$u = [];
            __vue_render__$u._withStripped = true;

              /* style */
              var __vue_inject_styles__$u = undefined;
              /* scoped */
              var __vue_scope_id__$u = "data-v-5f42bfa4";
              /* module identifier */
              var __vue_module_identifier__$u = undefined;
              /* functional template */
              var __vue_is_functional_template__$u = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Swiper = normalizeComponent_1(
                { render: __vue_render__$u, staticRenderFns: __vue_staticRenderFns__$u },
                __vue_inject_styles__$u,
                __vue_script__$s,
                __vue_scope_id__$u,
                __vue_is_functional_template__$u,
                __vue_module_identifier__$u,
                undefined,
                undefined
              );

            /* script */

            /* template */
            var __vue_render__$v = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "page-alert" },
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Alert 警告提示")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("不带描述")]),
                  _vm._v(" "),
                  _c("Alert", [_vm._v("An info prompt")]),
                  _vm._v(" "),
                  _c("Alert", { attrs: { type: "success" } }, [_vm._v("A success prompt")]),
                  _vm._v(" "),
                  _c("Alert", { attrs: { type: "warning" } }, [_vm._v("A warning prompt")]),
                  _vm._v(" "),
                  _c("Alert", { attrs: { type: "error" } }, [_vm._v("An error prompt")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v('自定义slot name="desc"描述内容。')
                  ]),
                  _vm._v(" "),
                  _c(
                    "Alert",
                    [
                      _vm._v("\n      An info prompt\n      "),
                      _c("template", { slot: "desc" }, [
                        _vm._v(
                          "Content of prompt. Content of prompt. Content of prompt. Content of prompt. "
                        )
                      ])
                    ],
                    2
                  ),
                  _vm._v(" "),
                  _c(
                    "Alert",
                    { attrs: { type: "success" } },
                    [
                      _vm._v("\n      A success prompt\n      "),
                      _c("template", { slot: "desc" }, [
                        _vm._v(
                          "Content of prompt. Content of prompt. Content of prompt. Content of prompt. "
                        )
                      ])
                    ],
                    2
                  ),
                  _vm._v(" "),
                  _c(
                    "Alert",
                    { attrs: { type: "warning" } },
                    [
                      _vm._v("\n      A warning prompt\n      "),
                      _c("template", { slot: "desc" }, [
                        _vm._v(
                          "\n      Content of prompt. Content of prompt. Content of prompt.\n  "
                        )
                      ])
                    ],
                    2
                  ),
                  _vm._v(" "),
                  _c("Alert", { attrs: { type: "error" } }, [
                    _vm._v("\n      An error prompt\n      "),
                    _c(
                      "span",
                      { attrs: { slot: "desc" }, slot: "desc" },
                      [
                        _vm._v("\n          Custom error description copywriting. "),
                        _c("Icon", { attrs: { type: "help-circled", size: "14" } })
                      ],
                      1
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("带图标")]),
                  _vm._v(" "),
                  _c("Alert", { attrs: { "show-icon": "" } }, [_vm._v("An info prompt")]),
                  _vm._v(" "),
                  _c("Alert", { attrs: { type: "success", "show-icon": "" } }, [
                    _vm._v("A success prompt")
                  ]),
                  _vm._v(" "),
                  _c("Alert", { attrs: { type: "warning", "show-icon": "" } }, [
                    _vm._v("A warning prompt")
                  ]),
                  _vm._v(" "),
                  _c("Alert", { attrs: { type: "error", "show-icon": "" } }, [
                    _vm._v("An error prompt")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Alert",
                    { attrs: { "show-icon": "" } },
                    [
                      _vm._v("\n      An info prompt\n      "),
                      _c("template", { slot: "desc" }, [
                        _vm._v(
                          "Content of prompt. Content of prompt. Content of prompt. Content of prompt. "
                        )
                      ])
                    ],
                    2
                  ),
                  _vm._v(" "),
                  _c("Alert", { attrs: { type: "success", "show-icon": "" } }, [
                    _vm._v("\n      A success prompt\n      "),
                    _c("span", { attrs: { slot: "desc" }, slot: "desc" }, [
                      _vm._v(
                        "Content of prompt. Content of prompt. Content of prompt. Content of prompt. "
                      )
                    ])
                  ]),
                  _vm._v(" "),
                  _c(
                    "Alert",
                    { attrs: { type: "warning", "show-icon": "" } },
                    [
                      _vm._v("\n      A warning prompt\n      "),
                      _c("template", { slot: "desc" }, [
                        _vm._v(
                          "\n      Content of prompt. Content of prompt. Content of prompt.\n  "
                        )
                      ])
                    ],
                    2
                  ),
                  _vm._v(" "),
                  _c("Alert", { attrs: { type: "error", "show-icon": "" } }, [
                    _vm._v("\n      An error prompt\n      "),
                    _c("span", { attrs: { slot: "desc" }, slot: "desc" }, [
                      _vm._v("\n          Custom error description copywriting.\n      ")
                    ])
                  ]),
                  _vm._v(" "),
                  _c(
                    "Alert",
                    { attrs: { "show-icon": "" } },
                    [
                      _vm._v("\n      Custom icon\n      "),
                      _c("Icon", {
                        attrs: { slot: "icon", type: "ios-lightbulb-outline" },
                        slot: "icon"
                      }),
                      _vm._v(" "),
                      _c("template", { slot: "desc" }, [
                        _vm._v(
                          "Custom icon copywriting. Custom icon copywriting. Custom icon copywriting. "
                        )
                      ])
                    ],
                    2
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("可以关闭")]),
                  _vm._v(" "),
                  _c("Alert", { attrs: { closable: "" } }, [_vm._v("An info prompt")]),
                  _vm._v(" "),
                  _c(
                    "Alert",
                    { attrs: { type: "success", "show-icon": "", closable: "" } },
                    [
                      _vm._v("\n      A success prompt\n      "),
                      _c("span", { attrs: { slot: "desc" }, slot: "desc" }, [
                        _vm._v(
                          "Content of prompt. Content of prompt. Content of prompt. Content of prompt. "
                        )
                      ])
                    ]
                  ),
                  _vm._v(" "),
                  _c("Alert", { attrs: { type: "warning", closable: "" } }, [
                    _vm._v("\n      Custom closing content\n      "),
                    _c("span", { attrs: { slot: "close" }, slot: "close" }, [
                      _vm._v("No longer prompt")
                    ])
                  ])
                ],
                1
              )
            };
            var __vue_staticRenderFns__$v = [];
            __vue_render__$v._withStripped = true;

              /* style */
              var __vue_inject_styles__$v = undefined;
              /* scoped */
              var __vue_scope_id__$v = undefined;
              /* module identifier */
              var __vue_module_identifier__$v = undefined;
              /* functional template */
              var __vue_is_functional_template__$v = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Alert = normalizeComponent_1(
                { render: __vue_render__$v, staticRenderFns: __vue_staticRenderFns__$v },
                __vue_inject_styles__$v,
                {},
                __vue_scope_id__$v,
                __vue_is_functional_template__$v,
                __vue_module_identifier__$v,
                undefined,
                undefined
              );

            /* script */

            /* template */
            var __vue_render__$w = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div")
            };
            var __vue_staticRenderFns__$w = [];
            __vue_render__$w._withStripped = true;

              /* style */
              var __vue_inject_styles__$w = undefined;
              /* scoped */
              var __vue_scope_id__$w = undefined;
              /* module identifier */
              var __vue_module_identifier__$w = undefined;
              /* functional template */
              var __vue_is_functional_template__$w = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var BackTop = normalizeComponent_1(
                { render: __vue_render__$w, staticRenderFns: __vue_staticRenderFns__$w },
                __vue_inject_styles__$w,
                {},
                __vue_scope_id__$w,
                __vue_is_functional_template__$w,
                __vue_module_identifier__$w,
                undefined,
                undefined
              );

            /* script */

            /* template */
            var __vue_render__$x = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div")
            };
            var __vue_staticRenderFns__$x = [];
            __vue_render__$x._withStripped = true;

              /* style */
              var __vue_inject_styles__$x = undefined;
              /* scoped */
              var __vue_scope_id__$x = undefined;
              /* module identifier */
              var __vue_module_identifier__$x = undefined;
              /* functional template */
              var __vue_is_functional_template__$x = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Badge = normalizeComponent_1(
                { render: __vue_render__$x, staticRenderFns: __vue_staticRenderFns__$x },
                __vue_inject_styles__$x,
                {},
                __vue_scope_id__$x,
                __vue_is_functional_template__$x,
                __vue_module_identifier__$x,
                undefined,
                undefined
              );

            /* script */

            /* template */
            var __vue_render__$y = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div")
            };
            var __vue_staticRenderFns__$y = [];
            __vue_render__$y._withStripped = true;

              /* style */
              var __vue_inject_styles__$y = undefined;
              /* scoped */
              var __vue_scope_id__$y = undefined;
              /* module identifier */
              var __vue_module_identifier__$y = undefined;
              /* functional template */
              var __vue_is_functional_template__$y = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Button = normalizeComponent_1(
                { render: __vue_render__$y, staticRenderFns: __vue_staticRenderFns__$y },
                __vue_inject_styles__$y,
                {},
                __vue_scope_id__$y,
                __vue_is_functional_template__$y,
                __vue_module_identifier__$y,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$t = {
              data: function data() {
                return {
                  movieList: [
                    {
                      name: "The Shawshank Redemption",
                      url: "https://movie.douban.com/subject/1292052/",
                      rate: 9.6
                    },
                    {
                      name: "Leon:The Professional",
                      url: "https://movie.douban.com/subject/1295644/",
                      rate: 9.4
                    },
                    {
                      name: "Farewell to My Concubine",
                      url: "https://movie.douban.com/subject/1291546/",
                      rate: 9.5
                    },
                    {
                      name: "Forrest Gump",
                      url: "https://movie.douban.com/subject/1292720/",
                      rate: 9.4
                    },
                    {
                      name: "Life Is Beautiful",
                      url: "https://movie.douban.com/subject/1292063/",
                      rate: 9.5
                    },
                    {
                      name: "Spirited Away",
                      url: "https://movie.douban.com/subject/1291561/",
                      rate: 9.2
                    },
                    {
                      name: "Schindler's List",
                      url: "https://movie.douban.com/subject/1295124/",
                      rate: 9.4
                    },
                    {
                      name: "The Legend of 1900",
                      url: "https://movie.douban.com/subject/1292001/",
                      rate: 9.2
                    },
                    {
                      name: "WALL·E",
                      url: "https://movie.douban.com/subject/2131459/",
                      rate: 9.3
                    },
                    {
                      name: "Inception",
                      url: "https://movie.douban.com/subject/3541415/",
                      rate: 9.2
                    }
                  ],
                  randomMovieList: []
                };
              },
              methods: {
                changeLimit: function changeLimit() {
                  function getArrayItems(arr, num) {
                    var temp_array = [];
                    for (var index in arr) {
                      temp_array.push(arr[index]);
                    }
                    var return_array = [];
                    for (var i = 0; i < num; i++) {
                      if (temp_array.length > 0) {
                        var arrIndex = Math.floor(Math.random() * temp_array.length);
                        return_array[i] = temp_array[arrIndex];
                        temp_array.splice(arrIndex, 1);
                      } else {
                        break;
                      }
                    }
                    return return_array;
                  }
                  this.randomMovieList = getArrayItems(this.movieList, 5);
                }
              },
              mounted: function mounted() {
                this.changeLimit();
              }
            };

            /* script */
            var __vue_script__$t = script$t;

            /* template */
            var __vue_render__$z = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Card 卡片")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "自定义标题、额外操作和主体内容，可以完全自由控制各个部分，也可以结合其它组件一起使用，较为灵活。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("Card", [
                    _c(
                      "p",
                      { attrs: { slot: "title" }, slot: "title" },
                      [
                        _c("Icon", { attrs: { type: "ios-film-outline" } }),
                        _vm._v("Classic film\n    ")
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "a",
                      {
                        attrs: { slot: "extra", href: "#" },
                        on: {
                          click: function($event) {
                            $event.preventDefault();
                            return _vm.changeLimit($event)
                          }
                        },
                        slot: "extra"
                      },
                      [_vm._v("Change")]
                    ),
                    _vm._v(" "),
                    _c(
                      "ul",
                      _vm._l(_vm.randomMovieList, function(item) {
                        return _c("li", { key: item.name }, [
                          _c("a", { attrs: { href: item.url, target: "_blank" } }, [
                            _vm._v(_vm._s(item.name))
                          ]),
                          _vm._v(" "),
                          _c(
                            "span",
                            [
                              _vm._l(4, function(n) {
                                return _c("Icon", { key: n, attrs: { type: "ios-star" } })
                              }),
                              _vm._v(" "),
                              item.rate >= 9.5
                                ? _c("Icon", { attrs: { type: "ios-star" } })
                                : _c("Icon", { attrs: { type: "ios-star-half" } }),
                              _vm._v("\n          " + _vm._s(item.rate) + "\n        ")
                            ],
                            2
                          )
                        ])
                      }),
                      0
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "通过设置属性bordered为 false ，可以不添加边框，建议在灰色背景下使用。"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticStyle: { background: "#eee", padding: "20px" } },
                    [
                      _c("Card", { attrs: { bordered: false } }, [
                        _c("p", { attrs: { slot: "title" }, slot: "title" }, [
                          _vm._v("No border title")
                        ]),
                        _vm._v(" "),
                        _c("p", [
                          _vm._v(
                            "Content of no border type. Content of no border type. Content of no border type. Content of no border type."
                          )
                        ])
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过设置属性dis-hover来禁用鼠标悬停显示阴影的效果。")
                  ]),
                  _vm._v(" "),
                  _c("Card", { attrs: { "dis-hover": "", title: "The standard card" } }, [
                    _c("p", [_vm._v("Content of card")]),
                    _vm._v(" "),
                    _c("p", [_vm._v("Content of card")]),
                    _vm._v(" "),
                    _c("p", [_vm._v("Content of card")])
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "通过设置属性shadow来显示卡片阴影，使用该属性后，bordered和dis-hover将无效，建议在灰色背景下使用。"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "dir",
                    { staticStyle: { background: "rgb(238, 238, 238)", padding: "20px" } },
                    [
                      _c("Card", { attrs: { shadow: "" } }, [
                        _c("p", { attrs: { slot: "title" }, slot: "title" }, [
                          _vm._v("Use a card with a shadow effect")
                        ]),
                        _vm._v(" "),
                        _c("p", [_vm._v("Content of card")]),
                        _vm._v(" "),
                        _c("p", [_vm._v("Content of card")]),
                        _vm._v(" "),
                        _c("p", [_vm._v("Content of card")])
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("只包含内容区域，没有标题。")
                  ]),
                  _vm._v(" "),
                  _c("Card", { staticStyle: { width: "320px" } }, [
                    _c("div", { staticStyle: { "text-align": "center" } }, [
                      _c("img", {
                        attrs: {
                          src:
                            "http://v2.iviewui.com/dist/76ecb6e76d2c438065f90cd7f8fa7371.png"
                        }
                      }),
                      _vm._v(" "),
                      _c("h3", [_vm._v("A high quality UI Toolkit based on Vue.js")])
                    ])
                  ])
                ],
                1
              )
            };
            var __vue_staticRenderFns__$z = [];
            __vue_render__$z._withStripped = true;

              /* style */
              var __vue_inject_styles__$z = undefined;
              /* scoped */
              var __vue_scope_id__$z = undefined;
              /* module identifier */
              var __vue_module_identifier__$z = undefined;
              /* functional template */
              var __vue_is_functional_template__$z = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Card = normalizeComponent_1(
                { render: __vue_render__$z, staticRenderFns: __vue_staticRenderFns__$z },
                __vue_inject_styles__$z,
                __vue_script__$t,
                __vue_scope_id__$z,
                __vue_is_functional_template__$z,
                __vue_module_identifier__$z,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$u = {
              data: function data() {
                return {
                  single: false,
                  fruit: ['苹果'],
                  checkedValue: '真的'
                }
              }
            };

            /* script */
            var __vue_script__$u = script$u;

            /* template */
            var __vue_render__$A = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "page-checkbox" },
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Checkbox 组件")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("单独使用 使用 v-model 可以双向绑定数据。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Checkbox",
                    {
                      attrs: { size: "large" },
                      model: {
                        value: _vm.single,
                        callback: function($$v) {
                          _vm.single = $$v;
                        },
                        expression: "single"
                      }
                    },
                    [_vm._v("Checkbox")]
                  ),
                  _vm._v(" "),
                  _c("p", [_vm._v(_vm._s(_vm.single))]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("true-value 和 false-value的使用")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Checkbox",
                    {
                      attrs: { "true-value": "真的", "false-value": "假的" },
                      model: {
                        value: _vm.checkedValue,
                        callback: function($$v) {
                          _vm.checkedValue = $$v;
                        },
                        expression: "checkedValue"
                      }
                    },
                    [_vm._v(_vm._s(_vm.checkedValue))]
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "\n    使用CheckboxGroup配合数组来生成组合。\n    在组合使用时，Checkbox 使用 label 来自动判断选中状态。\n    每个 Checkbox 的内容可以自定义，如不填写则默认使用 label 的值。。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "CheckboxGroup",
                    {
                      model: {
                        value: _vm.fruit,
                        callback: function($$v) {
                          _vm.fruit = $$v;
                        },
                        expression: "fruit"
                      }
                    },
                    [
                      _c("Checkbox", { attrs: { label: "香蕉" } }),
                      _vm._v(" "),
                      _c("Checkbox", { attrs: { disabled: "", label: "苹果" } }),
                      _vm._v(" "),
                      _c("Checkbox", { attrs: { label: "西瓜" } }),
                      _vm._v(" "),
                      _c("Checkbox", { attrs: { label: "西红柿" } })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("p", [_vm._v(_vm._s(_vm.fruit))])
                ],
                1
              )
            };
            var __vue_staticRenderFns__$A = [];
            __vue_render__$A._withStripped = true;

              /* style */
              var __vue_inject_styles__$A = undefined;
              /* scoped */
              var __vue_scope_id__$A = undefined;
              /* module identifier */
              var __vue_module_identifier__$A = undefined;
              /* functional template */
              var __vue_is_functional_template__$A = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Checkbox = normalizeComponent_1(
                { render: __vue_render__$A, staticRenderFns: __vue_staticRenderFns__$A },
                __vue_inject_styles__$A,
                __vue_script__$u,
                __vue_scope_id__$A,
                __vue_is_functional_template__$A,
                __vue_module_identifier__$A,
                undefined,
                undefined
              );

            /* script */

            /* template */
            var __vue_render__$B = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div")
            };
            var __vue_staticRenderFns__$B = [];
            __vue_render__$B._withStripped = true;

              /* style */
              var __vue_inject_styles__$B = undefined;
              /* scoped */
              var __vue_scope_id__$B = undefined;
              /* module identifier */
              var __vue_module_identifier__$B = undefined;
              /* functional template */
              var __vue_is_functional_template__$B = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Input = normalizeComponent_1(
                { render: __vue_render__$B, staticRenderFns: __vue_staticRenderFns__$B },
                __vue_inject_styles__$B,
                {},
                __vue_scope_id__$B,
                __vue_is_functional_template__$B,
                __vue_module_identifier__$B,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$v = {
              methods: {
                openInfo: function openInfo() {
                  this.$Message.info('这是一条信息提示');
                },
                openSuccess: function openSuccess() {
                  this.$Message.success('这是一条成功提示');
                },
                openWarning: function openWarning() {
                  this.$Message.warning('这是一条警告提示');
                },
                openError: function openError() {
                  this.$Message.error('这是一条错误提示');
                },
                openLoading: function openLoading() {
                  this.$Message.loading('这是一条加载中提示');
                }
              }
            };

            /* script */
            var __vue_script__$v = script$v;

            /* template */
            var __vue_render__$C = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Message 消息提示")]),
                  _vm._v(" "),
                  _c("Button", { on: { click: _vm.openInfo } }, [_vm._v("信息")]),
                  _vm._v(" "),
                  _c("Button", { on: { click: _vm.openSuccess } }, [_vm._v("成功")]),
                  _vm._v(" "),
                  _c("Button", { on: { click: _vm.openWarning } }, [_vm._v("警告")]),
                  _vm._v(" "),
                  _c("Button", { on: { click: _vm.openError } }, [_vm._v("错误")]),
                  _vm._v(" "),
                  _c("Button", { on: { click: _vm.openLoading } }, [_vm._v("加载中")])
                ],
                1
              )
            };
            var __vue_staticRenderFns__$C = [];
            __vue_render__$C._withStripped = true;

              /* style */
              var __vue_inject_styles__$C = undefined;
              /* scoped */
              var __vue_scope_id__$C = undefined;
              /* module identifier */
              var __vue_module_identifier__$C = undefined;
              /* functional template */
              var __vue_is_functional_template__$C = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Message = normalizeComponent_1(
                { render: __vue_render__$C, staticRenderFns: __vue_staticRenderFns__$C },
                __vue_inject_styles__$C,
                __vue_script__$v,
                __vue_scope_id__$C,
                __vue_is_functional_template__$C,
                __vue_module_identifier__$C,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$w = {
              methods: {
                openNoIcon: function openNoIcon() {
                  this.$Notice.open({
                    title: "Notification title",
                    desc:
                      "Here is the notification description. Here is the notification description. "
                  });
                },
                info: function info(nodesc) {
                  this.$Notice.info({
                    title: "Notification title",
                    desc: nodesc
                      ? ""
                      : "Here is the notification description. Here is the notification description. "
                  });
                },
                success: function success(nodesc) {
                  this.$Notice.success({
                    title: "Notification title",
                    desc: nodesc
                      ? ""
                      : "Here is the notification description. Here is the notification description. "
                  });
                },
                warning: function warning(nodesc) {
                  this.$Notice.warning({
                    title: "Notification title",
                    desc: nodesc
                      ? ""
                      : "Here is the notification description. Here is the notification description. "
                  });
                },
                error: function error(nodesc) {
                  this.$Notice.error({
                    title: "Notification title",
                    desc: nodesc
                      ? ""
                      : "Here is the notification description. Here is the notification description. "
                  });
                }
              }
            };

            /* script */
            var __vue_script__$w = script$w;

            /* template */
            var __vue_render__$D = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Notice 通知")]),
                  _vm._v(" "),
                  _c("Button", { on: { click: _vm.openNoIcon } }, [_vm._v("不带图标")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("带描述")]),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          return _vm.info(false)
                        }
                      }
                    },
                    [_vm._v("Info")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          return _vm.success(false)
                        }
                      }
                    },
                    [_vm._v("Success")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          return _vm.warning(false)
                        }
                      }
                    },
                    [_vm._v("Warning")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          return _vm.error(false)
                        }
                      }
                    },
                    [_vm._v("Error")]
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [_vm._v("不带描述")]),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          return _vm.info(true)
                        }
                      }
                    },
                    [_vm._v("Info")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          return _vm.success(true)
                        }
                      }
                    },
                    [_vm._v("Success")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          return _vm.warning(true)
                        }
                      }
                    },
                    [_vm._v("Warning")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          return _vm.error(true)
                        }
                      }
                    },
                    [_vm._v("Error")]
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$D = [];
            __vue_render__$D._withStripped = true;

              /* style */
              var __vue_inject_styles__$D = undefined;
              /* scoped */
              var __vue_scope_id__$D = undefined;
              /* module identifier */
              var __vue_module_identifier__$D = undefined;
              /* functional template */
              var __vue_is_functional_template__$D = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Notice = normalizeComponent_1(
                { render: __vue_render__$D, staticRenderFns: __vue_staticRenderFns__$D },
                __vue_inject_styles__$D,
                __vue_script__$w,
                __vue_scope_id__$D,
                __vue_is_functional_template__$D,
                __vue_module_identifier__$D,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$x = {
              data: function data() {
                return {
                  percent: 0
                }
              },
              methods: {
                add: function add() {
                  if (this.percent >= 100) {
                    return false;
                  }
                  this.percent += 10;
                },
                minus: function minus() {
                  if (this.percent <= 0) {
                    return false;
                  }
                  this.percent -= 10;
                }
              }
            };

            /* script */
            var __vue_script__$x = script$x;

            /* template */
            var __vue_render__$E = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Progress 进度条")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "处在不同状态下的进度条，当 percent 为 100 时，自动将状态置为 success。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("Progress", { attrs: { percent: 25 } }),
                  _vm._v(" "),
                  _c("Progress", { attrs: { percent: 45, status: "active" } }),
                  _vm._v(" "),
                  _c("Progress", { attrs: { percent: 65, status: "wrong" } }),
                  _vm._v(" "),
                  _c("Progress", { attrs: { percent: 100 } }),
                  _vm._v(" "),
                  _c("Progress", { attrs: { percent: 25, "hide-info": "" } }),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("设置属性 vertical 将以垂直方向显示。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticStyle: { height: "100px" } },
                    [
                      _c("Progress", { attrs: { vertical: "", percent: 25 } }),
                      _vm._v(" "),
                      _c("Progress", {
                        attrs: { vertical: "", percent: 45, status: "active" }
                      }),
                      _vm._v(" "),
                      _c("Progress", {
                        attrs: { vertical: "", percent: 65, status: "wrong" }
                      }),
                      _vm._v(" "),
                      _c("Progress", { attrs: { vertical: "", percent: 100 } }),
                      _vm._v(" "),
                      _c("Progress", {
                        attrs: { vertical: "", percent: 25, "hide-info": "" }
                      })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("配合外部组件使用")
                  ]),
                  _vm._v(" "),
                  _c("Progress", { attrs: { percent: _vm.percent } }),
                  _vm._v(" "),
                  _c(
                    "ButtonGroup",
                    { attrs: { size: "large" } },
                    [
                      _c("Button", {
                        attrs: { icon: "ios-plus-empty" },
                        on: { click: _vm.add }
                      }),
                      _vm._v(" "),
                      _c("Button", {
                        attrs: { icon: "ios-minus-empty" },
                        on: { click: _vm.minus }
                      })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过自定义slot和属性stroke-width改变进度条效果")
                  ]),
                  _vm._v(" "),
                  _c("Progress", { attrs: { percent: 25, "stroke-width": 5 } }),
                  _vm._v(" "),
                  _c(
                    "Progress",
                    { attrs: { percent: 100 } },
                    [
                      _c("Icon", { attrs: { type: "checkmark-circled" } }),
                      _vm._v(" "),
                      _c("span", [_vm._v("成功")])
                    ],
                    1
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$E = [];
            __vue_render__$E._withStripped = true;

              /* style */
              var __vue_inject_styles__$E = undefined;
              /* scoped */
              var __vue_scope_id__$E = undefined;
              /* module identifier */
              var __vue_module_identifier__$E = undefined;
              /* functional template */
              var __vue_is_functional_template__$E = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Progress = normalizeComponent_1(
                { render: __vue_render__$E, staticRenderFns: __vue_staticRenderFns__$E },
                __vue_inject_styles__$E,
                __vue_script__$x,
                __vue_scope_id__$E,
                __vue_is_functional_template__$E,
                __vue_module_identifier__$E,
                undefined,
                undefined
              );

            /* script */

            /* template */
            var __vue_render__$F = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div")
            };
            var __vue_staticRenderFns__$F = [];
            __vue_render__$F._withStripped = true;

              /* style */
              var __vue_inject_styles__$F = undefined;
              /* scoped */
              var __vue_scope_id__$F = undefined;
              /* module identifier */
              var __vue_module_identifier__$F = undefined;
              /* functional template */
              var __vue_is_functional_template__$F = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Tag = normalizeComponent_1(
                { render: __vue_render__$F, staticRenderFns: __vue_staticRenderFns__$F },
                __vue_inject_styles__$F,
                {},
                __vue_scope_id__$F,
                __vue_is_functional_template__$F,
                __vue_module_identifier__$F,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$y = {
                
            };

            var css$r = ".time[data-v-94df4936]{font-size:14px;font-weight:700}.content[data-v-94df4936]{padding-left:5px}";
            styleInject(css$r);

            /* script */
            var __vue_script__$y = script$y;
            /* template */
            var __vue_render__$G = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Timeline 时间轴")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("最简单定义一个时间轴的用法。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Timeline",
                    [
                      _c("TimelineItem", [
                        _c("p", { staticClass: "time" }, [_vm._v("1976年")]),
                        _vm._v(" "),
                        _c("p", { staticClass: "content" }, [_vm._v("Apple I 问世")])
                      ]),
                      _vm._v(" "),
                      _c("TimelineItem", [
                        _c("p", { staticClass: "time" }, [_vm._v("1984年")]),
                        _vm._v(" "),
                        _c("p", { staticClass: "content" }, [_vm._v("发布 Macintosh")])
                      ]),
                      _vm._v(" "),
                      _c("TimelineItem", [
                        _c("p", { staticClass: "time" }, [_vm._v("2007年")]),
                        _vm._v(" "),
                        _c("p", { staticClass: "content" }, [_vm._v("发布 iPhone")])
                      ]),
                      _vm._v(" "),
                      _c("TimelineItem", [
                        _c("p", { staticClass: "time" }, [_vm._v("2010年")]),
                        _vm._v(" "),
                        _c("p", { staticClass: "content" }, [_vm._v("发布 iPad")])
                      ]),
                      _vm._v(" "),
                      _c("TimelineItem", [
                        _c("p", { staticClass: "time" }, [_vm._v("2011年10月5日")]),
                        _vm._v(" "),
                        _c("p", { staticClass: "content" }, [_vm._v("史蒂夫·乔布斯去世")])
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "用各种颜色来标识不同状态，可以使用green、red、blue或自定义的颜色，默认是 blue 。"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Timeline",
                    [
                      _c("TimelineItem", { attrs: { color: "green" } }, [
                        _vm._v("发布1.0版本")
                      ]),
                      _vm._v(" "),
                      _c("TimelineItem", { attrs: { color: "green" } }, [
                        _vm._v("发布2.0版本")
                      ]),
                      _vm._v(" "),
                      _c("TimelineItem", { attrs: { color: "red" } }, [_vm._v("严重故障")]),
                      _vm._v(" "),
                      _c("TimelineItem", { attrs: { color: "blue" } }, [
                        _vm._v("发布3.0版本")
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过添加pending属性来标记最后一个为幽灵节点，标识还未完成。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Timeline",
                    { attrs: { pending: "" } },
                    [
                      _c("TimelineItem", [_vm._v("发布1.0版本")]),
                      _vm._v(" "),
                      _c("TimelineItem", [_vm._v("发布2.0版本")]),
                      _vm._v(" "),
                      _c("TimelineItem", [_vm._v("发布3.0版本")]),
                      _vm._v(" "),
                      _c("TimelineItem", [
                        _c("a", { attrs: { href: "#" } }, [_vm._v("查看更多")])
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("接受一个 slot 来自定义轴点的内容，比如一个图标。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Timeline",
                    [
                      _c(
                        "TimelineItem",
                        { attrs: { color: "green" } },
                        [
                          _c("Icon", {
                            attrs: { slot: "dot", type: "trophy" },
                            slot: "dot"
                          }),
                          _vm._v(" "),
                          _c("span", [_vm._v("发布里程碑版本")])
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("TimelineItem", [_vm._v("发布1.0版本")]),
                      _vm._v(" "),
                      _c("TimelineItem", [_vm._v("发布2.0版本")]),
                      _vm._v(" "),
                      _c("TimelineItem", [_vm._v("发布3.0版本")])
                    ],
                    1
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$G = [];
            __vue_render__$G._withStripped = true;

              /* style */
              var __vue_inject_styles__$G = undefined;
              /* scoped */
              var __vue_scope_id__$G = "data-v-94df4936";
              /* module identifier */
              var __vue_module_identifier__$G = undefined;
              /* functional template */
              var __vue_is_functional_template__$G = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Timeline = normalizeComponent_1(
                { render: __vue_render__$G, staticRenderFns: __vue_staticRenderFns__$G },
                __vue_inject_styles__$G,
                __vue_script__$y,
                __vue_scope_id__$G,
                __vue_is_functional_template__$G,
                __vue_module_identifier__$G,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$z = {
              data: function data() {
                return {
                  value1: "1",
                  value2: "2",
                  value3: "1",
                  value4: "1-1"
                }
              }
            };

            /* script */
            var __vue_script__$z = script$z;

            /* template */
            var __vue_render__$H = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Collapse 折叠面板")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("默认可以同时展开多个面板，可以设置默认展开第几个")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Collapse",
                    {
                      model: {
                        value: _vm.value1,
                        callback: function($$v) {
                          _vm.value1 = $$v;
                        },
                        expression: "value1"
                      }
                    },
                    [
                      _c("Panel", { attrs: { name: "1" } }, [
                        _vm._v("史蒂夫·乔布斯\n      "),
                        _c("p", { attrs: { slot: "content" }, slot: "content" }, [
                          _vm._v(
                            "史蒂夫·乔布斯（Steve Jobs），1955年2月24日生于美国加利福尼亚州旧金山，美国发明家、企业家、美国苹果公司联合创办人。"
                          )
                        ])
                      ]),
                      _vm._v(" "),
                      _c("Panel", { attrs: { name: "2" } }, [
                        _vm._v("斯蒂夫·盖瑞·沃兹尼亚克\n      "),
                        _c("p", { attrs: { slot: "content" }, slot: "content" }, [
                          _vm._v(
                            "斯蒂夫·盖瑞·沃兹尼亚克（Stephen Gary Wozniak），美国电脑工程师，曾与史蒂夫·乔布斯合伙创立苹果电脑（今之苹果公司）。斯蒂夫·盖瑞·沃兹尼亚克曾就读于美国科罗拉多大学，后转学入美国著名高等学府加州大学伯克利分校（UC Berkeley）并获得电机工程及计算机（EECS）本科学位（1987年）。"
                          )
                        ])
                      ]),
                      _vm._v(" "),
                      _c("Panel", { attrs: { name: "3" } }, [
                        _vm._v("乔纳森·伊夫\n      "),
                        _c("p", { attrs: { slot: "content" }, slot: "content" }, [
                          _vm._v(
                            "乔纳森·伊夫是一位工业设计师，现任Apple公司设计师兼资深副总裁，英国爵士。他曾参与设计了iPod，iMac，iPhone，iPad等众多苹果产品。除了乔布斯，他是对苹果那些著名的产品最有影响力的人。"
                          )
                        ])
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("通过设置属性accordion开启手风琴模式，每次只能打开一个面板。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Collapse",
                    {
                      attrs: { accordion: "" },
                      model: {
                        value: _vm.value2,
                        callback: function($$v) {
                          _vm.value2 = $$v;
                        },
                        expression: "value2"
                      }
                    },
                    [
                      _c("Panel", { attrs: { name: "1" } }, [
                        _vm._v("史蒂夫·乔布斯\n      "),
                        _c("p", { attrs: { slot: "content" }, slot: "content" }, [
                          _vm._v(
                            "史蒂夫·乔布斯（Steve Jobs），1955年2月24日生于美国加利福尼亚州旧金山，美国发明家、企业家、美国苹果公司联合创办人。"
                          )
                        ])
                      ]),
                      _vm._v(" "),
                      _c("Panel", { attrs: { name: "2" } }, [
                        _vm._v("斯蒂夫·盖瑞·沃兹尼亚克\n      "),
                        _c("p", { attrs: { slot: "content" }, slot: "content" }, [
                          _vm._v(
                            "斯蒂夫·盖瑞·沃兹尼亚克（Stephen Gary Wozniak），美国电脑工程师，曾与史蒂夫·乔布斯合伙创立苹果电脑（今之苹果公司）。斯蒂夫·盖瑞·沃兹尼亚克曾就读于美国科罗拉多大学，后转学入美国著名高等学府加州大学伯克利分校（UC Berkeley）并获得电机工程及计算机（EECS）本科学位（1987年）。"
                          )
                        ])
                      ]),
                      _vm._v(" "),
                      _c("Panel", { attrs: { name: "3" } }, [
                        _vm._v("乔纳森·伊夫\n      "),
                        _c("p", { attrs: { slot: "content" }, slot: "content" }, [
                          _vm._v(
                            "乔纳森·伊夫是一位工业设计师，现任Apple公司设计师兼资深副总裁，英国爵士。他曾参与设计了iPod，iMac，iPhone，iPad等众多苹果产品。除了乔布斯，他是对苹果那些著名的产品最有影响力的人。"
                          )
                        ])
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("折叠面板可以进行嵌套。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Collapse",
                    {
                      attrs: { accordion: "" },
                      model: {
                        value: _vm.value3,
                        callback: function($$v) {
                          _vm.value3 = $$v;
                        },
                        expression: "value3"
                      }
                    },
                    [
                      _c("Panel", { attrs: { name: "1" } }, [
                        _vm._v("史蒂夫·乔布斯\n      "),
                        _c(
                          "div",
                          { attrs: { slot: "content" }, slot: "content" },
                          [
                            _vm._v(
                              "史蒂夫·乔布斯（Steve Jobs），1955年2月24日生于美国加利福尼亚州旧金山，美国发明家、企业家、美国苹果公司联合创办人。\n        "
                            ),
                            _c(
                              "Collapse",
                              {
                                attrs: { accordion: "" },
                                model: {
                                  value: _vm.value4,
                                  callback: function($$v) {
                                    _vm.value4 = $$v;
                                  },
                                  expression: "value4"
                                }
                              },
                              [
                                _c("Panel", { attrs: { name: "1-1" } }, [
                                  _vm._v("iPhone\n            "),
                                  _c("p", { attrs: { slot: "content" }, slot: "content" }, [
                                    _vm._v(
                                      "iPhone，是美国苹果公司研发的智能手机，它搭载iOS操作系统。第一代iPhone于2007年1月9日由苹果公司前首席执行官史蒂夫·乔布斯发布，并在2007年6月29日正式发售。"
                                    )
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("Panel", { attrs: { name: "1-2" } }, [
                                  _vm._v("iPad\n            "),
                                  _c("p", { attrs: { slot: "content" }, slot: "content" }, [
                                    _vm._v(
                                      "iPad是由苹果公司于2010年开始发布的平板电脑系列，定位介于苹果的智能手机iPhone和笔记本电脑产品之间，（屏幕中有4个虚拟程序固定栏）与iPhone布局一样，提供浏览网站、收发电子邮件、观看电子书、播放音频或视频、玩游戏等功能。由英国出生的设计主管乔纳森·伊夫（Jonathan Ive）（有些翻译为 乔纳森·艾维）领导的团队设计的，这个圆滑、超薄的产品反映出了伊夫对德国天才设计师Dieter Rams的崇敬之情。"
                                    )
                                  ])
                                ])
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c("Panel", { attrs: { name: "2" } }, [
                        _vm._v("斯蒂夫·盖瑞·沃兹尼亚克\n      "),
                        _c("p", { attrs: { slot: "content" }, slot: "content" }, [
                          _vm._v(
                            "斯蒂夫·盖瑞·沃兹尼亚克（Stephen Gary Wozniak），美国电脑工程师，曾与史蒂夫·乔布斯合伙创立苹果电脑（今之苹果公司）。斯蒂夫·盖瑞·沃兹尼亚克曾就读于美国科罗拉多大学，后转学入美国著名高等学府加州大学伯克利分校（UC Berkeley）并获得电机工程及计算机（EECS）本科学位（1987年）。"
                          )
                        ])
                      ]),
                      _vm._v(" "),
                      _c("Panel", { attrs: { name: "3" } }, [
                        _vm._v("乔纳森·伊夫\n      "),
                        _c("p", { attrs: { slot: "content" }, slot: "content" }, [
                          _vm._v(
                            "乔纳森·伊夫是一位工业设计师，现任Apple公司设计师兼资深副总裁，英国爵士。他曾参与设计了iPod，iMac，iPhone，iPad等众多苹果产品。除了乔布斯，他是对苹果那些著名的产品最有影响力的人。"
                          )
                        ])
                      ])
                    ],
                    1
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$H = [];
            __vue_render__$H._withStripped = true;

              /* style */
              var __vue_inject_styles__$H = undefined;
              /* scoped */
              var __vue_scope_id__$H = undefined;
              /* module identifier */
              var __vue_module_identifier__$H = undefined;
              /* functional template */
              var __vue_is_functional_template__$H = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Collapse = normalizeComponent_1(
                { render: __vue_render__$H, staticRenderFns: __vue_staticRenderFns__$H },
                __vue_inject_styles__$H,
                __vue_script__$z,
                __vue_scope_id__$H,
                __vue_is_functional_template__$H,
                __vue_module_identifier__$H,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$A = {
              data: function data() {
                return {
                  modal1: false,
                  modal2: false,
                  modal_loading: false,
                  modal3: false,
                  modal4: false,
                  modal5: false,
                  modal6: false,
                  loading: true,
                  modal7: false,
                  modal8: false
                };
              },
              methods: {
                ok: function ok() {
                  this.$Message.info("Clicked ok");
                },
                cancel: function cancel() {
                  this.$Message.info("Clicked cancel");
                },
                del: function del() {
                  var this$1 = this;

                  this.modal_loading = true;
                  setTimeout(function () {
                    this$1.modal_loading = false;
                    this$1.modal2 = false;
                    this$1.$Message.success("Successfully delete");
                  }, 2000);
                },
                asyncOK: function asyncOK() {
                  var this$1 = this;

                  setTimeout(function () {
                    this$1.modal6 = false;
                  }, 2000);
                },
                instance: function instance(type) {
                  var this$1 = this;

                  var title = "对话框的标题";
                  var content =
                    "<p>一些对话框内容</p><p>一些对话框内容</p><p>一些对话框内容</p>";
                  switch (type) {
                    case "info":
                      this.$Modal.info({
                        title: title,
                        content: content
                      });
                      break;
                    case "success":
                      this.$Modal.success({
                        title: title,
                        content: content
                      });
                      break;
                    case "warning":
                      this.$Modal.warning({
                        title: title,
                        content: content
                      });
                      break;
                    case "error":
                      this.$Modal.error({
                        title: title,
                        content: content
                      });
                      break;
                    case "confirm":
                      this.$Modal.confirm({
                        title: title,
                        content: content,
                        onOk: function () {
                          this$1.$Message.info("Clicked ok");
                        },
                        onCancel: function () {
                          this$1.$Message.info("Clicked cancel");
                        }
                      });
                      break;
                  }
                },
                custom: function custom() {
                  this.$Modal.confirm({
                    title: "Title",
                    content: "<p>Content of dialog</p><p>Content of dialog</p>",
                    okText: "OK",
                    cancelText: "Cancel"
                  });
                },
                async: function async() {
                  var this$1 = this;

                  this.$Modal.confirm({
                    title: "Title",
                    content: "<p>The dialog box will be closed after 2 seconds</p>",
                    loading: true,
                    onOk: function () {
                      setTimeout(function () {
                        this$1.$Modal.remove();
                        this$1.$Message.info("Asynchronously close the dialog box");
                      }, 2000);
                    }
                  });
                }
              }
            };

            /* script */
            var __vue_script__$A = script$A;

            /* template */
            var __vue_render__$I = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Modal 对话框")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "最简单的使用方法，通过控制属性visible来显示 / 隐藏对话框。可以使用 v-model 实现双向绑定。"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      attrs: { type: "primary" },
                      on: {
                        click: function($event) {
                          _vm.modal1 = true;
                        }
                      }
                    },
                    [_vm._v("显示对话框")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Modal",
                    {
                      attrs: { middle: "", title: "普通的Modal对话框标题" },
                      on: { "on-ok": _vm.ok, "on-cancel": _vm.cancel },
                      model: {
                        value: _vm.modal1,
                        callback: function($$v) {
                          _vm.modal1 = $$v;
                        },
                        expression: "modal1"
                      }
                    },
                    [
                      _c("p", [_vm._v("对话框内容")]),
                      _vm._v(" "),
                      _c("p", [_vm._v("对话框内容")]),
                      _vm._v(" "),
                      _c("p", [_vm._v("对话框内容")])
                    ]
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "\n    Modal 组件提供了灵活的自定义样式 API 和 Slot，可以自由控制整个 Modal 的各个组成部分，\n    比如页头、页脚、关闭按钮。通过和其它组件的交互，能实现更复杂的功能，满足了大多业务场景。。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          _vm.modal2 = true;
                        }
                      }
                    },
                    [_vm._v("Custom header and footer")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Modal",
                    {
                      attrs: { width: "360" },
                      model: {
                        value: _vm.modal2,
                        callback: function($$v) {
                          _vm.modal2 = $$v;
                        },
                        expression: "modal2"
                      }
                    },
                    [
                      _c(
                        "p",
                        {
                          staticStyle: { color: "#f60", "text-align": "center" },
                          attrs: { slot: "header" },
                          slot: "header"
                        },
                        [
                          _c("Icon", { attrs: { type: "information-circled" } }),
                          _vm._v(" "),
                          _c("span", [_vm._v("删除确认")])
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("div", { staticStyle: { "text-align": "center" } }, [
                        _c("p", [_vm._v("此任务删除后，下游 10 个任务将无法执行。")]),
                        _vm._v(" "),
                        _c("p", [_vm._v("是否继续删除？")])
                      ]),
                      _vm._v(" "),
                      _c(
                        "div",
                        { attrs: { slot: "footer" }, slot: "footer" },
                        [
                          _c(
                            "Button",
                            {
                              attrs: {
                                type: "error",
                                size: "large",
                                long: "",
                                loading: _vm.modal_loading
                              },
                              on: { click: _vm.del }
                            },
                            [_vm._v("Delete")]
                          )
                        ],
                        1
                      )
                    ]
                  ),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          _vm.modal3 = true;
                        }
                      }
                    },
                    [_vm._v("No title bar")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Modal",
                    {
                      model: {
                        value: _vm.modal3,
                        callback: function($$v) {
                          _vm.modal3 = $$v;
                        },
                        expression: "modal3"
                      }
                    },
                    [
                      _c("p", [_vm._v("Content of dialog")]),
                      _vm._v(" "),
                      _c("p", [_vm._v("Content of dialog")]),
                      _vm._v(" "),
                      _c("p", [_vm._v("Content of dialog")])
                    ]
                  ),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          _vm.modal4 = true;
                        }
                      }
                    },
                    [_vm._v("Internationalization")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Modal",
                    {
                      attrs: {
                        title: "Modal Title",
                        "ok-text": "OK",
                        "cancel-text": "Cancel"
                      },
                      model: {
                        value: _vm.modal4,
                        callback: function($$v) {
                          _vm.modal4 = $$v;
                        },
                        expression: "modal4"
                      }
                    },
                    [
                      _c("p", [_vm._v("Something...")]),
                      _vm._v(" "),
                      _c("p", [_vm._v("Something...")]),
                      _vm._v(" "),
                      _c("p", [_vm._v("Something...")])
                    ]
                  ),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          _vm.modal5 = true;
                        }
                      }
                    },
                    [_vm._v("Set the width")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Modal",
                    {
                      attrs: { title: "Custom width", width: "300" },
                      model: {
                        value: _vm.modal5,
                        callback: function($$v) {
                          _vm.modal5 = $$v;
                        },
                        expression: "modal5"
                      }
                    },
                    [
                      _c("p", [_vm._v("Customize width, unit px, default 520px.")]),
                      _vm._v(" "),
                      _c("p", [
                        _vm._v(
                          "\n      The width of the dialog box is responsive, and the width becomes\n      "
                        ),
                        _c("code", [_vm._v("auto")]),
                        _vm._v(" when the screen size is less than 768px.\n    ")
                      ])
                    ]
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "\n    给Modal添加属性loading后，点击确定按钮对话框不会自动消失，\n    并显示 loading 状态，需要手动关闭对话框，常用于表单提交。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      attrs: { type: "primary" },
                      on: {
                        click: function($event) {
                          _vm.modal6 = true;
                        }
                      }
                    },
                    [_vm._v("Display dialog box")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Modal",
                    {
                      attrs: { title: "Title", loading: _vm.loading },
                      on: { "on-ok": _vm.asyncOK },
                      model: {
                        value: _vm.modal6,
                        callback: function($$v) {
                          _vm.modal6 = $$v;
                        },
                        expression: "modal6"
                      }
                    },
                    [
                      _c("p", [
                        _vm._v(
                          "After you click ok, the dialog box will close in 2 seconds."
                        )
                      ])
                    ]
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("可以禁用关闭和遮罩层关闭")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          _vm.modal7 = true;
                        }
                      }
                    },
                    [_vm._v("Disable upper right corner (including Esc key)")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Modal",
                    {
                      attrs: { title: "Title", closable: false },
                      model: {
                        value: _vm.modal7,
                        callback: function($$v) {
                          _vm.modal7 = $$v;
                        },
                        expression: "modal7"
                      }
                    },
                    [
                      _c("p", [_vm._v("Content of dialog")]),
                      _vm._v(" "),
                      _c("p", [_vm._v("Content of dialog")]),
                      _vm._v(" "),
                      _c("p", [_vm._v("Content of dialog")])
                    ]
                  ),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          _vm.modal8 = true;
                        }
                      }
                    },
                    [_vm._v("Disable mask layer closure")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Modal",
                    {
                      attrs: { title: "Title", "mask-closable": false },
                      model: {
                        value: _vm.modal8,
                        callback: function($$v) {
                          _vm.modal8 = $$v;
                        },
                        expression: "modal8"
                      }
                    },
                    [
                      _c("p", [_vm._v("Content of dialog")]),
                      _vm._v(" "),
                      _c("p", [_vm._v("Content of dialog")]),
                      _vm._v(" "),
                      _c("p", [_vm._v("Content of dialog")])
                    ]
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "\n    除了上述通过标准组件的使用方法，我还精心封装了一些实例方法，用来创建一次性的轻量级对话框。\n    实例以隐式创建 Vue 组件的方式在全局创建一个对话框，并在消失时移除，所以同时只能操作一个对话框。\n  "
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          return _vm.instance("info")
                        }
                      }
                    },
                    [_vm._v("Info")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          return _vm.instance("success")
                        }
                      }
                    },
                    [_vm._v("Success")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          return _vm.instance("warning")
                        }
                      }
                    },
                    [_vm._v("Warning")]
                  ),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          return _vm.instance("error")
                        }
                      }
                    },
                    [_vm._v("Error")]
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("快速弹出确认对话框，并且可以自定义按钮文字及异步关闭。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Button",
                    {
                      on: {
                        click: function($event) {
                          return _vm.instance("confirm")
                        }
                      }
                    },
                    [_vm._v("Confirm")]
                  ),
                  _vm._v(" "),
                  _c("Button", { on: { click: _vm.custom } }, [
                    _vm._v("Custom button text")
                  ]),
                  _vm._v(" "),
                  _c("Button", { on: { click: _vm.async } }, [
                    _vm._v("Asynchronous closing")
                  ])
                ],
                1
              )
            };
            var __vue_staticRenderFns__$I = [];
            __vue_render__$I._withStripped = true;

              /* style */
              var __vue_inject_styles__$I = undefined;
              /* scoped */
              var __vue_scope_id__$I = undefined;
              /* module identifier */
              var __vue_module_identifier__$I = undefined;
              /* functional template */
              var __vue_is_functional_template__$I = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Modal = normalizeComponent_1(
                { render: __vue_render__$I, staticRenderFns: __vue_staticRenderFns__$I },
                __vue_inject_styles__$I,
                __vue_script__$A,
                __vue_scope_id__$I,
                __vue_is_functional_template__$I,
                __vue_module_identifier__$I,
                undefined,
                undefined
              );

            /* script */

            /* template */
            var __vue_render__$J = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                [
                  _c("div", { staticClass: "page-title" }, [_vm._v("Breadcrumb 面包屑")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "显示网站的层级结构，告知用户当前所在位置，以及在需要向上级导航时使用。"
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("最基础的用法，通过设置to属性添加链接。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Breadcrumb",
                    [
                      _c("BreadcrumbItem", { attrs: { to: "/" } }, [_vm._v("Home")]),
                      _vm._v(" "),
                      _c("BreadcrumbItem", { attrs: { to: "/samples/Breadcrumb" } }, [
                        _vm._v("Components")
                      ]),
                      _vm._v(" "),
                      _c("BreadcrumbItem", [_vm._v("Breadcrumb")])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v("可自定义每项的内容，比如带有一个图标。")
                  ]),
                  _vm._v(" "),
                  _c(
                    "Breadcrumb",
                    [
                      _c(
                        "BreadcrumbItem",
                        { attrs: { to: "/" } },
                        [
                          _c("Icon", { attrs: { type: "ios-home-outline" } }),
                          _vm._v("Home\n    ")
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "BreadcrumbItem",
                        { attrs: { to: "/samples/Breadcrumb" } },
                        [
                          _c("Icon", { attrs: { type: "social-buffer-outline" } }),
                          _vm._v("Components\n    ")
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "BreadcrumbItem",
                        [
                          _c("Icon", { attrs: { type: "pound" } }),
                          _vm._v("Breadcrumb\n    ")
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "page-sub-title" }, [
                    _vm._v(
                      "通过设置separator属性来自定义分隔符，比如 > ，也可以接受自定义的HTML字符串"
                    )
                  ]),
                  _vm._v(" "),
                  _c(
                    "Breadcrumb",
                    { attrs: { separator: ">" } },
                    [
                      _c("BreadcrumbItem", { attrs: { to: "/" } }, [_vm._v("Home")]),
                      _vm._v(" "),
                      _c("BreadcrumbItem", { attrs: { to: "/samples/Breadcrumb" } }, [
                        _vm._v("Components")
                      ]),
                      _vm._v(" "),
                      _c("BreadcrumbItem", [_vm._v("Breadcrumb")])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "Breadcrumb",
                    {
                      attrs: {
                        separator: "<b style='color: #ff5500;padding: 0 5px;'>=></b>"
                      }
                    },
                    [
                      _c("BreadcrumbItem", { attrs: { to: "/" } }, [_vm._v("Home")]),
                      _vm._v(" "),
                      _c("BreadcrumbItem", { attrs: { to: "/samples/Breadcrumb" } }, [
                        _vm._v("Components")
                      ]),
                      _vm._v(" "),
                      _c("BreadcrumbItem", [_vm._v("Breadcrumb")])
                    ],
                    1
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$J = [];
            __vue_render__$J._withStripped = true;

              /* style */
              var __vue_inject_styles__$J = undefined;
              /* scoped */
              var __vue_scope_id__$J = undefined;
              /* module identifier */
              var __vue_module_identifier__$J = undefined;
              /* functional template */
              var __vue_is_functional_template__$J = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Breadcrumb = normalizeComponent_1(
                { render: __vue_render__$J, staticRenderFns: __vue_staticRenderFns__$J },
                __vue_inject_styles__$J,
                {},
                __vue_scope_id__$J,
                __vue_is_functional_template__$J,
                __vue_module_identifier__$J,
                undefined,
                undefined
              );

            Vue.use(VueRouter);

            var routeComponents = {
              Icon: Icon,
              Avatar: Avatar,
              Card: Card,
              Alert: Alert,


              DatePicker: DatePicker,
              TimePicker: TimePicker,
              AutoComplete: AutoComplete,
              Form: Form,
              Slider: Slider,
              Table: Table,
              Tree: Tree,
              Poptip: Poptip,
              Tooltip: Tooltip,
              Menu: Menu,
              Dropdown: Dropdown,
              Page: Page,
              LoadingBar: LoadingBar,
              Affix: Affix,
              Scroll: Scroll,
              ICircle: ICircle,
              Steps: Steps,
              Select: Select,
              InputNumber: InputNumber,
              Rate: Rate,
              Transfer: Transfer,
              Spin: Spin,
              Tabs: Tabs,
              Switch: Switch,
              Radio: Radio,
              Grid: Grid,
              Layout: Layout,
              Swiper: Swiper,
              BackTop: BackTop,
              Badge: Badge,
              Button: Button,
              Checkbox: Checkbox,
              Input: Input,
              Message: Message,
              Notice: Notice,
              Progress: Progress,
              Tag: Tag,
              Timeline: Timeline,
              Collapse: Collapse,
              Modal: Modal,
              Breadcrumb: Breadcrumb
            };

            var router = new VueRouter({
              routes: [
                { path: '/', redirect: '/samples' },
                {
                  path: '/samples',
                  component: HomeRouter,
                  children: [
                    { path: '', redirect: Object.keys(routeComponents)[0] } ].concat( Object.keys(routeComponents).map(function (_) {
                      return {
                        path: _, name: _, component: routeComponents[_]
                      }
                    })
                  )
                }
              ]
            });

            //
            var script$B = {
              data: function data() {
                return {
                  routeComponents: routeComponents
                }
              }
            };

            var css$s = ".com-sidebar-nav{padding-bottom:30px}.com-sidebar-nav .title{padding:0 12px;line-height:48px;font-size:15px;color:#1c2438;font-weight:700}.com-sidebar-nav ul li{list-style:none;line-height:36px}.com-sidebar-nav ul li a{display:block;padding:0 12px;font-size:14px}.com-sidebar-nav ul li a:hover{background-color:#f7f7f7}.com-sidebar-nav ul li a.router-link-active{background-color:#2d8cf0;color:#fff}";
            styleInject(css$s);

            /* script */
            var __vue_script__$B = script$B;
            /* template */
            var __vue_render__$K = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { staticClass: "com-sidebar-nav" }, [
                _c("div", { staticClass: "title" }, [_vm._v("VueUI-Widgets 组件列表")]),
                _vm._v(" "),
                _c(
                  "ul",
                  _vm._l(_vm.routeComponents, function(value, key) {
                    return _c(
                      "li",
                      { key: key },
                      [_c("router-link", { attrs: { to: key } }, [_vm._v(_vm._s(key))])],
                      1
                    )
                  }),
                  0
                )
              ])
            };
            var __vue_staticRenderFns__$K = [];
            __vue_render__$K._withStripped = true;

              /* style */
              var __vue_inject_styles__$K = undefined;
              /* scoped */
              var __vue_scope_id__$K = undefined;
              /* module identifier */
              var __vue_module_identifier__$K = undefined;
              /* functional template */
              var __vue_is_functional_template__$K = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var SidebarNav = normalizeComponent_1(
                { render: __vue_render__$K, staticRenderFns: __vue_staticRenderFns__$K },
                __vue_inject_styles__$K,
                __vue_script__$B,
                __vue_scope_id__$K,
                __vue_is_functional_template__$K,
                __vue_module_identifier__$K,
                undefined,
                undefined
              );

            //
            var script$C = {
              components: { SidebarNav: SidebarNav }
            };

            var css$t = "#app{padding:30px 0 30px 220px}p{font-size:14px}.page-title{margin-bottom:30px;font-size:24px;font-weight:700}.page-sub-title{margin:24px 0;font-size:18px;font-weight:700}.com-sidebar-nav{position:fixed;top:0;bottom:0;left:0;width:220px;min-width:220px;background-color:#fff;border-right:1px solid #f2f2f2;overflow:auto}.app-content-wrapper{padding:0 16px}";
            styleInject(css$t);

            /* script */
            var __vue_script__$C = script$C;
            /* template */
            var __vue_render__$L = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { attrs: { id: "app" } },
                [
                  _c("SidebarNav"),
                  _vm._v(" "),
                  _c("div", { staticClass: "app-content-wrapper" }, [_c("router-view")], 1)
                ],
                1
              )
            };
            var __vue_staticRenderFns__$L = [];
            __vue_render__$L._withStripped = true;

              /* style */
              var __vue_inject_styles__$L = undefined;
              /* scoped */
              var __vue_scope_id__$L = undefined;
              /* module identifier */
              var __vue_module_identifier__$L = undefined;
              /* functional template */
              var __vue_is_functional_template__$L = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var App = normalizeComponent_1(
                { render: __vue_render__$L, staticRenderFns: __vue_staticRenderFns__$L },
                __vue_inject_styles__$L,
                __vue_script__$C,
                __vue_scope_id__$L,
                __vue_is_functional_template__$L,
                __vue_module_identifier__$L,
                undefined,
                undefined
              );

            var css$u = "@charset \"UTF-8\";\r\n/*!\r\n  Ionicons, v2.0.1\r\n  Created by Ben Sperry for the Ionic Framework, http://ionicons.com/\r\n  https://twitter.com/benjsperry  https://twitter.com/ionicframework\r\n  MIT License: https://github.com/driftyco/ionicons\r\n\r\n  Android-style icons originally built by Google’s\r\n  Material Design Icons: https://github.com/google/material-design-icons\r\n  used under CC BY http://creativecommons.org/licenses/by/4.0/\r\n  Modified icons to fit ionicon’s grid from original.\r\n*/@font-face{font-family:Ionicons;src:url(../fonts/ionicons.eot?v=2.0.1);src:url(../fonts/ionicons.eot?v=2.0.1#iefix) format(\"embedded-opentype\"),url(../fonts/ionicons.ttf?v=2.0.1) format(\"truetype\"),url(../fonts/ionicons.woff?v=2.0.1) format(\"woff\");font-weight:400;font-style:normal}.ion-alert:before{content:\"\\f101\"}.ion-alert-circled:before{content:\"\\f100\"}.ion-android-add:before{content:\"\\f2c7\"}.ion-android-add-circle:before{content:\"\\f359\"}.ion-android-alarm-clock:before{content:\"\\f35a\"}.ion-android-alert:before{content:\"\\f35b\"}.ion-android-apps:before{content:\"\\f35c\"}.ion-android-archive:before{content:\"\\f2c9\"}.ion-android-arrow-back:before{content:\"\\f2ca\"}.ion-android-arrow-down:before{content:\"\\f35d\"}.ion-android-arrow-dropdown:before{content:\"\\f35f\"}.ion-android-arrow-dropdown-circle:before{content:\"\\f35e\"}.ion-android-arrow-dropleft:before{content:\"\\f361\"}.ion-android-arrow-dropleft-circle:before{content:\"\\f360\"}.ion-android-arrow-dropright:before{content:\"\\f363\"}.ion-android-arrow-dropright-circle:before{content:\"\\f362\"}.ion-android-arrow-dropup:before{content:\"\\f365\"}.ion-android-arrow-dropup-circle:before{content:\"\\f364\"}.ion-android-arrow-forward:before{content:\"\\f30f\"}.ion-android-arrow-up:before{content:\"\\f366\"}.ion-android-attach:before{content:\"\\f367\"}.ion-android-bar:before{content:\"\\f368\"}.ion-android-bicycle:before{content:\"\\f369\"}.ion-android-boat:before{content:\"\\f36a\"}.ion-android-bookmark:before{content:\"\\f36b\"}.ion-android-bulb:before{content:\"\\f36c\"}.ion-android-bus:before{content:\"\\f36d\"}.ion-android-calendar:before{content:\"\\f2d1\"}.ion-android-call:before{content:\"\\f2d2\"}.ion-android-camera:before{content:\"\\f2d3\"}.ion-android-cancel:before{content:\"\\f36e\"}.ion-android-car:before{content:\"\\f36f\"}.ion-android-cart:before{content:\"\\f370\"}.ion-android-chat:before{content:\"\\f2d4\"}.ion-android-checkbox:before{content:\"\\f374\"}.ion-android-checkbox-blank:before{content:\"\\f371\"}.ion-android-checkbox-outline:before{content:\"\\f373\"}.ion-android-checkbox-outline-blank:before{content:\"\\f372\"}.ion-android-checkmark-circle:before{content:\"\\f375\"}.ion-android-clipboard:before{content:\"\\f376\"}.ion-android-close:before{content:\"\\f2d7\"}.ion-android-cloud:before{content:\"\\f37a\"}.ion-android-cloud-circle:before{content:\"\\f377\"}.ion-android-cloud-done:before{content:\"\\f378\"}.ion-android-cloud-outline:before{content:\"\\f379\"}.ion-android-color-palette:before{content:\"\\f37b\"}.ion-android-compass:before{content:\"\\f37c\"}.ion-android-contact:before{content:\"\\f2d8\"}.ion-android-contacts:before{content:\"\\f2d9\"}.ion-android-contract:before{content:\"\\f37d\"}.ion-android-create:before{content:\"\\f37e\"}.ion-android-delete:before{content:\"\\f37f\"}.ion-android-desktop:before{content:\"\\f380\"}.ion-android-document:before{content:\"\\f381\"}.ion-android-done:before{content:\"\\f383\"}.ion-android-done-all:before{content:\"\\f382\"}.ion-android-download:before{content:\"\\f2dd\"}.ion-android-drafts:before{content:\"\\f384\"}.ion-android-exit:before{content:\"\\f385\"}.ion-android-expand:before{content:\"\\f386\"}.ion-android-favorite:before{content:\"\\f388\"}.ion-android-favorite-outline:before{content:\"\\f387\"}.ion-android-film:before{content:\"\\f389\"}.ion-android-folder:before{content:\"\\f2e0\"}.ion-android-folder-open:before{content:\"\\f38a\"}.ion-android-funnel:before{content:\"\\f38b\"}.ion-android-globe:before{content:\"\\f38c\"}.ion-android-hand:before{content:\"\\f2e3\"}.ion-android-hangout:before{content:\"\\f38d\"}.ion-android-happy:before{content:\"\\f38e\"}.ion-android-home:before{content:\"\\f38f\"}.ion-android-image:before{content:\"\\f2e4\"}.ion-android-laptop:before{content:\"\\f390\"}.ion-android-list:before{content:\"\\f391\"}.ion-android-locate:before{content:\"\\f2e9\"}.ion-android-lock:before{content:\"\\f392\"}.ion-android-mail:before{content:\"\\f2eb\"}.ion-android-map:before{content:\"\\f393\"}.ion-android-menu:before{content:\"\\f394\"}.ion-android-microphone:before{content:\"\\f2ec\"}.ion-android-microphone-off:before{content:\"\\f395\"}.ion-android-more-horizontal:before{content:\"\\f396\"}.ion-android-more-vertical:before{content:\"\\f397\"}.ion-android-navigate:before{content:\"\\f398\"}.ion-android-notifications:before{content:\"\\f39b\"}.ion-android-notifications-none:before{content:\"\\f399\"}.ion-android-notifications-off:before{content:\"\\f39a\"}.ion-android-open:before{content:\"\\f39c\"}.ion-android-options:before{content:\"\\f39d\"}.ion-android-people:before{content:\"\\f39e\"}.ion-android-person:before{content:\"\\f3a0\"}.ion-android-person-add:before{content:\"\\f39f\"}.ion-android-phone-landscape:before{content:\"\\f3a1\"}.ion-android-phone-portrait:before{content:\"\\f3a2\"}.ion-android-pin:before{content:\"\\f3a3\"}.ion-android-plane:before{content:\"\\f3a4\"}.ion-android-playstore:before{content:\"\\f2f0\"}.ion-android-print:before{content:\"\\f3a5\"}.ion-android-radio-button-off:before{content:\"\\f3a6\"}.ion-android-radio-button-on:before{content:\"\\f3a7\"}.ion-android-refresh:before{content:\"\\f3a8\"}.ion-android-remove:before{content:\"\\f2f4\"}.ion-android-remove-circle:before{content:\"\\f3a9\"}.ion-android-restaurant:before{content:\"\\f3aa\"}.ion-android-sad:before{content:\"\\f3ab\"}.ion-android-search:before{content:\"\\f2f5\"}.ion-android-send:before{content:\"\\f2f6\"}.ion-android-settings:before{content:\"\\f2f7\"}.ion-android-share:before{content:\"\\f2f8\"}.ion-android-share-alt:before{content:\"\\f3ac\"}.ion-android-star:before{content:\"\\f2fc\"}.ion-android-star-half:before{content:\"\\f3ad\"}.ion-android-star-outline:before{content:\"\\f3ae\"}.ion-android-stopwatch:before{content:\"\\f2fd\"}.ion-android-subway:before{content:\"\\f3af\"}.ion-android-sunny:before{content:\"\\f3b0\"}.ion-android-sync:before{content:\"\\f3b1\"}.ion-android-textsms:before{content:\"\\f3b2\"}.ion-android-time:before{content:\"\\f3b3\"}.ion-android-train:before{content:\"\\f3b4\"}.ion-android-unlock:before{content:\"\\f3b5\"}.ion-android-upload:before{content:\"\\f3b6\"}.ion-android-volume-down:before{content:\"\\f3b7\"}.ion-android-volume-mute:before{content:\"\\f3b8\"}.ion-android-volume-off:before{content:\"\\f3b9\"}.ion-android-volume-up:before{content:\"\\f3ba\"}.ion-android-walk:before{content:\"\\f3bb\"}.ion-android-warning:before{content:\"\\f3bc\"}.ion-android-watch:before{content:\"\\f3bd\"}.ion-android-wifi:before{content:\"\\f305\"}.ion-aperture:before{content:\"\\f313\"}.ion-archive:before{content:\"\\f102\"}.ion-arrow-down-a:before{content:\"\\f103\"}.ion-arrow-down-b:before{content:\"\\f104\"}.ion-arrow-down-c:before{content:\"\\f105\"}.ion-arrow-expand:before{content:\"\\f25e\"}.ion-arrow-graph-down-left:before{content:\"\\f25f\"}.ion-arrow-graph-down-right:before{content:\"\\f260\"}.ion-arrow-graph-up-left:before{content:\"\\f261\"}.ion-arrow-graph-up-right:before{content:\"\\f262\"}.ion-arrow-left-a:before{content:\"\\f106\"}.ion-arrow-left-b:before{content:\"\\f107\"}.ion-arrow-left-c:before{content:\"\\f108\"}.ion-arrow-move:before{content:\"\\f263\"}.ion-arrow-resize:before{content:\"\\f264\"}.ion-arrow-return-left:before{content:\"\\f265\"}.ion-arrow-return-right:before{content:\"\\f266\"}.ion-arrow-right-a:before{content:\"\\f109\"}.ion-arrow-right-b:before{content:\"\\f10a\"}.ion-arrow-right-c:before{content:\"\\f10b\"}.ion-arrow-shrink:before{content:\"\\f267\"}.ion-arrow-swap:before{content:\"\\f268\"}.ion-arrow-up-a:before{content:\"\\f10c\"}.ion-arrow-up-b:before{content:\"\\f10d\"}.ion-arrow-up-c:before{content:\"\\f10e\"}.ion-asterisk:before{content:\"\\f314\"}.ion-at:before{content:\"\\f10f\"}.ion-backspace:before{content:\"\\f3bf\"}.ion-backspace-outline:before{content:\"\\f3be\"}.ion-bag:before{content:\"\\f110\"}.ion-battery-charging:before{content:\"\\f111\"}.ion-battery-empty:before{content:\"\\f112\"}.ion-battery-full:before{content:\"\\f113\"}.ion-battery-half:before{content:\"\\f114\"}.ion-battery-low:before{content:\"\\f115\"}.ion-beaker:before{content:\"\\f269\"}.ion-beer:before{content:\"\\f26a\"}.ion-bluetooth:before{content:\"\\f116\"}.ion-bonfire:before{content:\"\\f315\"}.ion-bookmark:before{content:\"\\f26b\"}.ion-bowtie:before{content:\"\\f3c0\"}.ion-briefcase:before{content:\"\\f26c\"}.ion-bug:before{content:\"\\f2be\"}.ion-calculator:before{content:\"\\f26d\"}.ion-calendar:before{content:\"\\f117\"}.ion-camera:before{content:\"\\f118\"}.ion-card:before{content:\"\\f119\"}.ion-cash:before{content:\"\\f316\"}.ion-chatbox:before{content:\"\\f11b\"}.ion-chatbox-working:before{content:\"\\f11a\"}.ion-chatboxes:before{content:\"\\f11c\"}.ion-chatbubble:before{content:\"\\f11e\"}.ion-chatbubble-working:before{content:\"\\f11d\"}.ion-chatbubbles:before{content:\"\\f11f\"}.ion-checkmark:before{content:\"\\f122\"}.ion-checkmark-circled:before{content:\"\\f120\"}.ion-checkmark-round:before{content:\"\\f121\"}.ion-chevron-down:before{content:\"\\f123\"}.ion-chevron-left:before{content:\"\\f124\"}.ion-chevron-right:before{content:\"\\f125\"}.ion-chevron-up:before{content:\"\\f126\"}.ion-clipboard:before{content:\"\\f127\"}.ion-clock:before{content:\"\\f26e\"}.ion-close:before{content:\"\\f12a\"}.ion-close-circled:before{content:\"\\f128\"}.ion-close-round:before{content:\"\\f129\"}.ion-closed-captioning:before{content:\"\\f317\"}.ion-cloud:before{content:\"\\f12b\"}.ion-code:before{content:\"\\f271\"}.ion-code-download:before{content:\"\\f26f\"}.ion-code-working:before{content:\"\\f270\"}.ion-coffee:before{content:\"\\f272\"}.ion-compass:before{content:\"\\f273\"}.ion-compose:before{content:\"\\f12c\"}.ion-connection-bars:before{content:\"\\f274\"}.ion-contrast:before{content:\"\\f275\"}.ion-crop:before{content:\"\\f3c1\"}.ion-cube:before{content:\"\\f318\"}.ion-disc:before{content:\"\\f12d\"}.ion-document:before{content:\"\\f12f\"}.ion-document-text:before{content:\"\\f12e\"}.ion-drag:before{content:\"\\f130\"}.ion-earth:before{content:\"\\f276\"}.ion-easel:before{content:\"\\f3c2\"}.ion-edit:before{content:\"\\f2bf\"}.ion-egg:before{content:\"\\f277\"}.ion-eject:before{content:\"\\f131\"}.ion-email:before{content:\"\\f132\"}.ion-email-unread:before{content:\"\\f3c3\"}.ion-erlenmeyer-flask:before{content:\"\\f3c5\"}.ion-erlenmeyer-flask-bubbles:before{content:\"\\f3c4\"}.ion-eye:before{content:\"\\f133\"}.ion-eye-disabled:before{content:\"\\f306\"}.ion-female:before{content:\"\\f278\"}.ion-filing:before{content:\"\\f134\"}.ion-film-marker:before{content:\"\\f135\"}.ion-fireball:before{content:\"\\f319\"}.ion-flag:before{content:\"\\f279\"}.ion-flame:before{content:\"\\f31a\"}.ion-flash:before{content:\"\\f137\"}.ion-flash-off:before{content:\"\\f136\"}.ion-folder:before{content:\"\\f139\"}.ion-fork:before{content:\"\\f27a\"}.ion-fork-repo:before{content:\"\\f2c0\"}.ion-forward:before{content:\"\\f13a\"}.ion-funnel:before{content:\"\\f31b\"}.ion-gear-a:before{content:\"\\f13d\"}.ion-gear-b:before{content:\"\\f13e\"}.ion-grid:before{content:\"\\f13f\"}.ion-hammer:before{content:\"\\f27b\"}.ion-happy:before{content:\"\\f31c\"}.ion-happy-outline:before{content:\"\\f3c6\"}.ion-headphone:before{content:\"\\f140\"}.ion-heart:before{content:\"\\f141\"}.ion-heart-broken:before{content:\"\\f31d\"}.ion-help:before{content:\"\\f143\"}.ion-help-buoy:before{content:\"\\f27c\"}.ion-help-circled:before{content:\"\\f142\"}.ion-home:before{content:\"\\f144\"}.ion-icecream:before{content:\"\\f27d\"}.ion-image:before{content:\"\\f147\"}.ion-images:before{content:\"\\f148\"}.ion-information:before{content:\"\\f14a\"}.ion-information-circled:before{content:\"\\f149\"}.ion-ionic:before{content:\"\\f14b\"}.ion-ios-alarm:before{content:\"\\f3c8\"}.ion-ios-alarm-outline:before{content:\"\\f3c7\"}.ion-ios-albums:before{content:\"\\f3ca\"}.ion-ios-albums-outline:before{content:\"\\f3c9\"}.ion-ios-americanfootball:before{content:\"\\f3cc\"}.ion-ios-americanfootball-outline:before{content:\"\\f3cb\"}.ion-ios-analytics:before{content:\"\\f3ce\"}.ion-ios-analytics-outline:before{content:\"\\f3cd\"}.ion-ios-arrow-back:before{content:\"\\f3cf\"}.ion-ios-arrow-down:before{content:\"\\f3d0\"}.ion-ios-arrow-forward:before{content:\"\\f3d1\"}.ion-ios-arrow-left:before{content:\"\\f3d2\"}.ion-ios-arrow-right:before{content:\"\\f3d3\"}.ion-ios-arrow-thin-down:before{content:\"\\f3d4\"}.ion-ios-arrow-thin-left:before{content:\"\\f3d5\"}.ion-ios-arrow-thin-right:before{content:\"\\f3d6\"}.ion-ios-arrow-thin-up:before{content:\"\\f3d7\"}.ion-ios-arrow-up:before{content:\"\\f3d8\"}.ion-ios-at:before{content:\"\\f3da\"}.ion-ios-at-outline:before{content:\"\\f3d9\"}.ion-ios-barcode:before{content:\"\\f3dc\"}.ion-ios-barcode-outline:before{content:\"\\f3db\"}.ion-ios-baseball:before{content:\"\\f3de\"}.ion-ios-baseball-outline:before{content:\"\\f3dd\"}.ion-ios-basketball:before{content:\"\\f3e0\"}.ion-ios-basketball-outline:before{content:\"\\f3df\"}.ion-ios-bell:before{content:\"\\f3e2\"}.ion-ios-bell-outline:before{content:\"\\f3e1\"}.ion-ios-body:before{content:\"\\f3e4\"}.ion-ios-body-outline:before{content:\"\\f3e3\"}.ion-ios-bolt:before{content:\"\\f3e6\"}.ion-ios-bolt-outline:before{content:\"\\f3e5\"}.ion-ios-book:before{content:\"\\f3e8\"}.ion-ios-book-outline:before{content:\"\\f3e7\"}.ion-ios-bookmarks:before{content:\"\\f3ea\"}.ion-ios-bookmarks-outline:before{content:\"\\f3e9\"}.ion-ios-box:before{content:\"\\f3ec\"}.ion-ios-box-outline:before{content:\"\\f3eb\"}.ion-ios-briefcase:before{content:\"\\f3ee\"}.ion-ios-briefcase-outline:before{content:\"\\f3ed\"}.ion-ios-browsers:before{content:\"\\f3f0\"}.ion-ios-browsers-outline:before{content:\"\\f3ef\"}.ion-ios-calculator:before{content:\"\\f3f2\"}.ion-ios-calculator-outline:before{content:\"\\f3f1\"}.ion-ios-calendar:before{content:\"\\f3f4\"}.ion-ios-calendar-outline:before{content:\"\\f3f3\"}.ion-ios-camera:before{content:\"\\f3f6\"}.ion-ios-camera-outline:before{content:\"\\f3f5\"}.ion-ios-cart:before{content:\"\\f3f8\"}.ion-ios-cart-outline:before{content:\"\\f3f7\"}.ion-ios-chatboxes:before{content:\"\\f3fa\"}.ion-ios-chatboxes-outline:before{content:\"\\f3f9\"}.ion-ios-chatbubble:before{content:\"\\f3fc\"}.ion-ios-chatbubble-outline:before{content:\"\\f3fb\"}.ion-ios-checkmark:before{content:\"\\f3ff\"}.ion-ios-checkmark-empty:before{content:\"\\f3fd\"}.ion-ios-checkmark-outline:before{content:\"\\f3fe\"}.ion-ios-circle-filled:before{content:\"\\f400\"}.ion-ios-circle-outline:before{content:\"\\f401\"}.ion-ios-clock:before{content:\"\\f403\"}.ion-ios-clock-outline:before{content:\"\\f402\"}.ion-ios-close:before{content:\"\\f406\"}.ion-ios-close-empty:before{content:\"\\f404\"}.ion-ios-close-outline:before{content:\"\\f405\"}.ion-ios-cloud:before{content:\"\\f40c\"}.ion-ios-cloud-download:before{content:\"\\f408\"}.ion-ios-cloud-download-outline:before{content:\"\\f407\"}.ion-ios-cloud-outline:before{content:\"\\f409\"}.ion-ios-cloud-upload:before{content:\"\\f40b\"}.ion-ios-cloud-upload-outline:before{content:\"\\f40a\"}.ion-ios-cloudy:before{content:\"\\f410\"}.ion-ios-cloudy-night:before{content:\"\\f40e\"}.ion-ios-cloudy-night-outline:before{content:\"\\f40d\"}.ion-ios-cloudy-outline:before{content:\"\\f40f\"}.ion-ios-cog:before{content:\"\\f412\"}.ion-ios-cog-outline:before{content:\"\\f411\"}.ion-ios-color-filter:before{content:\"\\f414\"}.ion-ios-color-filter-outline:before{content:\"\\f413\"}.ion-ios-color-wand:before{content:\"\\f416\"}.ion-ios-color-wand-outline:before{content:\"\\f415\"}.ion-ios-compose:before{content:\"\\f418\"}.ion-ios-compose-outline:before{content:\"\\f417\"}.ion-ios-contact:before{content:\"\\f41a\"}.ion-ios-contact-outline:before{content:\"\\f419\"}.ion-ios-copy:before{content:\"\\f41c\"}.ion-ios-copy-outline:before{content:\"\\f41b\"}.ion-ios-crop:before{content:\"\\f41e\"}.ion-ios-crop-strong:before{content:\"\\f41d\"}.ion-ios-download:before{content:\"\\f420\"}.ion-ios-download-outline:before{content:\"\\f41f\"}.ion-ios-drag:before{content:\"\\f421\"}.ion-ios-email:before{content:\"\\f423\"}.ion-ios-email-outline:before{content:\"\\f422\"}.ion-ios-eye:before{content:\"\\f425\"}.ion-ios-eye-outline:before{content:\"\\f424\"}.ion-ios-fastforward:before{content:\"\\f427\"}.ion-ios-fastforward-outline:before{content:\"\\f426\"}.ion-ios-filing:before{content:\"\\f429\"}.ion-ios-filing-outline:before{content:\"\\f428\"}.ion-ios-film:before{content:\"\\f42b\"}.ion-ios-film-outline:before{content:\"\\f42a\"}.ion-ios-flag:before{content:\"\\f42d\"}.ion-ios-flag-outline:before{content:\"\\f42c\"}.ion-ios-flame:before{content:\"\\f42f\"}.ion-ios-flame-outline:before{content:\"\\f42e\"}.ion-ios-flask:before{content:\"\\f431\"}.ion-ios-flask-outline:before{content:\"\\f430\"}.ion-ios-flower:before{content:\"\\f433\"}.ion-ios-flower-outline:before{content:\"\\f432\"}.ion-ios-folder:before{content:\"\\f435\"}.ion-ios-folder-outline:before{content:\"\\f434\"}.ion-ios-football:before{content:\"\\f437\"}.ion-ios-football-outline:before{content:\"\\f436\"}.ion-ios-game-controller-a:before{content:\"\\f439\"}.ion-ios-game-controller-a-outline:before{content:\"\\f438\"}.ion-ios-game-controller-b:before{content:\"\\f43b\"}.ion-ios-game-controller-b-outline:before{content:\"\\f43a\"}.ion-ios-gear:before{content:\"\\f43d\"}.ion-ios-gear-outline:before{content:\"\\f43c\"}.ion-ios-glasses:before{content:\"\\f43f\"}.ion-ios-glasses-outline:before{content:\"\\f43e\"}.ion-ios-grid-view:before{content:\"\\f441\"}.ion-ios-grid-view-outline:before{content:\"\\f440\"}.ion-ios-heart:before{content:\"\\f443\"}.ion-ios-heart-outline:before{content:\"\\f442\"}.ion-ios-help:before{content:\"\\f446\"}.ion-ios-help-empty:before{content:\"\\f444\"}.ion-ios-help-outline:before{content:\"\\f445\"}.ion-ios-home:before{content:\"\\f448\"}.ion-ios-home-outline:before{content:\"\\f447\"}.ion-ios-infinite:before{content:\"\\f44a\"}.ion-ios-infinite-outline:before{content:\"\\f449\"}.ion-ios-information:before{content:\"\\f44d\"}.ion-ios-information-empty:before{content:\"\\f44b\"}.ion-ios-information-outline:before{content:\"\\f44c\"}.ion-ios-ionic-outline:before{content:\"\\f44e\"}.ion-ios-keypad:before{content:\"\\f450\"}.ion-ios-keypad-outline:before{content:\"\\f44f\"}.ion-ios-lightbulb:before{content:\"\\f452\"}.ion-ios-lightbulb-outline:before{content:\"\\f451\"}.ion-ios-list:before{content:\"\\f454\"}.ion-ios-list-outline:before{content:\"\\f453\"}.ion-ios-location:before{content:\"\\f456\"}.ion-ios-location-outline:before{content:\"\\f455\"}.ion-ios-locked:before{content:\"\\f458\"}.ion-ios-locked-outline:before{content:\"\\f457\"}.ion-ios-loop:before{content:\"\\f45a\"}.ion-ios-loop-strong:before{content:\"\\f459\"}.ion-ios-medical:before{content:\"\\f45c\"}.ion-ios-medical-outline:before{content:\"\\f45b\"}.ion-ios-medkit:before{content:\"\\f45e\"}.ion-ios-medkit-outline:before{content:\"\\f45d\"}.ion-ios-mic:before{content:\"\\f461\"}.ion-ios-mic-off:before{content:\"\\f45f\"}.ion-ios-mic-outline:before{content:\"\\f460\"}.ion-ios-minus:before{content:\"\\f464\"}.ion-ios-minus-empty:before{content:\"\\f462\"}.ion-ios-minus-outline:before{content:\"\\f463\"}.ion-ios-monitor:before{content:\"\\f466\"}.ion-ios-monitor-outline:before{content:\"\\f465\"}.ion-ios-moon:before{content:\"\\f468\"}.ion-ios-moon-outline:before{content:\"\\f467\"}.ion-ios-more:before{content:\"\\f46a\"}.ion-ios-more-outline:before{content:\"\\f469\"}.ion-ios-musical-note:before{content:\"\\f46b\"}.ion-ios-musical-notes:before{content:\"\\f46c\"}.ion-ios-navigate:before{content:\"\\f46e\"}.ion-ios-navigate-outline:before{content:\"\\f46d\"}.ion-ios-nutrition:before{content:\"\\f470\"}.ion-ios-nutrition-outline:before{content:\"\\f46f\"}.ion-ios-paper:before{content:\"\\f472\"}.ion-ios-paper-outline:before{content:\"\\f471\"}.ion-ios-paperplane:before{content:\"\\f474\"}.ion-ios-paperplane-outline:before{content:\"\\f473\"}.ion-ios-partlysunny:before{content:\"\\f476\"}.ion-ios-partlysunny-outline:before{content:\"\\f475\"}.ion-ios-pause:before{content:\"\\f478\"}.ion-ios-pause-outline:before{content:\"\\f477\"}.ion-ios-paw:before{content:\"\\f47a\"}.ion-ios-paw-outline:before{content:\"\\f479\"}.ion-ios-people:before{content:\"\\f47c\"}.ion-ios-people-outline:before{content:\"\\f47b\"}.ion-ios-person:before{content:\"\\f47e\"}.ion-ios-person-outline:before{content:\"\\f47d\"}.ion-ios-personadd:before{content:\"\\f480\"}.ion-ios-personadd-outline:before{content:\"\\f47f\"}.ion-ios-photos:before{content:\"\\f482\"}.ion-ios-photos-outline:before{content:\"\\f481\"}.ion-ios-pie:before{content:\"\\f484\"}.ion-ios-pie-outline:before{content:\"\\f483\"}.ion-ios-pint:before{content:\"\\f486\"}.ion-ios-pint-outline:before{content:\"\\f485\"}.ion-ios-play:before{content:\"\\f488\"}.ion-ios-play-outline:before{content:\"\\f487\"}.ion-ios-plus:before{content:\"\\f48b\"}.ion-ios-plus-empty:before{content:\"\\f489\"}.ion-ios-plus-outline:before{content:\"\\f48a\"}.ion-ios-pricetag:before{content:\"\\f48d\"}.ion-ios-pricetag-outline:before{content:\"\\f48c\"}.ion-ios-pricetags:before{content:\"\\f48f\"}.ion-ios-pricetags-outline:before{content:\"\\f48e\"}.ion-ios-printer:before{content:\"\\f491\"}.ion-ios-printer-outline:before{content:\"\\f490\"}.ion-ios-pulse:before{content:\"\\f493\"}.ion-ios-pulse-strong:before{content:\"\\f492\"}.ion-ios-rainy:before{content:\"\\f495\"}.ion-ios-rainy-outline:before{content:\"\\f494\"}.ion-ios-recording:before{content:\"\\f497\"}.ion-ios-recording-outline:before{content:\"\\f496\"}.ion-ios-redo:before{content:\"\\f499\"}.ion-ios-redo-outline:before{content:\"\\f498\"}.ion-ios-refresh:before{content:\"\\f49c\"}.ion-ios-refresh-empty:before{content:\"\\f49a\"}.ion-ios-refresh-outline:before{content:\"\\f49b\"}.ion-ios-reload:before{content:\"\\f49d\"}.ion-ios-reverse-camera:before{content:\"\\f49f\"}.ion-ios-reverse-camera-outline:before{content:\"\\f49e\"}.ion-ios-rewind:before{content:\"\\f4a1\"}.ion-ios-rewind-outline:before{content:\"\\f4a0\"}.ion-ios-rose:before{content:\"\\f4a3\"}.ion-ios-rose-outline:before{content:\"\\f4a2\"}.ion-ios-search:before{content:\"\\f4a5\"}.ion-ios-search-strong:before{content:\"\\f4a4\"}.ion-ios-settings:before{content:\"\\f4a7\"}.ion-ios-settings-strong:before{content:\"\\f4a6\"}.ion-ios-shuffle:before{content:\"\\f4a9\"}.ion-ios-shuffle-strong:before{content:\"\\f4a8\"}.ion-ios-skipbackward:before{content:\"\\f4ab\"}.ion-ios-skipbackward-outline:before{content:\"\\f4aa\"}.ion-ios-skipforward:before{content:\"\\f4ad\"}.ion-ios-skipforward-outline:before{content:\"\\f4ac\"}.ion-ios-snowy:before{content:\"\\f4ae\"}.ion-ios-speedometer:before{content:\"\\f4b0\"}.ion-ios-speedometer-outline:before{content:\"\\f4af\"}.ion-ios-star:before{content:\"\\f4b3\"}.ion-ios-star-half:before{content:\"\\f4b1\"}.ion-ios-star-outline:before{content:\"\\f4b2\"}.ion-ios-stopwatch:before{content:\"\\f4b5\"}.ion-ios-stopwatch-outline:before{content:\"\\f4b4\"}.ion-ios-sunny:before{content:\"\\f4b7\"}.ion-ios-sunny-outline:before{content:\"\\f4b6\"}.ion-ios-telephone:before{content:\"\\f4b9\"}.ion-ios-telephone-outline:before{content:\"\\f4b8\"}.ion-ios-tennisball:before{content:\"\\f4bb\"}.ion-ios-tennisball-outline:before{content:\"\\f4ba\"}.ion-ios-thunderstorm:before{content:\"\\f4bd\"}.ion-ios-thunderstorm-outline:before{content:\"\\f4bc\"}.ion-ios-time:before{content:\"\\f4bf\"}.ion-ios-time-outline:before{content:\"\\f4be\"}.ion-ios-timer:before{content:\"\\f4c1\"}.ion-ios-timer-outline:before{content:\"\\f4c0\"}.ion-ios-toggle:before{content:\"\\f4c3\"}.ion-ios-toggle-outline:before{content:\"\\f4c2\"}.ion-ios-trash:before{content:\"\\f4c5\"}.ion-ios-trash-outline:before{content:\"\\f4c4\"}.ion-ios-undo:before{content:\"\\f4c7\"}.ion-ios-undo-outline:before{content:\"\\f4c6\"}.ion-ios-unlocked:before{content:\"\\f4c9\"}.ion-ios-unlocked-outline:before{content:\"\\f4c8\"}.ion-ios-upload:before{content:\"\\f4cb\"}.ion-ios-upload-outline:before{content:\"\\f4ca\"}.ion-ios-videocam:before{content:\"\\f4cd\"}.ion-ios-videocam-outline:before{content:\"\\f4cc\"}.ion-ios-volume-high:before{content:\"\\f4ce\"}.ion-ios-volume-low:before{content:\"\\f4cf\"}.ion-ios-wineglass:before{content:\"\\f4d1\"}.ion-ios-wineglass-outline:before{content:\"\\f4d0\"}.ion-ios-world:before{content:\"\\f4d3\"}.ion-ios-world-outline:before{content:\"\\f4d2\"}.ion-ipad:before{content:\"\\f1f9\"}.ion-iphone:before{content:\"\\f1fa\"}.ion-ipod:before{content:\"\\f1fb\"}.ion-jet:before{content:\"\\f295\"}.ion-key:before{content:\"\\f296\"}.ion-knife:before{content:\"\\f297\"}.ion-laptop:before{content:\"\\f1fc\"}.ion-leaf:before{content:\"\\f1fd\"}.ion-levels:before{content:\"\\f298\"}.ion-lightbulb:before{content:\"\\f299\"}.ion-link:before{content:\"\\f1fe\"}.ion-load-a:before{content:\"\\f29a\"}.ion-load-b:before{content:\"\\f29b\"}.ion-load-c:before{content:\"\\f29c\"}.ion-load-d:before{content:\"\\f29d\"}.ion-location:before{content:\"\\f1ff\"}.ion-lock-combination:before{content:\"\\f4d4\"}.ion-locked:before{content:\"\\f200\"}.ion-log-in:before{content:\"\\f29e\"}.ion-log-out:before{content:\"\\f29f\"}.ion-loop:before{content:\"\\f201\"}.ion-magnet:before{content:\"\\f2a0\"}.ion-male:before{content:\"\\f2a1\"}.ion-man:before{content:\"\\f202\"}.ion-map:before{content:\"\\f203\"}.ion-medkit:before{content:\"\\f2a2\"}.ion-merge:before{content:\"\\f33f\"}.ion-mic-a:before{content:\"\\f204\"}.ion-mic-b:before{content:\"\\f205\"}.ion-mic-c:before{content:\"\\f206\"}.ion-minus:before{content:\"\\f209\"}.ion-minus-circled:before{content:\"\\f207\"}.ion-minus-round:before{content:\"\\f208\"}.ion-model-s:before{content:\"\\f2c1\"}.ion-monitor:before{content:\"\\f20a\"}.ion-more:before{content:\"\\f20b\"}.ion-mouse:before{content:\"\\f340\"}.ion-music-note:before{content:\"\\f20c\"}.ion-navicon:before{content:\"\\f20e\"}.ion-navicon-round:before{content:\"\\f20d\"}.ion-navigate:before{content:\"\\f2a3\"}.ion-network:before{content:\"\\f341\"}.ion-no-smoking:before{content:\"\\f2c2\"}.ion-nuclear:before{content:\"\\f2a4\"}.ion-outlet:before{content:\"\\f342\"}.ion-paintbrush:before{content:\"\\f4d5\"}.ion-paintbucket:before{content:\"\\f4d6\"}.ion-paper-airplane:before{content:\"\\f2c3\"}.ion-paperclip:before{content:\"\\f20f\"}.ion-pause:before{content:\"\\f210\"}.ion-person:before{content:\"\\f213\"}.ion-person-add:before{content:\"\\f211\"}.ion-person-stalker:before{content:\"\\f212\"}.ion-pie-graph:before{content:\"\\f2a5\"}.ion-pin:before{content:\"\\f2a6\"}.ion-pinpoint:before{content:\"\\f2a7\"}.ion-pizza:before{content:\"\\f2a8\"}.ion-plane:before{content:\"\\f214\"}.ion-planet:before{content:\"\\f343\"}.ion-play:before{content:\"\\f215\"}.ion-playstation:before{content:\"\\f30a\"}.ion-plus:before{content:\"\\f218\"}.ion-plus-circled:before{content:\"\\f216\"}.ion-plus-round:before{content:\"\\f217\"}.ion-podium:before{content:\"\\f344\"}.ion-pound:before{content:\"\\f219\"}.ion-power:before{content:\"\\f2a9\"}.ion-pricetag:before{content:\"\\f2aa\"}.ion-pricetags:before{content:\"\\f2ab\"}.ion-printer:before{content:\"\\f21a\"}.ion-pull-request:before{content:\"\\f345\"}.ion-qr-scanner:before{content:\"\\f346\"}.ion-quote:before{content:\"\\f347\"}.ion-radio-waves:before{content:\"\\f2ac\"}.ion-record:before{content:\"\\f21b\"}.ion-refresh:before{content:\"\\f21c\"}.ion-reply:before{content:\"\\f21e\"}.ion-reply-all:before{content:\"\\f21d\"}.ion-ribbon-a:before{content:\"\\f348\"}.ion-ribbon-b:before{content:\"\\f349\"}.ion-sad:before{content:\"\\f34a\"}.ion-sad-outline:before{content:\"\\f4d7\"}.ion-scissors:before{content:\"\\f34b\"}.ion-search:before{content:\"\\f21f\"}.ion-settings:before{content:\"\\f2ad\"}.ion-share:before{content:\"\\f220\"}.ion-shuffle:before{content:\"\\f221\"}.ion-skip-backward:before{content:\"\\f222\"}.ion-skip-forward:before{content:\"\\f223\"}.ion-social-android:before{content:\"\\f225\"}.ion-social-android-outline:before{content:\"\\f224\"}.ion-social-angular:before{content:\"\\f4d9\"}.ion-social-angular-outline:before{content:\"\\f4d8\"}.ion-social-apple:before{content:\"\\f227\"}.ion-social-apple-outline:before{content:\"\\f226\"}.ion-social-bitcoin:before{content:\"\\f2af\"}.ion-social-bitcoin-outline:before{content:\"\\f2ae\"}.ion-social-buffer:before{content:\"\\f229\"}.ion-social-buffer-outline:before{content:\"\\f228\"}.ion-social-chrome:before{content:\"\\f4db\"}.ion-social-chrome-outline:before{content:\"\\f4da\"}.ion-social-codepen:before{content:\"\\f4dd\"}.ion-social-codepen-outline:before{content:\"\\f4dc\"}.ion-social-css3:before{content:\"\\f4df\"}.ion-social-css3-outline:before{content:\"\\f4de\"}.ion-social-designernews:before{content:\"\\f22b\"}.ion-social-designernews-outline:before{content:\"\\f22a\"}.ion-social-dribbble:before{content:\"\\f22d\"}.ion-social-dribbble-outline:before{content:\"\\f22c\"}.ion-social-dropbox:before{content:\"\\f22f\"}.ion-social-dropbox-outline:before{content:\"\\f22e\"}.ion-social-euro:before{content:\"\\f4e1\"}.ion-social-euro-outline:before{content:\"\\f4e0\"}.ion-social-facebook:before{content:\"\\f231\"}.ion-social-facebook-outline:before{content:\"\\f230\"}.ion-social-foursquare:before{content:\"\\f34d\"}.ion-social-foursquare-outline:before{content:\"\\f34c\"}.ion-social-freebsd-devil:before{content:\"\\f2c4\"}.ion-social-github:before{content:\"\\f233\"}.ion-social-github-outline:before{content:\"\\f232\"}.ion-social-google:before{content:\"\\f34f\"}.ion-social-google-outline:before{content:\"\\f34e\"}.ion-social-googleplus:before{content:\"\\f235\"}.ion-social-googleplus-outline:before{content:\"\\f234\"}.ion-social-hackernews:before{content:\"\\f237\"}.ion-social-hackernews-outline:before{content:\"\\f236\"}.ion-social-html5:before{content:\"\\f4e3\"}.ion-social-html5-outline:before{content:\"\\f4e2\"}.ion-social-instagram:before{content:\"\\f351\"}.ion-social-instagram-outline:before{content:\"\\f350\"}.ion-social-javascript:before{content:\"\\f4e5\"}.ion-social-javascript-outline:before{content:\"\\f4e4\"}.ion-social-linkedin:before{content:\"\\f239\"}.ion-social-linkedin-outline:before{content:\"\\f238\"}.ion-social-markdown:before{content:\"\\f4e6\"}.ion-social-nodejs:before{content:\"\\f4e7\"}.ion-social-octocat:before{content:\"\\f4e8\"}.ion-social-pinterest:before{content:\"\\f2b1\"}.ion-social-pinterest-outline:before{content:\"\\f2b0\"}.ion-social-python:before{content:\"\\f4e9\"}.ion-social-reddit:before{content:\"\\f23b\"}.ion-social-reddit-outline:before{content:\"\\f23a\"}.ion-social-rss:before{content:\"\\f23d\"}.ion-social-rss-outline:before{content:\"\\f23c\"}.ion-social-sass:before{content:\"\\f4ea\"}.ion-social-skype:before{content:\"\\f23f\"}.ion-social-skype-outline:before{content:\"\\f23e\"}.ion-social-snapchat:before{content:\"\\f4ec\"}.ion-social-snapchat-outline:before{content:\"\\f4eb\"}.ion-social-tumblr:before{content:\"\\f241\"}.ion-social-tumblr-outline:before{content:\"\\f240\"}.ion-social-tux:before{content:\"\\f2c5\"}.ion-social-twitch:before{content:\"\\f4ee\"}.ion-social-twitch-outline:before{content:\"\\f4ed\"}.ion-social-twitter:before{content:\"\\f243\"}.ion-social-twitter-outline:before{content:\"\\f242\"}.ion-social-usd:before{content:\"\\f353\"}.ion-social-usd-outline:before{content:\"\\f352\"}.ion-social-vimeo:before{content:\"\\f245\"}.ion-social-vimeo-outline:before{content:\"\\f244\"}.ion-social-whatsapp:before{content:\"\\f4f0\"}.ion-social-whatsapp-outline:before{content:\"\\f4ef\"}.ion-social-windows:before{content:\"\\f247\"}.ion-social-windows-outline:before{content:\"\\f246\"}.ion-social-wordpress:before{content:\"\\f249\"}.ion-social-wordpress-outline:before{content:\"\\f248\"}.ion-social-yahoo:before{content:\"\\f24b\"}.ion-social-yahoo-outline:before{content:\"\\f24a\"}.ion-social-yen:before{content:\"\\f4f2\"}.ion-social-yen-outline:before{content:\"\\f4f1\"}.ion-social-youtube:before{content:\"\\f24d\"}.ion-social-youtube-outline:before{content:\"\\f24c\"}.ion-soup-can:before{content:\"\\f4f4\"}.ion-soup-can-outline:before{content:\"\\f4f3\"}.ion-speakerphone:before{content:\"\\f2b2\"}.ion-speedometer:before{content:\"\\f2b3\"}.ion-spoon:before{content:\"\\f2b4\"}.ion-star:before{content:\"\\f24e\"}.ion-stats-bars:before{content:\"\\f2b5\"}.ion-steam:before{content:\"\\f30b\"}.ion-stop:before{content:\"\\f24f\"}.ion-thermometer:before{content:\"\\f2b6\"}.ion-thumbsdown:before{content:\"\\f250\"}.ion-thumbsup:before{content:\"\\f251\"}.ion-toggle:before{content:\"\\f355\"}.ion-toggle-filled:before{content:\"\\f354\"}.ion-transgender:before{content:\"\\f4f5\"}.ion-trash-a:before{content:\"\\f252\"}.ion-trash-b:before{content:\"\\f253\"}.ion-trophy:before{content:\"\\f356\"}.ion-tshirt:before{content:\"\\f4f7\"}.ion-tshirt-outline:before{content:\"\\f4f6\"}.ion-umbrella:before{content:\"\\f2b7\"}.ion-university:before{content:\"\\f357\"}.ion-unlocked:before{content:\"\\f254\"}.ion-upload:before{content:\"\\f255\"}.ion-usb:before{content:\"\\f2b8\"}.ion-videocamera:before{content:\"\\f256\"}.ion-volume-high:before{content:\"\\f257\"}.ion-volume-low:before{content:\"\\f258\"}.ion-volume-medium:before{content:\"\\f259\"}.ion-volume-mute:before{content:\"\\f25a\"}.ion-wand:before{content:\"\\f358\"}.ion-waterdrop:before{content:\"\\f25b\"}.ion-wifi:before{content:\"\\f25c\"}.ion-wineglass:before{content:\"\\f2b9\"}.ion-woman:before{content:\"\\f25d\"}.ion-wrench:before{content:\"\\f2ba\"}.ion-xbox:before{content:\"\\f30c\"}";
            styleInject(css$u);

            var css$v = "*{margin:0;padding:0;-webkit-box-sizing:border-box;box-sizing:border-box}a{color:#2d8cf0;text-decoration:none;cursor:pointer;-webkit-transition:color .2s ease;transition:color .2s ease}a:hover{color:#74b3f5}body{font-size:12px;line-height:1.5;-webkit-font-smoothing:antialiased;color:#495060;background-color:#fff;font-family:Helvetica Neue,Helvetica,PingFang SC,Hiragino Sans GB,Microsoft YaHei,微软雅黑,Arial,sans-serif}.ui-fade-enter-active,.ui-fade-leave-active{-webkit-transition:opacity .22s;transition:opacity .22s}.ui-fade-enter,.ui-fade-leave-to{opacity:0}.ui-dropdown-enter-active,.ui-dropdown-leave-active{-webkit-transform-origin:0 0;transform-origin:0 0;-webkit-transition:opacity .22s ease-out,-webkit-transform .22s ease-out;transition:opacity .22s ease-out,-webkit-transform .22s ease-out;transition:opacity .22s ease-out,transform .22s ease-out;transition:opacity .22s ease-out,transform .22s ease-out,-webkit-transform .22s ease-out}.ui-dropdown-enter,.ui-dropdown-leave-to{opacity:0;-webkit-transform:scaleY(0);transform:scaleY(0)}.message-enter-active,.message-leave-active{-webkit-transition:opacity .3s,-webkit-transform .3s;transition:opacity .3s,-webkit-transform .3s;transition:transform .3s,opacity .3s;transition:transform .3s,opacity .3s,-webkit-transform .3s}.message-enter,.message-leave-to{opacity:0;-webkit-transform:translateY(-24px);transform:translateY(-24px)}.notice-enter-active,.notice-leave-active{-webkit-transition:opacity .3s,-webkit-transform .3s;transition:opacity .3s,-webkit-transform .3s;transition:transform .3s,opacity .3s;transition:transform .3s,opacity .3s,-webkit-transform .3s}.notice-enter,.notice-leave-to{opacity:0;-webkit-transform:translateX(100%);transform:translateX(100%)}.ui-modal-enter-active{-webkit-transition:opacity .3s cubic-bezier(.465,.183,.153,.946),-webkit-transform .3s cubic-bezier(.465,.183,.153,.946);transition:opacity .3s cubic-bezier(.465,.183,.153,.946),-webkit-transform .3s cubic-bezier(.465,.183,.153,.946);transition:transform .3s cubic-bezier(.465,.183,.153,.946),opacity .3s cubic-bezier(.465,.183,.153,.946);transition:transform .3s cubic-bezier(.465,.183,.153,.946),opacity .3s cubic-bezier(.465,.183,.153,.946),-webkit-transform .3s cubic-bezier(.465,.183,.153,.946)}.ui-modal-leave-active{-webkit-transition:opacity .1s cubic-bezier(.465,.183,.153,.946),-webkit-transform .1s cubic-bezier(.465,.183,.153,.946);transition:opacity .1s cubic-bezier(.465,.183,.153,.946),-webkit-transform .1s cubic-bezier(.465,.183,.153,.946);transition:transform .1s cubic-bezier(.465,.183,.153,.946),opacity .1s cubic-bezier(.465,.183,.153,.946);transition:transform .1s cubic-bezier(.465,.183,.153,.946),opacity .1s cubic-bezier(.465,.183,.153,.946),-webkit-transform .1s cubic-bezier(.465,.183,.153,.946)}.ui-modal-enter,.ui-modal-leave-to{opacity:0;-webkit-transform:scale(1.15);transform:scale(1.15)}@-webkit-keyframes ani-load-loop{0%{-webkit-transform:rotate(0);transform:rotate(0)}50%{-webkit-transform:rotate(180deg);transform:rotate(180deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes ani-load-loop{0%{-webkit-transform:rotate(0);transform:rotate(0)}50%{-webkit-transform:rotate(180deg);transform:rotate(180deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@-webkit-keyframes ui-progress-animate-x{0%{opacity:.3;-webkit-transform:scaleX(0);transform:scaleX(0)}to{opacity:0;-webkit-transform:scaleX(1);transform:scaleX(1)}}@keyframes ui-progress-animate-x{0%{opacity:.3;-webkit-transform:scaleX(0);transform:scaleX(0)}to{opacity:0;-webkit-transform:scaleX(1);transform:scaleX(1)}}@-webkit-keyframes ui-progress-animate-y{0%{opacity:.3;-webkit-transform:scaleY(0);transform:scaleY(0)}to{opacity:0;-webkit-transform:scaleY(1);transform:scaleY(1)}}@keyframes ui-progress-animate-y{0%{opacity:.3;-webkit-transform:scaleY(0);transform:scaleY(0)}to{opacity:0;-webkit-transform:scaleY(1);transform:scaleY(1)}}";
            styleInject(css$v);

            // 数组find方法
            if (!Array.prototype.find) {
              Object.defineProperty(Array.prototype, 'find', {
                value: function (predicate) {
                  if (this == null) {
                    throw new TypeError('"this" is null or not defined');
                  }
                  var o = Object(this);
                  var len = o.length >>> 0;
                  if (typeof predicate !== 'function') {
                    throw new TypeError('predicate must be a function')
                  }
                  var thisArg = arguments[1];
                  var k = 0;
                  while (k < len) {
                    var kValue = o[k];
                    if (predicate.call(thisArg, kValue, k, o)) {
                      return kValue
                    }
                    k++;
                  }
                  return undefined
                }
              });
            }

            // 数组findIndex方法
            if (!Array.prototype.findIndex) {
              Object.defineProperty(Array.prototype, 'findIndex', {
                value: function(predicate) {
                  if (this == null) {
                    throw new TypeError('"this" is null or not defined')
                  }
                  var o = Object(this);
                  var len = o.length >>> 0;
                  if (typeof predicate !== 'function') {
                    throw new TypeError('predicate must be a function');
                  }
                  var thisArg = arguments[1];
                  var k = 0;
                  while (k < len) {
                    var kValue = o[k];
                    if (predicate.call(thisArg, kValue, k, o)) {
                      return k
                    }
                    k++;
                  }
                  return -1
                }
              });
            }

            /**
             * 通用工具模块
             */

            // 最大图层值
            var maxZIndex;

            // 消息图标类型
            var iconTypes = {
              info: 'information-circled',
              success: 'checkmark-circled',
              warning: 'android-alert',
              error: 'close-circled',
              loading: 'load-c',
              confirm: 'help-circled'
            };

            /**
             * 是否函数
             * @param {Function} f 
             */
            function isFunc(f) {
              return typeof f === 'function'
            }

            /**
             * 获取对象的类型
             * @param {any} obj 
             */
            function getType$1(obj) {
              return Object.prototype.toString.call(obj).slice(8, -1).toLowerCase()
            }

            /**
             * 设置最大图层值
             */
            function setMaxZIndex() {
              if (maxZIndex) {
                maxZIndex += 2;
                return maxZIndex
              }
              var zIndex = 1000;
              var elements = document.querySelectorAll('body>*');
              var elementArray = Array.prototype.slice.call(elements);
              elementArray.forEach(function (el) {
                var elZIndex = window.getComputedStyle(el, null).zIndex;
                if (!isNaN(elZIndex)) { zIndex = Math.max(zIndex, elZIndex); }
              });
              maxZIndex = zIndex + 2;
              return maxZIndex
            }

            /**
             * 设置文本域自动高度
             * @param {HTMLTextAreaElement} textarea
             * @param {Number} minRows
             * @param {Number} maxRows
             */
            function setAutoHeight(textarea, minRows, maxRows) {
              var style = window.getComputedStyle(textarea, null);
              var borderWidth = parseInt(style.borderTopWidth) + parseInt(style.borderBottomWidth);
              var padding = parseInt(style.paddingTop) + parseInt(style.paddingBottom);
              var lineHeight = parseInt(style.lineHeight);
              var matches = textarea.value.match(/\n/gm);
              var lbCount = matches ? matches.length : 0;
              var compare = borderWidth + padding + lineHeight * lbCount < textarea.scrollHeight;
              if (typeof minRows === 'number' && (!compare && lbCount <= minRows)) { return }
              if (typeof maxRows === 'number' && lbCount >= maxRows) { return }
              textarea.style.height = 'auto';
              textarea.style.height = (textarea.scrollHeight + borderWidth) + "px";
            }

            /**
             * 通过组件名字查找父组件
             * @param {Vue.default} vm 
             * @param {String} name 
             */
            function findParentByName(vm, name) {
              var par = vm.$parent;
              while (par) {
                if (par.$options.name === name) { return par }
                par = par.$parent;
              }
            }

            /**
             * 通过组件名查找所有子组件
             * @param {Vue.default} vm 
             * @param {String} name 
             */
            function findChildrensByName(vm, name) {
              var rtnArr = [], nochecked = [].concat( vm.$children );
              var checkFunc = function (vm) { return vm.$options.name === name; };
              while (nochecked.length) {
                var curItem = nochecked.shift();
                checkFunc(curItem) ? rtnArr.push(curItem) : curItem.$children.forEach(function (_) { return nochecked.push(_); });
              }
              return rtnArr
            }

            /**
             * 节流控制
             * @param {Function} fn
             * @param {Number} gapTime
             */
            function throttle(fn, gapTime) {
              if ( gapTime === void 0 ) gapTime = 20;

              var lastTime = null;
              return function () {
                var nowTime = Date.now();
                if (nowTime - lastTime > gapTime || !lastTime) {
                    fn();
                    lastTime = nowTime;
                }
              }
            }

            /**
             * 对视口锁定滚动和解锁滚动
             */
            var winScrollLock = {
              getScrollbarWidth: function getScrollbarWidth() {
                var p = document.createElement('p');
                var styles = { width: '100px', height: '100px', overflowY: 'scroll' };
                for (var key in styles) { p.style[key] = styles[key]; }
                document.body.appendChild(p);
                var scrollbarWidth = p.offsetWidth - p.clientWidth;
                p.remove();
                return scrollbarWidth
              },
              lock: function lock() {
                var winHeight = window.innerHeight;
                var ref = document.body;
                var scrollHeight = ref.scrollHeight;
                if (winHeight > scrollHeight) { return }
                document.body.style.paddingRight = (this.getScrollbarWidth()) + "px";
                document.body.style.overflow = 'hidden';
              },
              unlock: function unlock() {
                document.body.style.paddingRight = document.body.style.overflow = '';
              }
            };

            var RenderCell = {
              name: 'ui-render',
              functional: true,
              props: {
                render: Function
              },
              render: function (h, ctx) { return ctx.props.render(h); }
            };

            /**
             * 判断一个元素是否另一个元素的父元素或者自身
             * @param {HTMLElement} par 
             * @param {HTMLElement} el 
             */
            function isSelfOrParent(par, el) {
              do {
                if (el === par) { return true }
                el = el.parentNode;
              } while (el && el !== document.body)
              return false
            }

            /**
             * 判断一个元素的父元素是否有指定的类
             * @param {HTMLElement} el 
             * @param {String} clsName 
             */
            function hasClassNameOfParent(el, clsName) {
              return !!findParentByClassName(el, clsName)
            }

            /**
             * 通过类名查找父元素
             * @param {HTMLElement} el 
             * @param {String} clsName 
             */
            function findParentByClassName(el, clsName) {
              do {
                if (el.classList.contains(clsName)) { return el }
                el = el.parentNode;
              } while (el && el !== document.body)
              return null
            }

            /**
             * 获取元素在页面中的偏移位置
             * @param {HTMLElement} el
             */
            function getOffset(el) {
              var offset = {
                top: 0,
                right: 0,
                bottom: 0,
                left: 0,
                width: el.offsetWidth,
                height: el.offsetHeight
              };
              while (el) {
                offset.top += el.offsetTop;
                offset.left += el.offsetLeft;
                el = el.offsetParent;
              }
              offset.right = offset.left + offset.width;
              offset.bottom = offset.top + offset.height;
              return offset
            }

            /**
             * Vue原型方法定义模块
             */

            /**
             * 通知提醒管理类
             */
            var NoticeManager = function NoticeManager(Vue, component, cls, config) {
              if ( config === void 0 ) config = {};

              this.cls = cls;
              this.Vue = Vue;
              this.component = component;
              this.currentKey = 0;
              this.wrapperVM = null;
              this.initConfig = Object.assign({}, {duration: 2, top: 24}, config);
            };

            NoticeManager.prototype.addComponent = function addComponent (type, options) {
              if (typeof options === 'string') {
                options = { content: options, desc: options };
              }
              this.wrapperVM.comps.push({
                ui: this.component,
                key: ++this.currentKey,
                props: Object.assign({}, this.initConfig, options, {type: type})
              });
            };

            NoticeManager.prototype.notice = function notice (type, options) {
              var that = this;
              if (!this.wrapperVM) {
                this.wrapperVM = new this.Vue({
                  data: function () { return ({ comps: [], zIndex: setMaxZIndex() }); },
                  watch: {
                    'comps.length': function comps_length(newVal, oldVal) {
                      if (newVal > oldVal) {
                        this.zIndex = setMaxZIndex();
                      }
                    }
                  },
                  render: function render(h) {
                      var this$1 = this;

                    return h('div', {
                      class: that.cls,
                      style: { zIndex: this.zIndex, top: ((that.initConfig.top) + "px") }
                    }, this.comps.map(function (_, i) {
                      return h(_.ui, {
                        key: _.key,
                        props: _.props,
                        on: {
                          destroy: function () { return this$1.comps.splice(i, 1); }
                        }
                      })
                    }))
                  },
                  mounted: function mounted() {
                    document.body.appendChild(this.$el);
                  },
                  beforeDestroy: function beforeDestroy() {
                    that.wrapperVM = null;
                    document.body.removeChild(this.$el);
                  }
                }).$mount();
              }
              this.addComponent(type, options);
            };

            NoticeManager.prototype.info = function info (options) {
              this.notice('info', options);
            };

            NoticeManager.prototype.success = function success (options) {
              this.notice('success', options);
            };

            NoticeManager.prototype.warning = function warning (options) {
              this.notice('warning', options);
            };

            NoticeManager.prototype.error = function error (options) {
              this.notice('error', options);
            };

            NoticeManager.prototype.loading = function loading (options) {
              this.notice('loading', options);
            };

            NoticeManager.prototype.open = function open (options) {
              this.notice('open', options);
            };

            NoticeManager.prototype.config = function config (options) {
              this.initConfig = Object.assign({}, this.initConfig, options);
            };

            NoticeManager.prototype.destroy = function destroy () {
              this.wrapperVM && this.wrapperVM.$destroy();
            };

            //
            //
            //

            var script$D = {
              props: {
                type: String,
                size: [Number, String],
                color: String
              },
              computed: {
                fontSize: function fontSize() {
                  return this.size && parseInt(this.size) + 'px'
                }
              }
            };

            var css$w = ".ui-icon{display:inline-block;font-family:Ionicons;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;text-rendering:auto;line-height:1;-webkit-font-smoothing:antialiased}";
            styleInject(css$w);

            /* script */
            var __vue_script__$D = script$D;
            /* template */
            var __vue_render__$M = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("i", {
                class: ["ui-icon", "ion-" + _vm.type],
                style: { fontSize: _vm.fontSize, color: _vm.color },
                on: {
                  click: function($event) {
                    return _vm.$emit("click", $event)
                  }
                }
              })
            };
            var __vue_staticRenderFns__$M = [];
            __vue_render__$M._withStripped = true;

              /* style */
              var __vue_inject_styles__$M = undefined;
              /* scoped */
              var __vue_scope_id__$M = undefined;
              /* module identifier */
              var __vue_module_identifier__$M = undefined;
              /* functional template */
              var __vue_is_functional_template__$M = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var UiIcon = normalizeComponent_1(
                { render: __vue_render__$M, staticRenderFns: __vue_staticRenderFns__$M },
                __vue_inject_styles__$M,
                __vue_script__$D,
                __vue_scope_id__$M,
                __vue_is_functional_template__$M,
                __vue_module_identifier__$M,
                undefined,
                undefined
              );

            //
            var script$E = {
              components: { UiIcon: UiIcon },
              data: function data() {
                return {
                  isOnlyIcon: false
                }
              },
              props: {
                type: {
                  default: 'default',
                  validator: function validator(value) {
                    return ['default', 'primary', 'ghost', 'dashed', 'text', 'info', 'success', 'warning', 'error'].indexOf(value) !== -1
                  }
                },
                size: {
                  default: 'normal',
                  validator: function validator(value) {
                    return ['large', 'normal', 'small'].indexOf(value) !== -1
                  }
                },
                shape: {
                  type: String,
                  validator: function validator(value) {
                    return !value || ['circle'].indexOf(value) !== -1
                  }
                },
                long: Boolean,
                htmlType: {
                  default: 'button',
                  validator: function validator(value) {
                    return ['button', 'submit', 'reset'].indexOf(value) !== -1
                  }
                },
                disabled: Boolean,
                loading: Boolean,
                icon: String
              },
              mounted: function mounted() {
                this.isOnlyIcon = Object.keys(this.$slots).length === 0;
              }
            };

            var css$x = ".ui-button{-webkit-appearance:button;outline:none;padding:0 15px;border-radius:3px;border:1px solid #dddee1;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-size:12px;cursor:pointer;white-space:nowrap;color:#495060;background-color:#f8f8f9;display:inline-block;text-align:center;vertical-align:middle;position:relative;-webkit-transition:background-color .2s,border-color .2s,color .2s,-webkit-box-shadow .2s;transition:background-color .2s,border-color .2s,color .2s,-webkit-box-shadow .2s;transition:background-color .2s,border-color .2s,color .2s,box-shadow .2s;transition:background-color .2s,border-color .2s,color .2s,box-shadow .2s,-webkit-box-shadow .2s}.ui-button:before{position:absolute;top:-1px;right:-1px;bottom:-1px;left:-1px;background-color:#fff;opacity:.35;content:\"\";border-radius:inherit;z-index:1;-webkit-transition:opacity .2s;transition:opacity .2s;display:none}.ui-button.loading{pointer-events:none}.ui-button.loading .icon-load-loop{-webkit-animation:ani-load-loop 1s linear infinite;animation:ani-load-loop 1s linear infinite}.ui-button.loading:before{display:block}.ui-button.isOnlyIcon{padding:0;border-radius:50%}.ui-button.long{width:100%}.ui-button.normal{height:32px}.ui-button.normal.circle{border-radius:16px}.ui-button.normal.isOnlyIcon{width:32px;font-size:16px}.ui-button.large{height:36px;font-size:14px}.ui-button.large.circle{border-radius:18px}.ui-button.large.isOnlyIcon{width:36px;font-size:18px}.ui-button.small{height:24px;padding:2px 7px}.ui-button.small.circle{border-radius:48px}.ui-button.small.isOnlyIcon{width:24px;font-size:12px}.ui-button.default:hover:not(:disabled){background-color:#fff;color:#53a1f3;border-color:#53a1f3}.ui-button.default:active:not(:disabled){color:#1077e4;border-color:#1077e4}.ui-button.dashed,.ui-button.ghost{background-color:transparent}.ui-button.dashed:hover:not(:disabled),.ui-button.ghost:hover:not(:disabled){border-color:#53a1f3;color:#53a1f3}.ui-button.dashed:active:not(:disabled),.ui-button.ghost:active:not(:disabled){border-color:#1077e4;color:#1077e4}.ui-button.dashed{border-style:dashed}.ui-button.text{border-color:transparent;background-color:transparent}.ui-button.text:hover:not(:disabled){color:#53a1f3}.ui-button.text:active:not(:disabled){color:#1077e4}.ui-button.dashed:focus:not(:disabled),.ui-button.default:focus:not(:disabled),.ui-button.ghost:focus:not(:disabled),.ui-button.text:focus:not(:disabled){-webkit-box-shadow:0 0 0 2px rgba(45,140,240,.2);box-shadow:0 0 0 2px rgba(45,140,240,.2)}.ui-button.error,.ui-button.info,.ui-button.primary,.ui-button.success,.ui-button.warning{color:#fff}.ui-button.primary{border-color:#2d8cf0;background-color:#2d8cf0}.ui-button.primary:hover:not(:disabled){border-color:#53a1f3;background-color:#53a1f3}.ui-button.primary:active:not(:disabled){border-color:#1077e4;background-color:#1077e4}.ui-button.primary:focus:not(:disabled){-webkit-box-shadow:0 0 0 2px rgba(45,140,240,.2);box-shadow:0 0 0 2px rgba(45,140,240,.2)}.ui-button.info{border-color:#2db7f5;background-color:#2db7f5}.ui-button.info:hover:not(:disabled){border-color:#54c4f7;background-color:#54c4f7}.ui-button.info:active:not(:disabled){border-color:#0ba8ee;background-color:#0ba8ee}.ui-button.info:focus:not(:disabled){-webkit-box-shadow:0 0 0 2px rgba(45,183,245,.2);box-shadow:0 0 0 2px rgba(45,183,245,.2)}.ui-button.success{border-color:#19be6b;background-color:#19be6b}.ui-button.success:hover:not(:disabled){border-color:#1ee17f;background-color:#1ee17f}.ui-button.success:active:not(:disabled){border-color:#149a57;background-color:#149a57}.ui-button.success:focus:not(:disabled){-webkit-box-shadow:0 0 0 2px rgba(25,190,107,.2);box-shadow:0 0 0 2px rgba(25,190,107,.2)}.ui-button.warning{border-color:#f90;background-color:#f90}.ui-button.warning:hover:not(:disabled){border-color:#ffa929;background-color:#ffa929}.ui-button.warning:active:not(:disabled){border-color:#d68100;background-color:#d68100}.ui-button.warning:focus:not(:disabled){-webkit-box-shadow:0 0 0 2px rgba(255,153,0,.2);box-shadow:0 0 0 2px rgba(255,153,0,.2)}.ui-button.error{border-color:#ed3f14;background-color:#ed3f14}.ui-button.error:hover:not(:disabled){border-color:#f05e3a;background-color:#f05e3a}.ui-button.error:active:not(:disabled){border-color:#c9340f;background-color:#c9340f}.ui-button.error:focus:not(:disabled){-webkit-box-shadow:0 0 0 2px rgba(237,63,20,.2);box-shadow:0 0 0 2px rgba(237,63,20,.2)}.ui-button:disabled{color:#bbbec4;cursor:not-allowed}.ui-button:disabled:not(.text){border-color:#dddee1;background-color:#f8f8f9}.ui-button .ui-icon+span{margin-left:8px}";
            styleInject(css$x);

            /* script */
            var __vue_script__$E = script$E;
            /* template */
            var __vue_render__$N = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "button",
                {
                  staticClass: "ui-button",
                  class: [
                    _vm.type,
                    _vm.size,
                    _vm.shape,
                    { long: _vm.long, isOnlyIcon: _vm.isOnlyIcon, loading: _vm.loading }
                  ],
                  attrs: { disabled: _vm.disabled, type: _vm.htmlType },
                  on: {
                    click: function($event) {
                      return _vm.$emit("click", $event)
                    }
                  }
                },
                [
                  _vm.loading
                    ? _c("UiIcon", {
                        staticClass: "icon-load-loop",
                        attrs: { type: "load-c" }
                      })
                    : _vm.icon
                    ? _c("UiIcon", { attrs: { type: _vm.icon } })
                    : _vm._e(),
                  _vm._v(" "),
                  !_vm.isOnlyIcon ? _c("span", [_vm._t("default")], 2) : _vm._e()
                ],
                1
              )
            };
            var __vue_staticRenderFns__$N = [];
            __vue_render__$N._withStripped = true;

              /* style */
              var __vue_inject_styles__$N = undefined;
              /* scoped */
              var __vue_scope_id__$N = undefined;
              /* module identifier */
              var __vue_module_identifier__$N = undefined;
              /* functional template */
              var __vue_is_functional_template__$N = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Button$1 = normalizeComponent_1(
                { render: __vue_render__$N, staticRenderFns: __vue_staticRenderFns__$N },
                __vue_inject_styles__$N,
                __vue_script__$E,
                __vue_scope_id__$N,
                __vue_is_functional_template__$N,
                __vue_module_identifier__$N,
                undefined,
                undefined
              );

            /**
             * 对话框工具模块
             */

            function getDefaultProps() {
              return {
                title: String,
                content: String,
                closable: {
                  type: Boolean,
                  default: true
                },
                loading: Boolean,
                scrollable: Boolean,
                okText: {
                  type: String,
                  default: '确定'
                },
                cancelText: {
                  type: String,
                  default: '取消'
                },
                width: {
                  type: [Number, String],
                  default: 520
                },
                styles: Object,
                className: String,
                maskClosable: {
                  type: Boolean,
                  default: true
                },
                middle: Boolean
              }
            }

            //
            //
            //

            var script$F = {
              name: 'UiIcon',
              props: {
                type: String,
                size: [Number, String],
                color: String
              },
              computed: {
                styles: function styles() {
                  var fontSize = this.size && ((parseInt(this.size)) + "px");
                  return { fontSize: fontSize, color: this.color }
                }
              }
            };

            var css$y = ".ui-icon{display:inline-block;font-family:Ionicons;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;text-rendering:auto;line-height:1;-webkit-font-smoothing:antialiased}";
            styleInject(css$y);

            /* script */
            var __vue_script__$F = script$F;
            /* template */
            var __vue_render__$O = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "i",
                _vm._g(
                  { class: ["ion-" + _vm.type, "ui-icon"], style: _vm.styles },
                  _vm.$listeners
                )
              )
            };
            var __vue_staticRenderFns__$O = [];
            __vue_render__$O._withStripped = true;

              /* style */
              var __vue_inject_styles__$O = undefined;
              /* scoped */
              var __vue_scope_id__$O = undefined;
              /* module identifier */
              var __vue_module_identifier__$O = undefined;
              /* functional template */
              var __vue_is_functional_template__$O = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Icon$1 = normalizeComponent_1(
                { render: __vue_render__$O, staticRenderFns: __vue_staticRenderFns__$O },
                __vue_inject_styles__$O,
                __vue_script__$F,
                __vue_scope_id__$O,
                __vue_is_functional_template__$O,
                __vue_module_identifier__$O,
                undefined,
                undefined
              );

            //
            var script$G = {
              name: 'UiCloseIconButton',
              components: { UiIcon: Icon$1 }
            };

            var css$z = ".ui-close-icon-button{cursor:pointer;color:#999;font-size:22px;-webkit-transition:color .2s ease;transition:color .2s ease}.ui-close-icon-button:hover{color:#444}";
            styleInject(css$z);

            /* script */
            var __vue_script__$G = script$G;
            /* template */
            var __vue_render__$P = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "UiIcon",
                _vm._g(
                  {
                    staticClass: "ui-close-icon-button",
                    attrs: { type: "ios-close-empty" }
                  },
                  _vm.$listeners
                )
              )
            };
            var __vue_staticRenderFns__$P = [];
            __vue_render__$P._withStripped = true;

              /* style */
              var __vue_inject_styles__$P = undefined;
              /* scoped */
              var __vue_scope_id__$P = undefined;
              /* module identifier */
              var __vue_module_identifier__$P = undefined;
              /* functional template */
              var __vue_is_functional_template__$P = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var CloseIconButton = normalizeComponent_1(
                { render: __vue_render__$P, staticRenderFns: __vue_staticRenderFns__$P },
                __vue_inject_styles__$P,
                __vue_script__$G,
                __vue_scope_id__$P,
                __vue_is_functional_template__$P,
                __vue_module_identifier__$P,
                undefined,
                undefined
              );

            //
            var script$H = {
              components: { UiButton: Button$1, UiCloseIconButton: CloseIconButton },
              data: function data() {
                return { hasTitle: false }
              },
              props: getDefaultProps(),
              computed: {
                dialogStyle: function dialogStyle() {
                  var width = (parseInt(this.width)) + "px";
                  return Object.assign({}, {width: width, maxWidth: width}, this.styles)
                }
              },
              methods: {
                handleMaskClick: function handleMaskClick() {
                  if (this.maskClosable) { this.close(); }
                },
                close: function close() {
                  this.$emit('close');
                },
                handleCancel: function handleCancel() {
                  this.$emit('cancel');
                },
                handleOK: function handleOK() {
                  this.$emit('ok');
                }
              },
              mounted: function mounted() {
                this.hasTitle = this.$slots.header !== undefined || this.title;
              }
            };

            var css$A = ".ui-modal,.ui-modal-mask{top:0;right:0;bottom:0;left:0}.ui-modal{position:fixed;overflow:auto;padding:12px;will-change:transform,opacity}.ui-modal.middle{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.ui-modal.middle .ui-modal-dialog{top:0}.ui-modal-mask{position:absolute;background-color:rgba(0,0,0,.5)}.ui-modal-dialog{background-color:#fff;margin:0 auto;position:relative;top:100px;border-radius:6px}.ui-modal-close{position:absolute;top:8px;right:16px}.ui-modal-close .ui-close-icon-button{font-size:31px}.ui-modal-header{font-size:14px;font-weight:700;color:#1c2438;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;padding:14px 16px;border-bottom:1px solid #e9eaec}.ui-modal-body{padding:16px;font-size:12px;line-height:1.5}.ui-modal-footer{padding:12px 18px;border-top:1px solid #e9eaec;text-align:right}.ui-modal-footer button+button{margin-left:8px}";
            styleInject(css$A);

            /* script */
            var __vue_script__$H = script$H;
            /* template */
            var __vue_render__$Q = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "ui-modal", class: [{ middle: _vm.middle }, _vm.className] },
                [
                  _c("div", {
                    staticClass: "ui-modal-mask",
                    on: { click: _vm.handleMaskClick }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "ui-modal-dialog", style: _vm.dialogStyle }, [
                    _vm.hasTitle
                      ? _c(
                          "div",
                          { staticClass: "ui-modal-header" },
                          [_vm._t("header", [_vm._v(_vm._s(_vm.title))])],
                          2
                        )
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.closable
                      ? _c(
                          "a",
                          { staticClass: "ui-modal-close", on: { click: _vm.close } },
                          [_vm._t("close", [_c("UiCloseIconButton")])],
                          2
                        )
                      : _vm._e(),
                    _vm._v(" "),
                    _c("div", { staticClass: "ui-modal-body" }, [_vm._t("default")], 2),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "ui-modal-footer" },
                      [
                        _vm._t("footer", [
                          _c(
                            "ui-button",
                            {
                              attrs: { type: "text", size: "large" },
                              on: { click: _vm.handleCancel }
                            },
                            [_vm._v(_vm._s(_vm.cancelText))]
                          ),
                          _vm._v(" "),
                          _c(
                            "ui-button",
                            {
                              attrs: {
                                type: "primary",
                                size: "large",
                                loading: _vm.loading
                              },
                              on: { click: _vm.handleOK }
                            },
                            [_vm._v(_vm._s(_vm.okText))]
                          )
                        ])
                      ],
                      2
                    )
                  ])
                ]
              )
            };
            var __vue_staticRenderFns__$Q = [];
            __vue_render__$Q._withStripped = true;

              /* style */
              var __vue_inject_styles__$Q = undefined;
              /* scoped */
              var __vue_scope_id__$Q = undefined;
              /* module identifier */
              var __vue_module_identifier__$Q = undefined;
              /* functional template */
              var __vue_is_functional_template__$Q = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var UiModalView = normalizeComponent_1(
                { render: __vue_render__$Q, staticRenderFns: __vue_staticRenderFns__$Q },
                __vue_inject_styles__$Q,
                __vue_script__$H,
                __vue_scope_id__$Q,
                __vue_is_functional_template__$Q,
                __vue_module_identifier__$Q,
                undefined,
                undefined
              );

            //
            var script$I = {
              components: { UiIcon: UiIcon, UiButton: Button$1, UiModalView: UiModalView },
              data: function data() {
                return {
                  visible: false
                }
              },
              props: Object.assign({}, getDefaultProps(),
                {type: {
                  validator: function validator(value) {
                    return ['info', 'success', 'warning', 'error', 'confirm'].indexOf(value) !== -1
                  }
                }}),
              computed: {
                iconType: function iconType() {
                  return iconTypes[this.type]
                },
                isNormal: function isNormal() {
                  return this.type === 'confirm'
                }
              },
              methods: {
                handleOK: function handleOK() {
                  this.$emit('ok');
                },
                handleClose: function handleClose() {
                  this.$emit('close');
                },
                handleCancel: function handleCancel() {
                  this.$emit('cancel');
                }
              },
              mounted: function mounted() {
                this.visible = true;
              }
            };

            var css$B = ".ui-dialog .ui-dialog-icon{font-size:36px;margin-right:12px}.ui-dialog.info .ui-dialog-icon{color:#2d8cf0}.ui-dialog.success .ui-dialog-icon{color:#19be6b}.ui-dialog.warning .ui-dialog-icon{color:#f90}.ui-dialog.error .ui-dialog-icon{color:#ed3f14}.ui-dialog.confirm .ui-dialog-icon{color:#f90}.ui-dialog .ui-dialog-content{display:-webkit-box;display:-ms-flexbox;display:flex}";
            styleInject(css$B);

            /* script */
            var __vue_script__$I = script$I;
            /* template */
            var __vue_render__$R = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _vm.visible
                ? _c(
                    "UiModalView",
                    _vm._b(
                      {
                        staticClass: "ui-dialog",
                        class: [_vm.type],
                        attrs: { maskClosable: false },
                        on: {
                          ok: _vm.handleOK,
                          close: _vm.handleClose,
                          cancel: _vm.handleCancel
                        }
                      },
                      "UiModalView",
                      this.$props,
                      false
                    ),
                    [
                      _c(
                        "div",
                        { staticClass: "ui-dialog-content" },
                        [
                          _c("UiIcon", {
                            staticClass: "ui-dialog-icon",
                            attrs: { type: _vm.iconType }
                          }),
                          _vm._v(" "),
                          _c("div", { domProps: { innerHTML: _vm._s(_vm.content) } })
                        ],
                        1
                      ),
                      _vm._v(" "),
                      !_vm.isNormal
                        ? _c(
                            "UiButton",
                            {
                              attrs: { slot: "footer", type: "primary", size: "large" },
                              on: { click: _vm.handleOK },
                              slot: "footer"
                            },
                            [_vm._v(_vm._s(_vm.okText || "确定"))]
                          )
                        : _vm._e()
                    ],
                    1
                  )
                : _vm._e()
            };
            var __vue_staticRenderFns__$R = [];
            __vue_render__$R._withStripped = true;

              /* style */
              var __vue_inject_styles__$R = undefined;
              /* scoped */
              var __vue_scope_id__$R = undefined;
              /* module identifier */
              var __vue_module_identifier__$R = undefined;
              /* functional template */
              var __vue_is_functional_template__$R = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var UiDialog = normalizeComponent_1(
                { render: __vue_render__$R, staticRenderFns: __vue_staticRenderFns__$R },
                __vue_inject_styles__$R,
                __vue_script__$I,
                __vue_scope_id__$R,
                __vue_is_functional_template__$R,
                __vue_module_identifier__$R,
                undefined,
                undefined
              );

            /**
             * 通用对话框模块
             */

            function objectWithoutProperties (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }

            /**
             * 创建对话框
             * @param {Vue.VueConstructor} Vue 
             */
            function createModal(Vue) {
              return {
                create: function create(type, options) {
                  if ( options === void 0 ) options = {};

                  winScrollLock.lock();
                  var onOk = options.onOk;
                  var onCancel = options.onCancel;
                  var rest = objectWithoutProperties( options, ["onOk", "onCancel"] );
                  var props = rest;
                  this.instance = new Vue({
                    data: function data() {
                      return {
                        visible: true,
                        loading: options.loading,
                        isLoading: false,
                        zIndex: setMaxZIndex()
                      }
                    },
                    watch: {
                      visible: function visible(newVal) {
                        if (newVal) { return }
                        winScrollLock.unlock();
                        this.isLoading = false;
                      }
                    },
                    render: function render(h) {
                      var this$1 = this;

                      return this.visible && h('transition', {
                        props: { name: 'ui-modal' },
                        on: {
                          afterLeave: function () { return this$1.$destroy(); }
                        }
                      }, [
                        h(UiDialog, {
                          props: Object.assign({}, props, {type: type, loading: this.isLoading}),
                          style: { zIndex: this.zIndex },
                          on: {
                            ok: function () {
                              isFunc(onOk) && onOk();
                              if (this$1.loading) { return this$1.isLoading = true }
                              this$1.close();
                            },
                            close: this.close,
                            cancel: function () {
                              this$1.close();
                              isFunc(onCancel) && onCancel();
                            }
                          }
                        })
                      ])
                    },
                    methods: {
                      close: function close() {
                        this.visible = false;
                      }
                    },
                    mounted: function mounted() {
                      document.body.appendChild(this.$el);
                    },
                    beforeDestroy: function beforeDestroy() {
                      this.$el.remove();
                    }
                  }).$mount();
                },
              
                info: function info(options) {
                  return this.create('info', options)
                },
              
                success: function success(options) {
                  return this.create('success', options)
                },
              
                warning: function warning(options) {
                  return this.create('warning', options)
                },
              
                error: function error(options) {
                  return this.create('error', options)
                },
              
                confirm: function confirm(options) {
                  return this.create('confirm', options)
                },
              
                remove: function remove() {
                  this.instance && (this.instance.visible = false);
                }
              }
            }

            /**
             * 全局指令模块
             */

             /**
              * 事件管理器类
              */
            var EventManager = function EventManager(object, eventName) {
              this.handlers = [];
              this.object = object;
              this.eventName = eventName;
              this.eventHandler = this.eventHandler.bind(this);
              this.addListener();
            };

            EventManager.prototype.addListener = function addListener () {
              this.object.addEventListener(this.eventName, this.eventHandler);
            };

            EventManager.prototype.removeListener = function removeListener () {
              this.object.removeEventListener(this.eventName, this.eventHandler);
            };

            EventManager.prototype.addHandler = function addHandler (f) {
              this.handlers.push(f);
            };

            EventManager.prototype.removeHandler = function removeHandler (f) {
              this.handlers.splice(this.handlers.indexOf(f), 1);
            };

            EventManager.prototype.eventHandler = function eventHandler (event) {
              this.handlers.forEach(function (handler) { return handler(event); });
            };

            EventManager.prototype.getHandlerCount = function getHandlerCount () {
              return this.handlers.length
            };

            /**
             * 创建事件指令
             * @param {Vue.VueConstructor} Vue 
             */
            function createEventDirective(Vue) {
              return function (directiveName, object, eventName) {
                var eventManager = null;
                Vue.directive(directiveName, {
                  inserted: function inserted(el, ref) {
                    var value = ref.value;

                    if (typeof value !== 'function') { return }
                    if (!eventManager) {
                      eventManager = new EventManager(object, eventName);
                    }
                    el[directiveName + eventName] = value;
                    eventManager.addHandler(value);
                  },
                  unbind: function unbind(el) {
                    var handler = el[directiveName + eventName];
                    handler && eventManager.removeHandler(handler);
                    if (eventManager.getHandlerCount() === 0) {
                      eventManager.removeListener();
                      eventManager = null;
                    }
                  }
                });
              }
            }

            /**
             * 创建指令
             * @param {Vue.VueConstructor} Vue 
             */
            function createDirectives(Vue) {
              createEventDirective(Vue)('resize', window, 'resize');
              createEventDirective(Vue)('scroll', window, 'scroll');
              createEventDirective(Vue)('winclick', window, 'click');
            }

            var methods = {
              iconTypes: {
                info: 'information-circled',
                success: 'checkmark-circled',
                warning: 'android-alert',
                error: 'close-circled',
                loading: 'load-c',
                confirm: 'help-circled'
              }
            };

            //
            var script$J = {
              name: 'UiAvatar',
              components: { UiIcon: Icon$1 },
              data: function data() {
                return { prefix: 'ui-avatar' }
              },
              props: {
                shape: {
                  default: 'circle',
                  validator: function validator(value) {
                    return ['circle', 'square'].indexOf(value) !== -1
                  }
                },
                size: {
                  default: 'default',
                  validator: function validator(value) {
                    return ['large', 'small', 'default'].indexOf(value) !== -1
                  }
                },
                src: String,
                icon: String
              },
              computed: {
                classes: function classes() {
                  var ref = this;
                  var prefix = ref.prefix;
                  var shape = ref.shape;
                  var size = ref.size;
                  var icon = ref.icon;
                  var src = ref.src;
                  return [prefix, (prefix + "--" + shape), (prefix + "--" + size), { isIcon: icon }]
                }
              }
            };

            var css$C = ".ui-avatar{display:inline-block;text-align:center;background-color:#ccc;color:#fff;overflow:hidden;vertical-align:middle;position:relative}.ui-avatar.isIcon{font-size:18px}.ui-avatar--circle{border-radius:50%}.ui-avatar--square{border-radius:4px}.ui-avatar--default{width:32px;height:32px;line-height:32px}.ui-avatar--large{width:40px;height:40px;line-height:40px}.ui-avatar--large.isIcon{font-size:24px}.ui-avatar--small{width:24px;height:24px;line-height:24px}.ui-avatar--small.isIcon{font-size:14px}.ui-avatar img{width:inherit;height:inherit}";
            styleInject(css$C);

            /* script */
            var __vue_script__$J = script$J;
            /* template */
            var __vue_render__$S = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "span",
                _vm._g({ class: _vm.classes }, _vm.$listeners),
                [
                  _vm._t("default", [
                    _vm.src
                      ? _c("img", { attrs: { src: _vm.src } })
                      : _vm.icon
                      ? _c("UiIcon", { attrs: { type: _vm.icon } })
                      : _vm._e()
                  ])
                ],
                2
              )
            };
            var __vue_staticRenderFns__$S = [];
            __vue_render__$S._withStripped = true;

              /* style */
              var __vue_inject_styles__$S = undefined;
              /* scoped */
              var __vue_scope_id__$S = undefined;
              /* module identifier */
              var __vue_module_identifier__$S = undefined;
              /* functional template */
              var __vue_is_functional_template__$S = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Avatar$1 = normalizeComponent_1(
                { render: __vue_render__$S, staticRenderFns: __vue_staticRenderFns__$S },
                __vue_inject_styles__$S,
                __vue_script__$J,
                __vue_scope_id__$S,
                __vue_is_functional_template__$S,
                __vue_module_identifier__$S,
                undefined,
                undefined
              );

            //
            var script$K = {
              name: 'UiCard',
              components: { UiIcon: Icon$1 },
              data: function data() {
                return { prefix: 'ui-card', hasHeader: false }
              },
              props: {
                bordered: {
                  type: Boolean,
                  default: true
                },
                disHover: Boolean,
                shadow: Boolean,
                padding: {
                  type: [Number, String],
                  default: 16
                },
                title: String,
                icon: String
              },
              computed: {
                classes: function classes() {
                  var ref = this;
                  var prefix = ref.prefix;
                  var bordered = ref.bordered;
                  var disHover = ref.disHover;
                  var shadow = ref.shadow;
                  return [prefix, { bordered: bordered, disHover: disHover, shadow: shadow }]
                }
              },
              mounted: function mounted() {
                var ref = this.$slots;
                var title = ref.title;
                var extra = ref.extra;
                this.hasHeader = title !== undefined || extra !== undefined || this.icon || this.title;
              }
            };

            var css$D = ".ui-card{background-color:#fff;border-radius:4px;font-size:14px;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.ui-card.bordered:not(.shadow){border:1px solid #e9eaec}.ui-card:hover:not(.disHover):not(.shadow){-webkit-box-shadow:0 1px 6px rgba(0,0,0,.2);box-shadow:0 1px 6px rgba(0,0,0,.2);border-color:#eee}.ui-card.shadow{-webkit-box-shadow:0 1px 1px 0 rgba(0,0,0,.1);box-shadow:0 1px 1px 0 rgba(0,0,0,.1)}.ui-card--header{padding:14px 16px;line-height:1;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid #e9eaec}.ui-card--title{color:#1c2438;font-weight:700}.ui-card--title .ui-icon{margin-right:6px}";
            styleInject(css$D);

            /* script */
            var __vue_script__$K = script$K;
            /* template */
            var __vue_render__$T = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { class: _vm.classes }, [
                _vm.hasHeader
                  ? _c(
                      "div",
                      { class: _vm.prefix + "--header" },
                      [
                        _c(
                          "div",
                          { class: _vm.prefix + "--title" },
                          [
                            _vm._t("title", [
                              _vm.icon
                                ? _c("UiIcon", { attrs: { type: _vm.icon } })
                                : _vm._e(),
                              _vm._v("\n        " + _vm._s(_vm.title) + "\n      ")
                            ])
                          ],
                          2
                        ),
                        _vm._v(" "),
                        _vm._t("extra")
                      ],
                      2
                    )
                  : _vm._e(),
                _vm._v(" "),
                _c(
                  "div",
                  { class: _vm.prefix + "--body", style: { padding: _vm.padding + "px" } },
                  [_vm._t("default")],
                  2
                )
              ])
            };
            var __vue_staticRenderFns__$T = [];
            __vue_render__$T._withStripped = true;

              /* style */
              var __vue_inject_styles__$T = undefined;
              /* scoped */
              var __vue_scope_id__$T = undefined;
              /* module identifier */
              var __vue_module_identifier__$T = undefined;
              /* functional template */
              var __vue_is_functional_template__$T = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Card$1 = normalizeComponent_1(
                { render: __vue_render__$T, staticRenderFns: __vue_staticRenderFns__$T },
                __vue_inject_styles__$T,
                __vue_script__$K,
                __vue_scope_id__$T,
                __vue_is_functional_template__$T,
                __vue_module_identifier__$T,
                undefined,
                undefined
              );

            //
            var script$L = {
              name: 'UiAlert',
              components: { UiIcon: Icon$1, UiCloseIconButton: CloseIconButton },
              data: function data() {
                return { prefix: 'ui-alert', hasDesc: false, visible: true }
              },
              props: {
                type: {
                  default: 'info',
                  validator: function validator(value) {
                    return ['info', 'success', 'warning', 'error'].indexOf(value) !== -1
                  }
                },
                closable: Boolean,
                showIcon: Boolean
              },
              computed: {
                iconType: function iconType() {
                  return this.$uiTools.iconTypes[this.type]
                },
                classes: function classes() {
                  var ref = this;
                  var prefix = ref.prefix;
                  var type = ref.type;
                  var hasDesc = ref.hasDesc;
                  return [prefix, (prefix + "--" + type), { hasDesc: hasDesc }]
                }
              },
              methods: {
                close: function close(event) {
                  this.visible = false;
                  this.$emit('on-close', event);
                }
              },
              mounted: function mounted() {
                this.hasDesc = this.$slots.desc !== undefined;
              }
            };

            var css$E = ".ui-alert{border:1px solid;border-radius:6px;padding:8px 48px 8px 16px;position:relative;margin-bottom:10px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-transition:opacity .22s ease-in-out;transition:opacity .22s ease-in-out}.ui-alert--info{border-color:#d2f0fd;background-color:#ebf8fe}.ui-alert--info .ui-alert--icon{color:#2d8cf0}.ui-alert--success{border-color:#c5f7de;background-color:#dcfaeb}.ui-alert--success .ui-alert--icon{color:#19be6b}.ui-alert--warning{border-color:#ffebcc;background-color:#fff5e5}.ui-alert--warning .ui-alert--icon{color:#f90}.ui-alert--error{border-color:#fcdad1;background-color:#fdede9}.ui-alert--error .ui-alert--icon{color:#ed3f14}.ui-alert.hasDesc{padding:16px}.ui-alert.hasDesc .ui-alert--icon{font-size:28px;margin-right:16px}.ui-alert--icon{font-size:14px;margin-right:8px}.ui-alert--title{color:#1c2438;font-size:14px;word-break:break-all;padding-right:32px;line-height:1.4}.ui-alert--desc{font-size:12px;line-height:1.7;word-break:break-word;margin-top:2px}.ui-alert--close{position:absolute;top:7px;right:7px;width:22px;text-align:center}.ui-alert-enter,.ui-alert-leave-to{opacity:0}";
            styleInject(css$E);

            /* script */
            var __vue_script__$L = script$L;
            /* template */
            var __vue_render__$U = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("transition", { attrs: { name: _vm.prefix } }, [
                _vm.visible
                  ? _c(
                      "div",
                      { class: _vm.classes },
                      [
                        _vm.showIcon
                          ? _c("UiIcon", {
                              class: _vm.prefix + "--icon",
                              attrs: { type: _vm.iconType }
                            })
                          : _vm._e(),
                        _vm._v(" "),
                        _c("div", { class: _vm.prefix + "--body" }, [
                          _c(
                            "p",
                            { class: _vm.prefix + "--title" },
                            [_vm._t("default")],
                            2
                          ),
                          _vm._v(" "),
                          _c("p", { class: _vm.prefix + "--desc" }, [_vm._t("desc")], 2)
                        ]),
                        _vm._v(" "),
                        _vm.closable
                          ? _c("UiCloseIconButton", {
                              class: _vm.prefix + "--close",
                              on: { click: _vm.close }
                            })
                          : _vm._e()
                      ],
                      1
                    )
                  : _vm._e()
              ])
            };
            var __vue_staticRenderFns__$U = [];
            __vue_render__$U._withStripped = true;

              /* style */
              var __vue_inject_styles__$U = undefined;
              /* scoped */
              var __vue_scope_id__$U = undefined;
              /* module identifier */
              var __vue_module_identifier__$U = undefined;
              /* functional template */
              var __vue_is_functional_template__$U = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Alert$1 = normalizeComponent_1(
                { render: __vue_render__$U, staticRenderFns: __vue_staticRenderFns__$U },
                __vue_inject_styles__$U,
                __vue_script__$L,
                __vue_scope_id__$U,
                __vue_is_functional_template__$U,
                __vue_module_identifier__$U,
                undefined,
                undefined
              );

            //
            var script$M = {
              components: { UiIcon: UiIcon },
              data: function data() {
                return {
                  visible: false
                }
              },
              props: {
                height: {
                  type: Number,
                  default: 400
                },
                bottom: {
                  type: [Number, String],
                  default: 30
                },
                right: {
                  type: [Number, String],
                  default: 30
                },
                duration: {
                  type: Number,
                  default: 300
                }
              },
              computed: {
                styles: function styles() {
                  return {
                    right: ((parseInt(this.right)) + "px"),
                    bottom: ((parseInt(this.bottom)) + "px")
                  }
                }
              },
              methods: {
                handleClick: function handleClick(event) {
                  var this$1 = this;

                  if (this.timer) { return }
                  var x = window.scrollX;
                  var y = window.scrollY;
                  var ms = 16;
                  var moveCount = this.duration / ms;
                  var step = y / moveCount;
                  var dis = y;
                  this.timer = setInterval(function () {
                    if (dis > 0) {
                      dis -= step;
                    } else {
                      dis = 0;
                      clearInterval(this$1.timer);
                      this$1.timer = null;
                    }
                    window.scrollTo(x, dis);
                  }, ms);
                }
              },
              mounted: function mounted() {
                var this$1 = this;

                this.handleWinScroll = throttle(function () { return this$1.visible = window.scrollY > this$1.height; }, 50);
                window.addEventListener('scroll', this.handleWinScroll);
              },
              beforeDestroy: function beforeDestroy() {
                window.removeEventListener('scroll', this.handleWinScroll);
              }
            };

            var css$F = ".ui-back-top{position:fixed;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ui-back-top .ui-back-top-icon{cursor:pointer;width:48px;height:40px;line-height:40px;text-align:center;border-radius:2px;color:#fff;font-size:24px;background-color:rgba(0,0,0,.6);-webkit-box-shadow:0 1px 3px rgba(0,0,0,.2);box-shadow:0 1px 3px rgba(0,0,0,.2);-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.ui-back-top .ui-back-top-icon:hover{background-color:rgba(0,0,0,.7)}";
            styleInject(css$F);

            /* script */
            var __vue_script__$M = script$M;
            /* template */
            var __vue_render__$V = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("transition", { attrs: { name: "ui-fade" } }, [
                _vm.visible
                  ? _c(
                      "div",
                      {
                        staticClass: "ui-back-top",
                        style: _vm.styles,
                        on: { click: _vm.handleClick }
                      },
                      [
                        _vm._t("default", [
                          _c("UiIcon", {
                            staticClass: "ui-back-top-icon",
                            attrs: { type: "ios-arrow-up" }
                          })
                        ])
                      ],
                      2
                    )
                  : _vm._e()
              ])
            };
            var __vue_staticRenderFns__$V = [];
            __vue_render__$V._withStripped = true;

              /* style */
              var __vue_inject_styles__$V = undefined;
              /* scoped */
              var __vue_scope_id__$V = undefined;
              /* module identifier */
              var __vue_module_identifier__$V = undefined;
              /* functional template */
              var __vue_is_functional_template__$V = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var BackTop$1 = normalizeComponent_1(
                { render: __vue_render__$V, staticRenderFns: __vue_staticRenderFns__$V },
                __vue_inject_styles__$V,
                __vue_script__$M,
                __vue_scope_id__$V,
                __vue_is_functional_template__$V,
                __vue_module_identifier__$V,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$N = {
              props: {
                count: [Number, String],
                overflowCount: {
                  type: [Number, String],
                  default: 99
                },
                dot: Boolean,
                className: String
              },
              computed: {
                showCount: function showCount() {
                  return parseInt(this.count) > parseInt(this.overflowCount) ? ((this.overflowCount) + "+") : this.count
                }
              }
            };

            var css$G = ".ui-badge{position:relative;display:inline-block;line-height:1;vertical-align:middle}.ui-badge-count,.ui-badge-dot{position:absolute;background-color:#ed3f14;z-index:10;-webkit-box-shadow:0 0 0 1px #fff;box-shadow:0 0 0 1px #fff}.ui-badge-count{-webkit-transform:translateX(50%);transform:translateX(50%);-webkit-transform-origin:-10% center;transform-origin:-10% center;top:-10px;right:0;height:20px;min-width:20px;border-radius:10px;border:1px solid transparent;color:#fff;line-height:18px;text-align:center;padding:0 6px;font-size:12px;white-space:nowrap}.ui-badge-dot{-webkit-transform:translateX(-50%);transform:translateX(-50%);-webkit-transform-origin:0 center;transform-origin:0 center;top:-4px;right:-8px;width:8px;height:8px;border-radius:50%}";
            styleInject(css$G);

            /* script */
            var __vue_script__$N = script$N;
            /* template */
            var __vue_render__$W = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "span",
                { staticClass: "ui-badge" },
                [
                  _vm._t("default"),
                  _vm._v(" "),
                  _vm.count
                    ? [
                        _vm.dot
                          ? _c("sup", { staticClass: "ui-badge-dot" })
                          : _c(
                              "sup",
                              { staticClass: "ui-badge-count", class: _vm.className },
                              [_vm._v(_vm._s(_vm.showCount))]
                            )
                      ]
                    : _vm._e()
                ],
                2
              )
            };
            var __vue_staticRenderFns__$W = [];
            __vue_render__$W._withStripped = true;

              /* style */
              var __vue_inject_styles__$W = undefined;
              /* scoped */
              var __vue_scope_id__$W = undefined;
              /* module identifier */
              var __vue_module_identifier__$W = undefined;
              /* functional template */
              var __vue_is_functional_template__$W = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Badge$1 = normalizeComponent_1(
                { render: __vue_render__$W, staticRenderFns: __vue_staticRenderFns__$W },
                __vue_inject_styles__$W,
                __vue_script__$N,
                __vue_scope_id__$W,
                __vue_is_functional_template__$W,
                __vue_module_identifier__$W,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //

            var script$O = {
              props: {
                size: {
                  default: 'default',
                  validator: function validator(value) {
                    return ['large', 'default', 'small'].indexOf(value) !== -1
                  }
                },
                shape: {
                  type: String,
                  validator: function validator(value) {
                    return !value || ['circle'].indexOf(value) !== -1
                  }
                },
                vertical: Boolean
              }
            };

            var css$H = ".ui-button-group{display:inline-block}.ui-button-group.circle .ui-button.isOnlyIcon:first-child,.ui-button-group.circle .ui-button:first-child{border-top-left-radius:36px;border-bottom-left-radius:36px}.ui-button-group.circle .ui-button.isOnlyIcon:last-child,.ui-button-group.circle .ui-button:last-child{border-top-right-radius:36px;border-bottom-right-radius:36px}.ui-button-group .ui-button{position:relative}.ui-button-group .ui-button:hover{z-index:1}.ui-button-group .ui-button.isOnlyIcon{width:auto;padding:0 15px;border-radius:3px}.ui-button-group .ui-button:not(:first-child):not(:last-child){border-radius:0}.ui-button-group .ui-button:first-child{border-top-right-radius:0;border-bottom-right-radius:0}.ui-button-group .ui-button:last-child{border-top-left-radius:0;border-bottom-left-radius:0}.ui-button-group .ui-button:not(:first-child){margin-left:-1px}.ui-button-group.normal .ui-button{height:32px}.ui-button-group.normal .ui-button.isOnlyIcon{font-size:16px}.ui-button-group.large .ui-button{height:36px;font-size:14px}.ui-button-group.large .ui-button.isOnlyIcon{font-size:18px}.ui-button-group.small .ui-button{height:24px}.ui-button-group.small .ui-button.isOnlyIcon{font-size:12px}.ui-button-group.vertical .ui-button{display:block;width:100%;max-width:100%;margin-left:0}.ui-button-group.vertical .ui-button:first-child{border-radius:3px 3px 0 0}.ui-button-group.vertical .ui-button:last-child{border-radius:0 0 3px 3px}.ui-button-group.vertical .ui-button:not(:first-child){margin-top:-1px}.ui-button-group.vertical.circle .ui-button:first-child{border-radius:36px 36px 0 0}.ui-button-group.vertical.circle .ui-button:last-child{border-radius:0 0 36px 36px}";
            styleInject(css$H);

            /* script */
            var __vue_script__$O = script$O;
            /* template */
            var __vue_render__$X = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                {
                  staticClass: "ui-button-group",
                  class: [_vm.size, _vm.shape, { vertical: _vm.vertical }]
                },
                [_vm._t("default")],
                2
              )
            };
            var __vue_staticRenderFns__$X = [];
            __vue_render__$X._withStripped = true;

              /* style */
              var __vue_inject_styles__$X = undefined;
              /* scoped */
              var __vue_scope_id__$X = undefined;
              /* module identifier */
              var __vue_module_identifier__$X = undefined;
              /* functional template */
              var __vue_is_functional_template__$X = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var ButtonGroup = normalizeComponent_1(
                { render: __vue_render__$X, staticRenderFns: __vue_staticRenderFns__$X },
                __vue_inject_styles__$X,
                __vue_script__$O,
                __vue_scope_id__$X,
                __vue_is_functional_template__$X,
                __vue_module_identifier__$X,
                undefined,
                undefined
              );

            //
            var script$P = {
              components: { UiIcon: UiIcon },
              data: function data() {
                return {
                  parent: null,
                  isChecked: false
                }
              },
              props: {
                value: [String, Number, Boolean],
                label: {
                  type: [String, Number, Boolean],
                  default: ''
                },
                disabled: Boolean,
                indeterminate: Boolean,
                size: {
                  validator: function validator(value) {
                    return !value || ['small', 'default', 'large'].indexOf(value) !== -1
                  }
                },
                trueValue: {
                  type: [String, Number, Boolean],
                  default: true
                },
                falseValue: {
                  type: [String, Number, Boolean],
                  default: false
                }
              },
              watch: {
                value: function value(newVal) {
                  if (this.parent) { return }
                  this.isChecked = newVal === this.trueValue;
                }
              },
              methods: {
                handleClick: function handleClick(event) {
                  if (this.disabled) { return }
                  this.isChecked = !this.isChecked;
                  if (this.parent) {
                    this.parent.updateValue(this.label);
                  } else {
                    this.$emit('input', this.isChecked ? this.trueValue : this.falseValue);
                  }
                  this.$emit('on-change', this.isChecked);
                }
              },
              mounted: function mounted() {
                this.parent = findParentByName(this, 'ui-checkbox-group');
                if (this.parent) {
                  var checkedArray = this.parent.getValues();
                  this.isChecked = checkedArray.indexOf(this.label) !== -1;
                } else {
                  this.isChecked = this.value === this.trueValue;
                }
              }
            };

            var css$I = ".ui-checkbox-group.large .ui-checkbox,.ui-checkbox.large{font-size:14px}.ui-checkbox-group.large .ui-checkbox .ui-checkbox-icon,.ui-checkbox.large .ui-checkbox-icon{width:18px;height:18px;line-height:18px}.ui-checkbox{cursor:pointer;display:inline-block;position:relative;margin-right:8px;font-size:12px}.ui-checkbox.isChecked:not(.disabled) .ui-checkbox-button{border-color:#2d8cf0;background-color:#2d8cf0}.ui-checkbox.isChecked .ui-checkbox-icon{-webkit-transform:scale(1);transform:scale(1)}.ui-checkbox.disabled{cursor:not-allowed;color:#bbbec4}.ui-checkbox.disabled .ui-checkbox-button{background-color:#f3f3f3}.ui-checkbox.disabled .ui-checkbox-icon{color:#bbbec4}.ui-checkbox:not(.disabled) .ui-checkbox-button:focus{-webkit-box-shadow:0 0 0 2px rgba(45,140,240,.2);box-shadow:0 0 0 2px rgba(45,140,240,.2)}.ui-checkbox:not(.disabled):hover{border-color:#c2c4c9}.ui-checkbox-button{background-color:#fff;display:inline-block;border:1px solid #dddee1;text-align:center;margin-right:6px;line-height:1;border-radius:2px;outline:none;will-change:border-color,background-color,box-shadow;-webkit-transition:border-color .2s,background-color .2s,-webkit-box-shadow .2s;transition:border-color .2s,background-color .2s,-webkit-box-shadow .2s;transition:border-color .2s,background-color .2s,box-shadow .2s;transition:border-color .2s,background-color .2s,box-shadow .2s,-webkit-box-shadow .2s}.ui-checkbox-icon{color:#fff;width:14px;height:14px;line-height:14px;-webkit-transform:scale(0);transform:scale(0);will-change:transform;-webkit-transition:-webkit-transform .2s;transition:-webkit-transform .2s;transition:transform .2s;transition:transform .2s,-webkit-transform .2s}";
            styleInject(css$I);

            /* script */
            var __vue_script__$P = script$P;
            /* template */
            var __vue_render__$Y = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "span",
                {
                  staticClass: "ui-checkbox",
                  class: [{ isChecked: _vm.isChecked, disabled: _vm.disabled }, _vm.size],
                  on: { click: _vm.handleClick }
                },
                [
                  _c(
                    "span",
                    { staticClass: "ui-checkbox-button", attrs: { tabindex: "-1" } },
                    [
                      _c("UiIcon", {
                        staticClass: "ui-checkbox-icon",
                        attrs: { type: "checkmark" }
                      })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _vm._t("default", [_vm._v(_vm._s(_vm.label))])
                ],
                2
              )
            };
            var __vue_staticRenderFns__$Y = [];
            __vue_render__$Y._withStripped = true;

              /* style */
              var __vue_inject_styles__$Y = undefined;
              /* scoped */
              var __vue_scope_id__$Y = undefined;
              /* module identifier */
              var __vue_module_identifier__$Y = undefined;
              /* functional template */
              var __vue_is_functional_template__$Y = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Checkbox$1 = normalizeComponent_1(
                { render: __vue_render__$Y, staticRenderFns: __vue_staticRenderFns__$Y },
                __vue_inject_styles__$Y,
                __vue_script__$P,
                __vue_scope_id__$Y,
                __vue_is_functional_template__$Y,
                __vue_module_identifier__$Y,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //

            var script$Q = {
              name: 'ui-checkbox-group',
              data: function data() {
                return {
                  checkedArray: this.value
                }
              },
              props: {
                value: {
                  type: Array,
                  default: function () { return []; }
                },
                size: {
                  validator: function validator(value) {
                    return !value || ['small', 'default', 'large'].indexOf(value) !== -1
                  }
                }
              },
              watch: {
                value: function value(newVal) {
                  this.checkedArray = newVal;
                }
              },
              methods: {
                updateValue: function updateValue(value) {
                  var index = this.checkedArray.indexOf(value);
                  if (index !== -1) {
                    this.checkedArray.splice(index, 1);
                  } else {
                    this.checkedArray.push(value);
                  }
                  this.$emit('input', this.checkedArray);
                  this.$emit('on-change', this.checkedArray);
                },
                getValues: function getValues() {
                  return this.checkedArray
                }
              }
            };

            /* script */
            var __vue_script__$Q = script$Q;

            /* template */
            var __vue_render__$Z = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "ui-checkbox-group", class: _vm.size },
                [_vm._t("default")],
                2
              )
            };
            var __vue_staticRenderFns__$Z = [];
            __vue_render__$Z._withStripped = true;

              /* style */
              var __vue_inject_styles__$Z = undefined;
              /* scoped */
              var __vue_scope_id__$Z = undefined;
              /* module identifier */
              var __vue_module_identifier__$Z = undefined;
              /* functional template */
              var __vue_is_functional_template__$Z = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var CheckboxGroup = normalizeComponent_1(
                { render: __vue_render__$Z, staticRenderFns: __vue_staticRenderFns__$Z },
                __vue_inject_styles__$Z,
                __vue_script__$Q,
                __vue_scope_id__$Z,
                __vue_is_functional_template__$Z,
                __vue_module_identifier__$Z,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            function objectWithoutProperties$1 (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }
            var script$R = {
              components: { UiIcon: UiIcon },
              data: function data() {
                return {
                  hasPrependSlot: false,
                  hasAppendSlot: false,
                  inputValue: this.value
                }
              },
              props: {
                type: {
                  default: 'text',
                  validator: function validator(value) {
                    return ['text', 'password', 'textarea', 'url', 'email', 'date'].indexOf(value) !== -1
                  }
                },
                value: [String, Number],
                size: {
                  default: 'default',
                  validator: function validator(value) {
                    return ['small', 'default', 'large'].indexOf(value) !== -1
                  }
                },
                placeholder: String,
                clearable: Boolean,
                disabled: Boolean,
                readonly: Boolean,
                maxlength: [Number, String],
                icon: String,
                rows: {
                  type: [Number, String],
                  default: 2
                },
                autosize: [Boolean, Object],
                autofocus: Boolean,
                autocomplete: String,
                elementId: String,
                spellcheck: Boolean,
                wrap: String
              },
              computed: {
                hasSlot: function hasSlot() {
                  return this.type === 'text'
                },
                isTextarea: function isTextarea() {
                  return this.type === 'textarea'
                },
                mergedProps: function mergedProps() {
                  var ref = this.$props;
                  var icon = ref.icon;
                  var size = ref.size;
                  var type = ref.type;
                  var value = ref.value;
                  var autosize = ref.autosize;
                  var clearable = ref.clearable;
                  var id = ref.elementId;
                  var rows = ref.rows;
                  var rest = objectWithoutProperties$1( ref, ["icon", "size", "type", "value", "autosize", "clearable", "elementId", "rows"] );
                  var props = rest;
                  if (typeof autosize === 'object') {
                    if (autosize.minRows && autosize.minRows > rows) {
                      rows = autosize.minRows;
                    } else if (autosize.maxRows && autosize.maxRows < rows) {
                      rows = autosize.maxRows;
                    }
                  }
                  return Object.assign({}, props, {id: id, rows: rows, ref: 'input'})
                },
                showClearIcon: function showClearIcon() {
                  return this.clearable && !this.icon && this.inputValue
                }
              },
              watch: {
                value: function value(newVal) {
                  this.inputValue = newVal;
                }
              },
              methods: {
                focus: function focus() {
                  this.$refs.input.focus();
                },
                clear: function clear() {
                  this.inputValue = '';
                  this.$emit('input', this.inputValue);
                },
                handleInput: function handleInput(event) {
                  if (this.isTextarea && this.autosize) {
                    if (typeof this.autosize === 'boolean') {
                      setAutoHeight(event.target);
                    } else {
                      setAutoHeight(event.target, this.autosize.minRows, this.autosize.maxRows);
                    }
                  }
                  this.inputValue = event.target.value;
                  this.$emit('input', this.inputValue);
                },
                handleIconClick: function handleIconClick(event) {
                  this.$emit('on-click', event);
                },
                handleChange: function handleChange(event) {
                  this.$emit('on-change', event);
                },
                handleFocus: function handleFocus(event) {
                  this.$emit('on-focus', event);
                },
                handleBlur: function handleBlur(event) {
                  this.$emit('on-blur', event);
                },
                handleKeyup: function handleKeyup(event) {
                  this.$emit('on-keyup', event);
                  if (event.keyCode === 13) {
                    this.$emit('on-enter', event);
                  }
                },
                handleKeydown: function handleKeydown(event) {
                  this.$emit('on-keydown', event);
                },
                handleKeypress: function handleKeypress(event) {
                  this.$emit('on-keypress', event);
                }
              },
              mounted: function mounted() {
                this.hasPrependSlot = this.$slots.prepend !== undefined;
                this.hasAppendSlot = this.$slots.append !== undefined;
              }
            };

            var css$J = ".ui-input,.ui-input-input{display:inline-block;width:100%}.ui-input.hasSlot{display:table;border-collapse:separate}.ui-input.hasSlot .ui-input-append,.ui-input.hasSlot .ui-input-input,.ui-input.hasSlot .ui-input-prepend{display:table-cell;color:#495060}.ui-input.hasSlot .ui-input-append,.ui-input.hasSlot .ui-input-prepend{background-color:#eee;padding:0 7px;line-height:1;vertical-align:middle;border:1px solid #dddee1;width:1px;white-space:nowrap}.ui-input.hasSlot .ui-input-prepend{border-radius:6px 0 0 6px;border-right:none}.ui-input.hasSlot .ui-input-append{border-radius:0 6px 6px 0;border-left:none}.ui-input.hasSlot .ui-input-input{border-radius:0}.ui-input-box{position:relative}.ui-input-box:hover .ui-input-icon.clear{display:-webkit-box;display:-ms-flexbox;display:flex}.ui-input-input{height:32px;line-height:1.5;padding:0 7px;font-size:12px;border:1px solid #dddee1;border-radius:4px;outline:none;color:#495060;background-color:#fff;-webkit-transition:border .2s ease-in-out,-webkit-box-shadow .2s ease-in-out;transition:border .2s ease-in-out,-webkit-box-shadow .2s ease-in-out;transition:border .2s ease-in-out,box-shadow .2s ease-in-out;transition:border .2s ease-in-out,box-shadow .2s ease-in-out,-webkit-box-shadow .2s ease-in-out;font-family:inherit}.ui-input-input.textarea{padding:4px 7px;height:auto}.ui-input-input:disabled{cursor:not-allowed;color:#bbbec4;background-color:#f3f3f3}.ui-input-input.small{height:24px}.ui-input-input.large{height:36px}.ui-input-input::-webkit-input-placeholder{color:#bbbec4}.ui-input-input::-moz-placeholder{color:#bbbec4}.ui-input-input:-ms-input-placeholder{color:#bbbec4}.ui-input-input::-ms-input-placeholder{color:#bbbec4}.ui-input-input::placeholder{color:#bbbec4}.ui-input-input:focus,.ui-input-input:hover:not(:disabled){border-color:#53a1f3}.ui-input-input:focus{-webkit-box-shadow:0 0 0 2px rgba(45,140,240,.2);box-shadow:0 0 0 2px rgba(45,140,240,.2)}.ui-input-icon{width:32px;position:absolute;top:0;right:0;bottom:0;font-size:16px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;color:#80848f;z-index:1;cursor:pointer}.ui-input-icon.clear{display:none}.ui-input-icon.small{width:24px}.ui-input-icon.large{width:36px}.ui-input-icon+.ui-input-input{padding-right:32px}.ui-input-icon+.ui-input-input.small{padding-right:24px}.ui-input-icon+.ui-input-input.large{padding-right:36px}";
            styleInject(css$J);

            /* script */
            var __vue_script__$R = script$R;
            /* template */
            var __vue_render__$_ = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                {
                  staticClass: "ui-input",
                  class: { hasSlot: _vm.hasPrependSlot || _vm.hasAppendSlot }
                },
                [
                  _vm.hasSlot && _vm.hasPrependSlot
                    ? _c("div", { staticClass: "ui-input-prepend" }, [_vm._t("prepend")], 2)
                    : _vm._e(),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "ui-input-box" },
                    [
                      _vm.isTextarea
                        ? _c(
                            "textarea",
                            _vm._b(
                              {
                                staticClass: "ui-input-input textarea",
                                domProps: { value: _vm.inputValue },
                                on: {
                                  input: _vm.handleInput,
                                  change: _vm.handleChange,
                                  focus: _vm.handleFocus,
                                  blur: _vm.handleBlur,
                                  keyup: _vm.handleKeyup,
                                  keydown: _vm.handleKeydown,
                                  keypress: _vm.handleKeypress
                                }
                              },
                              "textarea",
                              _vm.mergedProps,
                              false
                            )
                          )
                        : [
                            _vm.icon
                              ? _c("UiIcon", {
                                  staticClass: "ui-input-icon",
                                  class: _vm.size,
                                  attrs: { type: _vm.icon },
                                  on: { click: _vm.handleIconClick }
                                })
                              : _vm._e(),
                            _vm._v(" "),
                            _vm.showClearIcon
                              ? _c("UiIcon", {
                                  staticClass: "ui-input-icon clear",
                                  class: _vm.size,
                                  attrs: { type: "ios-close" },
                                  on: { click: _vm.clear }
                                })
                              : _vm._e(),
                            _vm._v(" "),
                            _c(
                              "input",
                              _vm._b(
                                {
                                  staticClass: "ui-input-input",
                                  class: _vm.size,
                                  attrs: { type: _vm.type },
                                  domProps: { value: _vm.inputValue },
                                  on: {
                                    input: _vm.handleInput,
                                    change: _vm.handleChange,
                                    focus: _vm.handleFocus,
                                    blur: _vm.handleBlur,
                                    keyup: _vm.handleKeyup,
                                    keydown: _vm.handleKeydown,
                                    keypress: _vm.handleKeypress
                                  }
                                },
                                "input",
                                _vm.mergedProps,
                                false
                              )
                            )
                          ]
                    ],
                    2
                  ),
                  _vm._v(" "),
                  _vm.hasSlot && _vm.hasAppendSlot
                    ? _c("div", { staticClass: "ui-input-append" }, [_vm._t("append")], 2)
                    : _vm._e()
                ]
              )
            };
            var __vue_staticRenderFns__$_ = [];
            __vue_render__$_._withStripped = true;

              /* style */
              var __vue_inject_styles__$_ = undefined;
              /* scoped */
              var __vue_scope_id__$_ = undefined;
              /* module identifier */
              var __vue_module_identifier__$_ = undefined;
              /* functional template */
              var __vue_is_functional_template__$_ = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Input$1 = normalizeComponent_1(
                { render: __vue_render__$_, staticRenderFns: __vue_staticRenderFns__$_ },
                __vue_inject_styles__$_,
                __vue_script__$R,
                __vue_scope_id__$_,
                __vue_is_functional_template__$_,
                __vue_module_identifier__$_,
                undefined,
                undefined
              );

            //
            var script$S = {
              components: { UiIcon: UiIcon },
              props: {
                percent: {
                  type: Number,
                  default: 0
                },
                status: {
                  default: 'normal',
                  validator: function validator(value) {
                    return ['normal', 'active', 'wrong', 'success'].indexOf(value) !== -1
                  }
                },
                strokeWidth: {
                  type: Number,
                  default: 10
                },
                hideInfo: Boolean,
                vertical: Boolean
              },
              computed: {
                innerStyle: function innerStyle() {
                  var style = { borderRadius: ((this.strokeWidth * .5) + "px") };
                  return this.vertical ? Object.assign({}, style, {width: ((this.strokeWidth) + "px")}) : Object.assign({}, style, {height: ((this.strokeWidth) + "px")})
                },
                bgStyle: function bgStyle() {
                  var percent = Math.min(this.percent, 100);
                  return this.vertical ? Object.assign({}, this.innerStyle, {height: (percent + "%")}) : Object.assign({}, this.innerStyle, {width: (percent + "%")})
                },
                curStatus: function curStatus() {
                  return this.percent < 100 ? this.status : 'success'
                },
                statusIcon: function statusIcon() {
                  return ({ wrong: 'ios-close', success: 'ios-checkmark' })[this.curStatus]
                }
              }
            };

            var css$K = ".ui-progress .ui-progress-box{width:100%;display:table;border-collapse:collapse}.ui-progress.vertical{display:inline-block;margin-right:6px}.ui-progress.vertical,.ui-progress.vertical .ui-progress-box,.ui-progress.vertical .ui-progress-inner,.ui-progress.vertical .ui-progress-outer{width:auto;height:100%}.ui-progress.vertical .ui-progress-outer{padding:0;position:relative}.ui-progress.vertical .ui-progress-inner{vertical-align:middle}.ui-progress.vertical .ui-progress-bg{position:absolute;right:0;bottom:0;left:0}.ui-progress.vertical.active .ui-progress-bg:before{-webkit-transform-origin:0 100%;transform-origin:0 100%;-webkit-animation-name:ui-progress-animate-y;animation-name:ui-progress-animate-y}.ui-progress.active .ui-progress-bg,.ui-progress.normal .ui-progress-bg{background-color:#2db7f5}.ui-progress.active .ui-progress-bg:before{content:\"\";display:block;height:100%;background-color:#fff;-webkit-transform-origin:0 0;transform-origin:0 0;-webkit-animation:ui-progress-animate-x 2s ease-in-out infinite;animation:ui-progress-animate-x 2s ease-in-out infinite}.ui-progress.wrong{color:#ed3f14}.ui-progress.wrong .ui-progress-bg{background-color:#ed3f14}.ui-progress.success{color:#19be6b}.ui-progress.success .ui-progress-bg{background-color:#19be6b}.ui-progress-outer,.ui-progress-text{display:table-cell;vertical-align:middle}.ui-progress-outer{padding:4px 0}.ui-progress-inner{overflow:hidden;background-color:#f3f3f3}.ui-progress-text{width:1px;padding-left:10px;white-space:nowrap}.ui-progress-bg{-webkit-transition:width .2s;transition:width .2s}";
            styleInject(css$K);

            /* script */
            var __vue_script__$S = script$S;
            /* template */
            var __vue_render__$$ = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                {
                  staticClass: "ui-progress",
                  class: [_vm.curStatus, { vertical: _vm.vertical }]
                },
                [
                  _c("div", { staticClass: "ui-progress-box" }, [
                    _c("div", { staticClass: "ui-progress-outer" }, [
                      _c(
                        "div",
                        { staticClass: "ui-progress-inner", style: _vm.innerStyle },
                        [_c("div", { staticClass: "ui-progress-bg", style: _vm.bgStyle })]
                      )
                    ]),
                    _vm._v(" "),
                    !_vm.hideInfo
                      ? _c(
                          "div",
                          { staticClass: "ui-progress-text" },
                          [
                            _vm._t("default", [
                              _vm.statusIcon
                                ? _c("UiIcon", { attrs: { type: _vm.statusIcon } })
                                : _c("span", [
                                    _vm._v(_vm._s(Math.min(_vm.percent, 100)) + "%")
                                  ])
                            ])
                          ],
                          2
                        )
                      : _vm._e()
                  ])
                ]
              )
            };
            var __vue_staticRenderFns__$$ = [];
            __vue_render__$$._withStripped = true;

              /* style */
              var __vue_inject_styles__$$ = undefined;
              /* scoped */
              var __vue_scope_id__$$ = undefined;
              /* module identifier */
              var __vue_module_identifier__$$ = undefined;
              /* functional template */
              var __vue_is_functional_template__$$ = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Progress$1 = normalizeComponent_1(
                { render: __vue_render__$$, staticRenderFns: __vue_staticRenderFns__$$ },
                __vue_inject_styles__$$,
                __vue_script__$S,
                __vue_scope_id__$$,
                __vue_is_functional_template__$$,
                __vue_module_identifier__$$,
                undefined,
                undefined
              );

            //
            var script$T = {
              components: { UiIcon: UiIcon },
              data: function data() {
                return {
                  isChecked: this.checked
                }
              },
              props: {
                closable: Boolean,
                checkable: Boolean,
                checked: {
                  type: Boolean,
                  default: true
                },
                type: {
                  default: 'default',
                  validator: function validator(value) {
                    return ['default', 'dot'].indexOf(value) !== -1
                  }
                },
                color: String,
                fade: {
                  type: Boolean,
                  default: true
                }
              },
              computed: {
                colorClass: function colorClass() {
                  var colors = ['blue', 'green', 'red', 'yellow'];
                  var index = colors.indexOf(this.color);
                  return index !== -1 && colors[index]
                },
                backgroundColor: function backgroundColor() {
                  return !this.colorClass && this.color
                }
              },
              watch: {
                checked: function checked(newVal) {
                  this.isChecked = newVal;
                }
              },
              methods: {
                handleClose: function handleClose(event) {
                  this.$emit('on-close');
                },
                handleClick: function handleClick() {
                  if (!this.checkable) { return }
                  this.isChecked = !this.isChecked;
                  this.$emit('update:checked', this.isChecked);
                }
              }
            };

            var css$L = ".ui-tag{display:inline-block;margin:2px 4px 2px 0;cursor:pointer;font-size:12px;color:#495060}.ui-tag-dot{width:12px;height:12px;border-radius:50%;margin-right:8px;background-color:#e9eaec}.ui-tag-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;height:22px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 8px;border:1px solid #dddee1;background-color:#f8f8f9;border-radius:3px}.ui-tag-wrapper:hover{opacity:.85}.ui-tag-wrapper.blue,.ui-tag-wrapper.green,.ui-tag-wrapper.red,.ui-tag-wrapper.yellow{border:none;background-color:#fff}.ui-tag-wrapper.isChecked:not(.dot).blue,.ui-tag-wrapper.isChecked:not(.dot).green,.ui-tag-wrapper.isChecked:not(.dot).red,.ui-tag-wrapper.isChecked:not(.dot).yellow{color:#fff}.ui-tag-wrapper.isChecked:not(.dot).blue{background-color:#2db7f5}.ui-tag-wrapper.isChecked:not(.dot).green{background-color:#19be6b}.ui-tag-wrapper.isChecked:not(.dot).red{background-color:#ed3f14}.ui-tag-wrapper.isChecked:not(.dot).yellow{background-color:#f90}.ui-tag-wrapper.dot{height:32px;background-color:#fff;border:1px solid #e9eaec}.ui-tag-wrapper.dot.blue .ui-tag-dot{background-color:#2db7f5}.ui-tag-wrapper.dot.green .ui-tag-dot{background-color:#19be6b}.ui-tag-wrapper.dot.red .ui-tag-dot{background-color:#ed3f14}.ui-tag-wrapper.dot.yellow .ui-tag-dot{background-color:#f90}.ui-tag-wrapper .ion-ios-close-empty{font-size:18px;margin-left:8px;opacity:.66}.ui-tag-wrapper .ion-ios-close-empty:hover{opacity:1}";
            styleInject(css$L);

            /* script */
            var __vue_script__$T = script$T;
            /* template */
            var __vue_render__$10 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _vm.fade
                ? _c("transition", { attrs: { name: "ui-fade" } }, [
                    _c("div", { staticClass: "ui-tag", on: { click: _vm.handleClick } }, [
                      _c(
                        "div",
                        {
                          staticClass: "ui-tag-wrapper",
                          class: [_vm.colorClass, _vm.type, { isChecked: _vm.isChecked }],
                          style: { backgroundColor: _vm.backgroundColor }
                        },
                        [
                          _vm.type === "dot"
                            ? _c("span", { staticClass: "ui-tag-dot" })
                            : _vm._e(),
                          _vm._v(" "),
                          _vm._t("default"),
                          _vm._v(" "),
                          _vm.closable
                            ? _c("UiIcon", {
                                attrs: { type: "ios-close-empty" },
                                nativeOn: {
                                  click: function($event) {
                                    $event.stopPropagation();
                                    return _vm.handleClose($event)
                                  }
                                }
                              })
                            : _vm._e()
                        ],
                        2
                      )
                    ])
                  ])
                : _c("div", { staticClass: "ui-tag", on: { click: _vm.handleClick } }, [
                    _c(
                      "div",
                      {
                        staticClass: "ui-tag-wrapper",
                        class: [_vm.colorClass, _vm.type, { isChecked: _vm.isChecked }],
                        style: { backgroundColor: _vm.backgroundColor }
                      },
                      [
                        _vm.type === "dot"
                          ? _c("span", { staticClass: "ui-tag-dot" })
                          : _vm._e(),
                        _vm._v(" "),
                        _vm._t("default"),
                        _vm._v(" "),
                        _vm.closable
                          ? _c("UiIcon", {
                              attrs: { type: "ios-close-empty" },
                              nativeOn: {
                                click: function($event) {
                                  $event.stopPropagation();
                                  return _vm.handleClose($event)
                                }
                              }
                            })
                          : _vm._e()
                      ],
                      2
                    )
                  ])
            };
            var __vue_staticRenderFns__$10 = [];
            __vue_render__$10._withStripped = true;

              /* style */
              var __vue_inject_styles__$10 = undefined;
              /* scoped */
              var __vue_scope_id__$10 = undefined;
              /* module identifier */
              var __vue_module_identifier__$10 = undefined;
              /* functional template */
              var __vue_is_functional_template__$10 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Tag$1 = normalizeComponent_1(
                { render: __vue_render__$10, staticRenderFns: __vue_staticRenderFns__$10 },
                __vue_inject_styles__$10,
                __vue_script__$T,
                __vue_scope_id__$10,
                __vue_is_functional_template__$10,
                __vue_module_identifier__$10,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //

            var script$U = {
              props: {
                pending: Boolean
              }
            };

            var css$M = ".ui-timeline{list-style:none}.ui-timeline.pending .ui-timeline-item:nth-last-of-type(2) .ui-timeline-item-tail{border-left-style:dotted}";
            styleInject(css$M);

            /* script */
            var __vue_script__$U = script$U;
            /* template */
            var __vue_render__$11 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "ul",
                { staticClass: "ui-timeline", class: { pending: _vm.pending } },
                [_vm._t("default")],
                2
              )
            };
            var __vue_staticRenderFns__$11 = [];
            __vue_render__$11._withStripped = true;

              /* style */
              var __vue_inject_styles__$11 = undefined;
              /* scoped */
              var __vue_scope_id__$11 = undefined;
              /* module identifier */
              var __vue_module_identifier__$11 = undefined;
              /* functional template */
              var __vue_is_functional_template__$11 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Timeline$1 = normalizeComponent_1(
                { render: __vue_render__$11, staticRenderFns: __vue_staticRenderFns__$11 },
                __vue_inject_styles__$11,
                __vue_script__$U,
                __vue_scope_id__$11,
                __vue_is_functional_template__$11,
                __vue_module_identifier__$11,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$V = {
              data: function data() {
                return {
                  custom: false
                }
              },
              props: {
                color: {
                  type: String,
                  default: 'blue'
                }
              },
              computed: {
                clsName: function clsName() {
                  return ['blue', 'red', 'green'].indexOf(this.color) !== -1
                },
                styles: function styles() {
                  return !this.clsName && this.color ? { borderColor: this.color } : {}
                }
              },
              mounted: function mounted() {
                this.custom = this.$slots.dot !== undefined;
              }
            };

            var css$N = ".ui-timeline-item{padding-bottom:24px;position:relative}.ui-timeline-item:last-child .ui-timeline-item-tail{display:none}.ui-timeline-item-dot,.ui-timeline-item-tail{position:absolute;top:0}.ui-timeline-item-tail{height:100%;left:6px;border-left:1px solid #e9eaec}.ui-timeline-item-dot{width:13px;height:13px;border-radius:50%;border:1px solid;background-color:#fff}.ui-timeline-item-dot.blue{color:#2d8cf0;border-color:#2d8cf0}.ui-timeline-item-dot.green{color:#19be6b;border-color:#19be6b}.ui-timeline-item-dot.red{color:#ed3f14;border-color:#ed3f14}.ui-timeline-item-dot.custom{text-align:center;line-height:1;border:none;border-radius:0;font-size:14px}.ui-timeline-item-content{padding:1px 0 0 24px;font-size:12px;position:relative;top:-3px}";
            styleInject(css$N);

            /* script */
            var __vue_script__$V = script$V;
            /* template */
            var __vue_render__$12 = function() {
              var _obj;
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("li", { staticClass: "ui-timeline-item" }, [
                _c("span", { staticClass: "ui-timeline-item-tail" }),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    staticClass: "ui-timeline-item-dot",
                    class: ((_obj = {}),
                    (_obj[_vm.color] = _vm.clsName),
                    (_obj.custom = _vm.custom),
                    _obj),
                    style: _vm.styles
                  },
                  [_vm._t("dot")],
                  2
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "ui-timeline-item-content" },
                  [_vm._t("default")],
                  2
                )
              ])
            };
            var __vue_staticRenderFns__$12 = [];
            __vue_render__$12._withStripped = true;

              /* style */
              var __vue_inject_styles__$12 = undefined;
              /* scoped */
              var __vue_scope_id__$12 = undefined;
              /* module identifier */
              var __vue_module_identifier__$12 = undefined;
              /* functional template */
              var __vue_is_functional_template__$12 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var TimelineItem = normalizeComponent_1(
                { render: __vue_render__$12, staticRenderFns: __vue_staticRenderFns__$12 },
                __vue_inject_styles__$12,
                __vue_script__$V,
                __vue_scope_id__$12,
                __vue_is_functional_template__$12,
                __vue_module_identifier__$12,
                undefined,
                undefined
              );

            //
            var script$W = {
              name: 'ui-collapse',
              data: function data() {
                return {
                  childrens: [],
                  names: this.initModel()
                }
              },
              props: {
                accordion: Boolean,
                value: [Array, String]
              },
              watch: {
                value: function value(newVal) {
                  this.names = this.initModel();
                }
              },
              methods: {
                includes: function includes(name) {
                  return this.names.indexOf(name) !== -1
                },
                initModel: function initModel() {
                  return getType$1(this.value) === 'array' ? this.value : [this.value]
                },
                updateModel: function updateModel(name) {
                    var index = this.names.indexOf(name);
                    if (this.accordion) {
                      this.names = index === -1 ? [name] : [];
                      this.childrens.forEach(function (_) {
                        if (_.name !== name) { _.fold(); }
                      });
                    } else {
                      if (index === -1) {
                        this.names.push(name);
                      } else {
                        this.names.splice(index, 1);
                      }
                    }
                  
                  this.$emit('input', this.names);
                  this.$emit('on-change', this.names);
                },
                addChild: function addChild(vm) {
                  this.childrens.push(vm);
                }
              }
            };

            var css$O = ".ui-collapse{border-radius:3px;background-color:#f8f8f9;border:1px solid #dddee1}";
            styleInject(css$O);

            /* script */
            var __vue_script__$W = script$W;
            /* template */
            var __vue_render__$13 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { staticClass: "ui-collapse" }, [_vm._t("default")], 2)
            };
            var __vue_staticRenderFns__$13 = [];
            __vue_render__$13._withStripped = true;

              /* style */
              var __vue_inject_styles__$13 = undefined;
              /* scoped */
              var __vue_scope_id__$13 = undefined;
              /* module identifier */
              var __vue_module_identifier__$13 = undefined;
              /* functional template */
              var __vue_is_functional_template__$13 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Collapse$1 = normalizeComponent_1(
                { render: __vue_render__$13, staticRenderFns: __vue_staticRenderFns__$13 },
                __vue_inject_styles__$13,
                __vue_script__$W,
                __vue_scope_id__$13,
                __vue_is_functional_template__$13,
                __vue_module_identifier__$13,
                undefined,
                undefined
              );

            //
            var script$X = {
              components: { UiIcon: UiIcon },
              data: function data() {
                return {
                  parent: null,
                  isExpanded: false
                }
              },
              props: {
                name: String
              },
              methods: {
                handleHeaderClick: function handleHeaderClick() {
                  this.isExpanded = !this.isExpanded;
                  if (this.parent) {
                    this.parent.updateModel(this.name);
                  }
                },
                fold: function fold() {
                  this.isExpanded = false;
                }
              },
              mounted: function mounted() {
                this.parent = findParentByName(this, 'ui-collapse');
                if (this.parent) {
                  this.parent.addChild(this);
                  this.isExpanded = this.parent.includes(this.name);
                }
              }
            };

            var css$P = ".ui-collapse-item+.ui-collapse-item{border-top:1px solid #dddee1}.ui-collapse-item-header{height:38px;padding-left:32px;color:#666;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer}.ui-collapse-item-header.isExpanded .ui-collapse-item-icon{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.ui-collapse-item-icon{margin-right:3px;-webkit-transition:-webkit-transform .2s ease-in-out;transition:-webkit-transform .2s ease-in-out;transition:transform .2s ease-in-out;transition:transform .2s ease-in-out,-webkit-transform .2s ease-in-out}.ui-collapse-item-content{background-color:#fff;padding:16px;overflow:hidden}";
            styleInject(css$P);

            /* script */
            var __vue_script__$X = script$X;
            /* template */
            var __vue_render__$14 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { staticClass: "ui-collapse-item" }, [
                _c(
                  "div",
                  {
                    staticClass: "ui-collapse-item-header",
                    class: { isExpanded: _vm.isExpanded },
                    on: { click: _vm.handleHeaderClick }
                  },
                  [
                    _c("UiIcon", {
                      staticClass: "ui-collapse-item-icon",
                      attrs: { type: "arrow-right-b" }
                    }),
                    _vm._v(" "),
                    _vm._t("default")
                  ],
                  2
                ),
                _vm._v(" "),
                _c(
                  "div",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.isExpanded,
                        expression: "isExpanded"
                      }
                    ],
                    staticClass: "ui-collapse-item-content"
                  },
                  [_vm._t("content")],
                  2
                )
              ])
            };
            var __vue_staticRenderFns__$14 = [];
            __vue_render__$14._withStripped = true;

              /* style */
              var __vue_inject_styles__$14 = undefined;
              /* scoped */
              var __vue_scope_id__$14 = undefined;
              /* module identifier */
              var __vue_module_identifier__$14 = undefined;
              /* functional template */
              var __vue_is_functional_template__$14 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Panel = normalizeComponent_1(
                { render: __vue_render__$14, staticRenderFns: __vue_staticRenderFns__$14 },
                __vue_inject_styles__$14,
                __vue_script__$X,
                __vue_scope_id__$14,
                __vue_is_functional_template__$14,
                __vue_module_identifier__$14,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //

            var script$Y = {
              name: 'ui-breadcrumb',
              props: {
                separator: {
                  type: String,
                  default: '/'
                }
              }
            };

            /* script */
            var __vue_script__$Y = script$Y;

            /* template */
            var __vue_render__$15 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { staticClass: "ui-breadcrumb" }, [_vm._t("default")], 2)
            };
            var __vue_staticRenderFns__$15 = [];
            __vue_render__$15._withStripped = true;

              /* style */
              var __vue_inject_styles__$15 = undefined;
              /* scoped */
              var __vue_scope_id__$15 = undefined;
              /* module identifier */
              var __vue_module_identifier__$15 = undefined;
              /* functional template */
              var __vue_is_functional_template__$15 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Breadcrumb$1 = normalizeComponent_1(
                { render: __vue_render__$15, staticRenderFns: __vue_staticRenderFns__$15 },
                __vue_inject_styles__$15,
                __vue_script__$Y,
                __vue_scope_id__$15,
                __vue_is_functional_template__$15,
                __vue_module_identifier__$15,
                undefined,
                undefined
              );

            //
            var script$Z = {
              data: function data() {
                return { separator: '' }
              },
              props: {
                replace: Boolean,
                to: [String, Object]
              },
              computed: {
                target: function target() {
                  return !this.replace && '_blank'
                }
              },
              mounted: function mounted() {
                var parent = findParentByName(this, 'ui-breadcrumb');
                if (parent) { this.separator = parent.separator; }
              }
            };

            var css$Q = ".ui-breadcrumb-item{font-size:14px;color:#495060}.ui-breadcrumb-link{color:#495060}.ui-breadcrumb-link.notlink{font-weight:700}.ui-breadcrumb-separator{margin:0 8px;color:#dddee1}.ui-breadcrumb .ui-breadcrumb-item:last-child .ui-breadcrumb-separator{display:none}";
            styleInject(css$Q);

            /* script */
            var __vue_script__$Z = script$Z;
            /* template */
            var __vue_render__$16 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "span",
                { staticClass: "ui-breadcrumb-item" },
                [
                  _vm.to
                    ? [
                        _vm.$router
                          ? _c(
                              "router-link",
                              {
                                staticClass: "ui-breadcrumb-link",
                                attrs: { to: _vm.to, replace: _vm.replace }
                              },
                              [_vm._t("default")],
                              2
                            )
                          : _c(
                              "a",
                              {
                                staticClass: "ui-breadcrumb-link",
                                attrs: { href: _vm.to, target: _vm.target }
                              },
                              [_vm._t("default")],
                              2
                            )
                      ]
                    : _c(
                        "span",
                        { staticClass: "ui-breadcrumb-link notlink" },
                        [_vm._t("default")],
                        2
                      ),
                  _vm._v(" "),
                  _c("span", {
                    staticClass: "ui-breadcrumb-separator",
                    domProps: { innerHTML: _vm._s(_vm.separator) }
                  })
                ],
                2
              )
            };
            var __vue_staticRenderFns__$16 = [];
            __vue_render__$16._withStripped = true;

              /* style */
              var __vue_inject_styles__$16 = undefined;
              /* scoped */
              var __vue_scope_id__$16 = undefined;
              /* module identifier */
              var __vue_module_identifier__$16 = undefined;
              /* functional template */
              var __vue_is_functional_template__$16 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var BreadcrumbItem = normalizeComponent_1(
                { render: __vue_render__$16, staticRenderFns: __vue_staticRenderFns__$16 },
                __vue_inject_styles__$16,
                __vue_script__$Z,
                __vue_scope_id__$16,
                __vue_is_functional_template__$16,
                __vue_module_identifier__$16,
                undefined,
                undefined
              );

            //
            var script$_ = {
              components: { UiIcon: UiIcon },
              data: function data() {
                return {
                  trackStyle: {
                    overflow: 'hidden',
                    transition: ("transform .5s " + (this.easing)),
                    height: this.height === 'auto' ? 'auto' : ((parseInt(this.height)) + "px")
                  },
                  curIndex: this.value,
                  children: []
                }
              },
              props: {
                value: {
                  type: Number,
                  default: 0
                },
                height: {
                  type: [String, Number],
                  default: 'auto'
                },
                loop: Boolean,
                autoplay: Boolean,
                autoplaySpeed: {
                  type: Number,
                  default: 2000
                },
                dots: {
                  default: 'inside',
                  validator: function validator(value) {
                    return ['inside', 'outside','none'].indexOf(value) !== -1
                  }
                },
                radiusDot: Boolean,
                trigger: {
                  default: 'click',
                  validator: function validator(value) {
                    return ['click', 'hover'].indexOf(value) !== -1
                  }
                },
                arrow: {
                  default: 'hover',
                  validator: function validator(value) {
                    return ['hover', 'always', 'never'].indexOf(value) !== -1
                  }
                },
                easing: {
                  type: String,
                  default: 'ease'
                }
              },
              computed: {
                disabledPrev: function disabledPrev() {
                  return !this.loop && this.curIndex === 0
                },
                disabledNext: function disabledNext() {
                  return !this.loop && this.curIndex === this.children.length - 1
                }
              },
              watch: {
                value: function value(newVal) {
                  this.curIndex = newVal;
                },
                curIndex: function curIndex(newVal, oldVal) {
                  this.handleIndexChange(newVal, oldVal);
                },
                autoplay: function autoplay(newVal) {
                  if (newVal) {
                    this.startTimer();
                  } else {
                    this.stopTimer();
                  }
                }
              },
              methods: {
                toPrev: function toPrev() {
                  if (this.curIndex === 0) {
                    if (this.loop) { this.curIndex = this.children.length - 1; }
                  } else {
                    this.curIndex--;
                  }
                  this.$emit('input', this.curIndex);
                },
                toNext: function toNext() {
                  if (this.curIndex === this.children.length - 1) {
                    if (this.loop) { this.curIndex = 0; }
                  } else {
                    this.curIndex++;
                  }
                  this.$emit('input', this.curIndex);
                },
                handleIndexChange: function handleIndexChange(newVal, oldVal) {
                  this.$emit('on-change', oldVal, newVal);
                  this.trackStyle = Object.assign({}, this.trackStyle,
                    {transform: ("translateX(" + (-(newVal / this.children.length) * 100) + "%)")});
                },
                handleDotEvent: function handleDotEvent(index, event) {
                  if (
                    (this.trigger === 'click' && event.type === 'click') ||
                    (this.trigger === 'hover' && event.type === 'mouseover')
                  ) {
                    this.curIndex = index;
                    this.$emit('input', index);
                  }
                },
                startTimer: function startTimer() {
                  if (this.autoplay) { this.tid = setInterval(this.toNext, this.autoplaySpeed); }
                },
                stopTimer: function stopTimer() {
                  clearInterval(this.tid);
                },
                setTrackStyle: function setTrackStyle() {
                  this.children = findChildrensByName(this, 'ui-swiper-item');
                  var len = this.children.length;
                  this.trackStyle = Object.assign({}, this.trackStyle, {width: ((100 * len) + "%")});
                  this.children.forEach(function (item) { return item.$el.style.width = ((1 / len) * 100) + "%"; });
                  this.handleIndexChange(this.curIndex, this.curIndex);
                }
              },
              mounted: function mounted() {
                this.startTimer();
                this.$nextTick(this.setTrackStyle);
              },
              beforeDestroy: function beforeDestroy() {
                this.stopTimer();
              }
            };

            var css$R = ".ui-swiper{position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ui-swiper.hover:not(:hover) .ui-swiper-arrow,.ui-swiper.never .ui-swiper-arrow{opacity:0}.ui-swiper-arrow{width:36px;height:36px;border-radius:50%;cursor:pointer;outline:none;border:none;color:#fff;background-color:rgba(31,45,61,.11);-webkit-transition:all .2s ease;transition:all .2s ease;position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);z-index:2}.ui-swiper-arrow:hover:not(:disabled){background-color:rgba(31,45,61,.5)}.ui-swiper-arrow.prev{left:16px}.ui-swiper-arrow.next{right:16px}.ui-swiper-list{overflow:hidden}.ui-swiper-dots{width:100%;text-align:center}.ui-swiper-dots.inside{position:absolute;bottom:3px;z-index:10}.ui-swiper-dots.outside{margin-top:3px}.ui-swiper-dots.none{display:none}.ui-swiper-dots li{list-style:none;cursor:pointer;width:16px;display:inline-block;vertical-align:middle;height:3px;margin:0 2px;background-color:#8391a5;opacity:.3;-webkit-transition:all .5s ease;transition:all .5s ease}.ui-swiper-dots li:hover{opacity:.7}.ui-swiper-dots li.active{opacity:1;width:24px}.ui-swiper-dots.circle li{width:6px;height:6px;border-radius:50%}.ui-swiper-item{float:left;height:100%}";
            styleInject(css$R);

            /* script */
            var __vue_script__$_ = script$_;
            /* template */
            var __vue_render__$17 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                {
                  staticClass: "ui-swiper",
                  class: _vm.arrow,
                  on: { mouseenter: _vm.stopTimer, mouseleave: _vm.startTimer }
                },
                [
                  _c(
                    "button",
                    {
                      staticClass: "ui-swiper-arrow prev",
                      attrs: { disabled: _vm.disabledPrev },
                      on: { click: _vm.toPrev }
                    },
                    [_c("UiIcon", { attrs: { type: "chevron-left" } })],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "ui-swiper-list" }, [
                    _c("div", { style: _vm.trackStyle }, [_vm._t("default")], 2)
                  ]),
                  _vm._v(" "),
                  _c(
                    "button",
                    {
                      staticClass: "ui-swiper-arrow next",
                      attrs: { disabled: _vm.disabledNext },
                      on: { click: _vm.toNext }
                    },
                    [_c("UiIcon", { attrs: { type: "chevron-right" } })],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "ul",
                    {
                      staticClass: "ui-swiper-dots",
                      class: [_vm.dots, { circle: _vm.radiusDot }]
                    },
                    _vm._l(_vm.children.length, function(i) {
                      return _c("li", {
                        key: i,
                        class: { active: _vm.curIndex === i - 1 },
                        on: {
                          click: function($event) {
                            return _vm.handleDotEvent(i - 1, $event)
                          },
                          mouseover: function($event) {
                            return _vm.handleDotEvent(i - 1, $event)
                          }
                        }
                      })
                    }),
                    0
                  )
                ]
              )
            };
            var __vue_staticRenderFns__$17 = [];
            __vue_render__$17._withStripped = true;

              /* style */
              var __vue_inject_styles__$17 = undefined;
              /* scoped */
              var __vue_scope_id__$17 = undefined;
              /* module identifier */
              var __vue_module_identifier__$17 = undefined;
              /* functional template */
              var __vue_is_functional_template__$17 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Swiper$1 = normalizeComponent_1(
                { render: __vue_render__$17, staticRenderFns: __vue_staticRenderFns__$17 },
                __vue_inject_styles__$17,
                __vue_script__$_,
                __vue_scope_id__$17,
                __vue_is_functional_template__$17,
                __vue_module_identifier__$17,
                undefined,
                undefined
              );

            //
            //
            //

            var script$$ = {
              name: 'ui-swiper-item'
            };

            /* script */
            var __vue_script__$$ = script$$;

            /* template */
            var __vue_render__$18 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { staticClass: "ui-swiper-item" }, [_vm._t("default")], 2)
            };
            var __vue_staticRenderFns__$18 = [];
            __vue_render__$18._withStripped = true;

              /* style */
              var __vue_inject_styles__$18 = undefined;
              /* scoped */
              var __vue_scope_id__$18 = undefined;
              /* module identifier */
              var __vue_module_identifier__$18 = undefined;
              /* functional template */
              var __vue_is_functional_template__$18 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var SwiperItem = normalizeComponent_1(
                { render: __vue_render__$18, staticRenderFns: __vue_staticRenderFns__$18 },
                __vue_inject_styles__$18,
                __vue_script__$$,
                __vue_scope_id__$18,
                __vue_is_functional_template__$18,
                __vue_module_identifier__$18,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //

            var prefix = 'ui-row';
            var script$10 = {
              name: prefix,
              props: {
                gutter: {
                  type: Number,
                  default: 0
                },
                align: {
                  validator: function validator(value) {
                    return ['top', 'middle', 'bottom'].indexOf(value) !== -1
                  }
                },
                justify: {
                  validator: function validator(value) {
                    return ['start', 'end', 'center', 'space-around', 'space-between'].indexOf(value) !== -1
                  }
                },
                className: String
              },
              computed: {
                classes: function classes() {
                  var arr = [this.className, { gutter: this.gutter }];
                  if (this.align) { arr.push((prefix + "-" + (this.align))); }
                  if (this.justify) { arr.push((prefix + "-" + (this.justify))); }
                  return arr
                },
                styles: function styles() {
                  var margin = "-" + (this.gutter / 2) + "px";
                  return this.gutter ? { marginLeft: margin, marginRight: margin } : {}
                }
              }
            };

            var css$S = ".ui-row{display:-webkit-box;display:-ms-flexbox;display:flex}.ui-row-top{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.ui-row-middle{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ui-row-bottom{-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.ui-row-start{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.ui-row-end{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.ui-row-center{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.ui-row-space-around{-ms-flex-pack:distribute;justify-content:space-around}.ui-row-space-between{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}";
            styleInject(css$S);

            /* script */
            var __vue_script__$10 = script$10;
            /* template */
            var __vue_render__$19 = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "ui-row", class: _vm.classes, style: _vm.styles },
                [_vm._t("default")],
                2
              )
            };
            var __vue_staticRenderFns__$19 = [];
            __vue_render__$19._withStripped = true;

              /* style */
              var __vue_inject_styles__$19 = undefined;
              /* scoped */
              var __vue_scope_id__$19 = undefined;
              /* module identifier */
              var __vue_module_identifier__$19 = undefined;
              /* functional template */
              var __vue_is_functional_template__$19 = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Row = normalizeComponent_1(
                { render: __vue_render__$19, staticRenderFns: __vue_staticRenderFns__$19 },
                __vue_inject_styles__$19,
                __vue_script__$10,
                __vue_scope_id__$19,
                __vue_is_functional_template__$19,
                __vue_module_identifier__$19,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //

            var prefix$1 = 'ui-col';
            var script$11 = {
              props: {
                span: [Number, String],
                order: [Number, String],
                offset: [Number, String],
                push: [Number, String],
                pull: [Number, String],
                className: String,
                xs: [Number, Object],
                sm: [Number, Object],
                md: [Number, Object],
                lg: [Number, Object]
              },
              computed: {
                classes: function classes() {
                  var this$1 = this;

                  var rtnArr = [], arr = ['span', 'order', 'pull', 'push', 'offset'];
                  arr.forEach(function (_) { return this$1[_] !== undefined && rtnArr.push((prefix$1 + "-" + _ + "-" + (this$1[_]))); });
                  var sizes = ['xs', 'sm', 'md', 'lg'];
                  sizes.forEach(function (_) {
                    if (!this$1[_]) { return }
                    var options = typeof this$1[_] === 'number' ? { span: this$1[_] } : this$1[_];
                    for (var key in options) { rtnArr.push((prefix$1 + "-" + _ + "-" + key + "-" + (options[key]))); }
                  });
                  return rtnArr
                },
                styles: function styles() {
                  var ref = findParentByName(this, 'ui-row');
                  var gutter = ref.gutter;
                  var padding = (gutter / 2) + "px";
                  return gutter ? { paddingLeft: padding, paddingRight: padding } : {}
                }
              }
            };

            var css$T = ".ui-col{position:relative;word-break:break-word}.ui-col-span-0{display:none}.ui-col-span-1{width:4.16666667%}.ui-col-order-1{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.ui-col-pull-1{right:4.16666667%}.ui-col-push-1{left:4.16666667%}.ui-col-offset-1{margin-left:4.16666667%}.ui-col-span-2{width:8.33333333%}.ui-col-order-2{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.ui-col-pull-2{right:8.33333333%}.ui-col-push-2{left:8.33333333%}.ui-col-offset-2{margin-left:8.33333333%}.ui-col-span-3{width:12.5%}.ui-col-order-3{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.ui-col-pull-3{right:12.5%}.ui-col-push-3{left:12.5%}.ui-col-offset-3{margin-left:12.5%}.ui-col-span-4{width:16.66666667%}.ui-col-order-4{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.ui-col-pull-4{right:16.66666667%}.ui-col-push-4{left:16.66666667%}.ui-col-offset-4{margin-left:16.66666667%}.ui-col-span-5{width:20.83333333%}.ui-col-order-5{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5}.ui-col-pull-5{right:20.83333333%}.ui-col-push-5{left:20.83333333%}.ui-col-offset-5{margin-left:20.83333333%}.ui-col-span-6{width:25%}.ui-col-order-6{-webkit-box-ordinal-group:7;-ms-flex-order:6;order:6}.ui-col-pull-6{right:25%}.ui-col-push-6{left:25%}.ui-col-offset-6{margin-left:25%}.ui-col-span-7{width:29.16666667%}.ui-col-order-7{-webkit-box-ordinal-group:8;-ms-flex-order:7;order:7}.ui-col-pull-7{right:29.16666667%}.ui-col-push-7{left:29.16666667%}.ui-col-offset-7{margin-left:29.16666667%}.ui-col-span-8{width:33.33333333%}.ui-col-order-8{-webkit-box-ordinal-group:9;-ms-flex-order:8;order:8}.ui-col-pull-8{right:33.33333333%}.ui-col-push-8{left:33.33333333%}.ui-col-offset-8{margin-left:33.33333333%}.ui-col-span-9{width:37.5%}.ui-col-order-9{-webkit-box-ordinal-group:10;-ms-flex-order:9;order:9}.ui-col-pull-9{right:37.5%}.ui-col-push-9{left:37.5%}.ui-col-offset-9{margin-left:37.5%}.ui-col-span-10{width:41.66666667%}.ui-col-order-10{-webkit-box-ordinal-group:11;-ms-flex-order:10;order:10}.ui-col-pull-10{right:41.66666667%}.ui-col-push-10{left:41.66666667%}.ui-col-offset-10{margin-left:41.66666667%}.ui-col-span-11{width:45.83333333%}.ui-col-order-11{-webkit-box-ordinal-group:12;-ms-flex-order:11;order:11}.ui-col-pull-11{right:45.83333333%}.ui-col-push-11{left:45.83333333%}.ui-col-offset-11{margin-left:45.83333333%}.ui-col-span-12{width:50%}.ui-col-order-12{-webkit-box-ordinal-group:13;-ms-flex-order:12;order:12}.ui-col-pull-12{right:50%}.ui-col-push-12{left:50%}.ui-col-offset-12{margin-left:50%}.ui-col-span-13{width:54.16666667%}.ui-col-order-13{-webkit-box-ordinal-group:14;-ms-flex-order:13;order:13}.ui-col-pull-13{right:54.16666667%}.ui-col-push-13{left:54.16666667%}.ui-col-offset-13{margin-left:54.16666667%}.ui-col-span-14{width:58.33333333%}.ui-col-order-14{-webkit-box-ordinal-group:15;-ms-flex-order:14;order:14}.ui-col-pull-14{right:58.33333333%}.ui-col-push-14{left:58.33333333%}.ui-col-offset-14{margin-left:58.33333333%}.ui-col-span-15{width:62.5%}.ui-col-order-15{-webkit-box-ordinal-group:16;-ms-flex-order:15;order:15}.ui-col-pull-15{right:62.5%}.ui-col-push-15{left:62.5%}.ui-col-offset-15{margin-left:62.5%}.ui-col-span-16{width:66.66666667%}.ui-col-order-16{-webkit-box-ordinal-group:17;-ms-flex-order:16;order:16}.ui-col-pull-16{right:66.66666667%}.ui-col-push-16{left:66.66666667%}.ui-col-offset-16{margin-left:66.66666667%}.ui-col-span-17{width:70.83333333%}.ui-col-order-17{-webkit-box-ordinal-group:18;-ms-flex-order:17;order:17}.ui-col-pull-17{right:70.83333333%}.ui-col-push-17{left:70.83333333%}.ui-col-offset-17{margin-left:70.83333333%}.ui-col-span-18{width:75%}.ui-col-order-18{-webkit-box-ordinal-group:19;-ms-flex-order:18;order:18}.ui-col-pull-18{right:75%}.ui-col-push-18{left:75%}.ui-col-offset-18{margin-left:75%}.ui-col-span-19{width:79.16666667%}.ui-col-order-19{-webkit-box-ordinal-group:20;-ms-flex-order:19;order:19}.ui-col-pull-19{right:79.16666667%}.ui-col-push-19{left:79.16666667%}.ui-col-offset-19{margin-left:79.16666667%}.ui-col-span-20{width:83.33333333%}.ui-col-order-20{-webkit-box-ordinal-group:21;-ms-flex-order:20;order:20}.ui-col-pull-20{right:83.33333333%}.ui-col-push-20{left:83.33333333%}.ui-col-offset-20{margin-left:83.33333333%}.ui-col-span-21{width:87.5%}.ui-col-order-21{-webkit-box-ordinal-group:22;-ms-flex-order:21;order:21}.ui-col-pull-21{right:87.5%}.ui-col-push-21{left:87.5%}.ui-col-offset-21{margin-left:87.5%}.ui-col-span-22{width:91.66666667%}.ui-col-order-22{-webkit-box-ordinal-group:23;-ms-flex-order:22;order:22}.ui-col-pull-22{right:91.66666667%}.ui-col-push-22{left:91.66666667%}.ui-col-offset-22{margin-left:91.66666667%}.ui-col-span-23{width:95.83333333%}.ui-col-order-23{-webkit-box-ordinal-group:24;-ms-flex-order:23;order:23}.ui-col-pull-23{right:95.83333333%}.ui-col-push-23{left:95.83333333%}.ui-col-offset-23{margin-left:95.83333333%}.ui-col-span-24{width:100%}.ui-col-order-24{-webkit-box-ordinal-group:25;-ms-flex-order:24;order:24}.ui-col-pull-24{right:100%}.ui-col-push-24{left:100%}.ui-col-offset-24{margin-left:100%}.ui-col-xs-span-24{width:100%}.ui-col-xs-order-24{-webkit-box-ordinal-group:25;-ms-flex-order:24;order:24}.ui-col-xs-pull-24{right:100%}.ui-col-xs-push-24{left:100%}.ui-col-xs-offset-24{margin-left:100%}.ui-col-xs-span-23{width:95.83333333%}.ui-col-xs-order-23{-webkit-box-ordinal-group:24;-ms-flex-order:23;order:23}.ui-col-xs-pull-23{right:95.83333333%}.ui-col-xs-push-23{left:95.83333333%}.ui-col-xs-offset-23{margin-left:95.83333333%}.ui-col-xs-span-22{width:91.66666667%}.ui-col-xs-order-22{-webkit-box-ordinal-group:23;-ms-flex-order:22;order:22}.ui-col-xs-pull-22{right:91.66666667%}.ui-col-xs-push-22{left:91.66666667%}.ui-col-xs-offset-22{margin-left:91.66666667%}.ui-col-xs-span-21{width:87.5%}.ui-col-xs-order-21{-webkit-box-ordinal-group:22;-ms-flex-order:21;order:21}.ui-col-xs-pull-21{right:87.5%}.ui-col-xs-push-21{left:87.5%}.ui-col-xs-offset-21{margin-left:87.5%}.ui-col-xs-span-20{width:83.33333333%}.ui-col-xs-order-20{-webkit-box-ordinal-group:21;-ms-flex-order:20;order:20}.ui-col-xs-pull-20{right:83.33333333%}.ui-col-xs-push-20{left:83.33333333%}.ui-col-xs-offset-20{margin-left:83.33333333%}.ui-col-xs-span-19{width:79.16666667%}.ui-col-xs-order-19{-webkit-box-ordinal-group:20;-ms-flex-order:19;order:19}.ui-col-xs-pull-19{right:79.16666667%}.ui-col-xs-push-19{left:79.16666667%}.ui-col-xs-offset-19{margin-left:79.16666667%}.ui-col-xs-span-18{width:75%}.ui-col-xs-order-18{-webkit-box-ordinal-group:19;-ms-flex-order:18;order:18}.ui-col-xs-pull-18{right:75%}.ui-col-xs-push-18{left:75%}.ui-col-xs-offset-18{margin-left:75%}.ui-col-xs-span-17{width:70.83333333%}.ui-col-xs-order-17{-webkit-box-ordinal-group:18;-ms-flex-order:17;order:17}.ui-col-xs-pull-17{right:70.83333333%}.ui-col-xs-push-17{left:70.83333333%}.ui-col-xs-offset-17{margin-left:70.83333333%}.ui-col-xs-span-16{width:66.66666667%}.ui-col-xs-order-16{-webkit-box-ordinal-group:17;-ms-flex-order:16;order:16}.ui-col-xs-pull-16{right:66.66666667%}.ui-col-xs-push-16{left:66.66666667%}.ui-col-xs-offset-16{margin-left:66.66666667%}.ui-col-xs-span-15{width:62.5%}.ui-col-xs-order-15{-webkit-box-ordinal-group:16;-ms-flex-order:15;order:15}.ui-col-xs-pull-15{right:62.5%}.ui-col-xs-push-15{left:62.5%}.ui-col-xs-offset-15{margin-left:62.5%}.ui-col-xs-span-14{width:58.33333333%}.ui-col-xs-order-14{-webkit-box-ordinal-group:15;-ms-flex-order:14;order:14}.ui-col-xs-pull-14{right:58.33333333%}.ui-col-xs-push-14{left:58.33333333%}.ui-col-xs-offset-14{margin-left:58.33333333%}.ui-col-xs-span-13{width:54.16666667%}.ui-col-xs-order-13{-webkit-box-ordinal-group:14;-ms-flex-order:13;order:13}.ui-col-xs-pull-13{right:54.16666667%}.ui-col-xs-push-13{left:54.16666667%}.ui-col-xs-offset-13{margin-left:54.16666667%}.ui-col-xs-span-12{width:50%}.ui-col-xs-order-12{-webkit-box-ordinal-group:13;-ms-flex-order:12;order:12}.ui-col-xs-pull-12{right:50%}.ui-col-xs-push-12{left:50%}.ui-col-xs-offset-12{margin-left:50%}.ui-col-xs-span-11{width:45.83333333%}.ui-col-xs-order-11{-webkit-box-ordinal-group:12;-ms-flex-order:11;order:11}.ui-col-xs-pull-11{right:45.83333333%}.ui-col-xs-push-11{left:45.83333333%}.ui-col-xs-offset-11{margin-left:45.83333333%}.ui-col-xs-span-10{width:41.66666667%}.ui-col-xs-order-10{-webkit-box-ordinal-group:11;-ms-flex-order:10;order:10}.ui-col-xs-pull-10{right:41.66666667%}.ui-col-xs-push-10{left:41.66666667%}.ui-col-xs-offset-10{margin-left:41.66666667%}.ui-col-xs-span-9{width:37.5%}.ui-col-xs-order-9{-webkit-box-ordinal-group:10;-ms-flex-order:9;order:9}.ui-col-xs-pull-9{right:37.5%}.ui-col-xs-push-9{left:37.5%}.ui-col-xs-offset-9{margin-left:37.5%}.ui-col-xs-span-8{width:33.33333333%}.ui-col-xs-order-8{-webkit-box-ordinal-group:9;-ms-flex-order:8;order:8}.ui-col-xs-pull-8{right:33.33333333%}.ui-col-xs-push-8{left:33.33333333%}.ui-col-xs-offset-8{margin-left:33.33333333%}.ui-col-xs-span-7{width:29.16666667%}.ui-col-xs-order-7{-webkit-box-ordinal-group:8;-ms-flex-order:7;order:7}.ui-col-xs-pull-7{right:29.16666667%}.ui-col-xs-push-7{left:29.16666667%}.ui-col-xs-offset-7{margin-left:29.16666667%}.ui-col-xs-span-6{width:25%}.ui-col-xs-order-6{-webkit-box-ordinal-group:7;-ms-flex-order:6;order:6}.ui-col-xs-pull-6{right:25%}.ui-col-xs-push-6{left:25%}.ui-col-xs-offset-6{margin-left:25%}.ui-col-xs-span-5{width:20.83333333%}.ui-col-xs-order-5{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5}.ui-col-xs-pull-5{right:20.83333333%}.ui-col-xs-push-5{left:20.83333333%}.ui-col-xs-offset-5{margin-left:20.83333333%}.ui-col-xs-span-4{width:16.66666667%}.ui-col-xs-order-4{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.ui-col-xs-pull-4{right:16.66666667%}.ui-col-xs-push-4{left:16.66666667%}.ui-col-xs-offset-4{margin-left:16.66666667%}.ui-col-xs-span-3{width:12.5%}.ui-col-xs-order-3{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.ui-col-xs-pull-3{right:12.5%}.ui-col-xs-push-3{left:12.5%}.ui-col-xs-offset-3{margin-left:12.5%}.ui-col-xs-span-2{width:8.33333333%}.ui-col-xs-order-2{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.ui-col-xs-pull-2{right:8.33333333%}.ui-col-xs-push-2{left:8.33333333%}.ui-col-xs-offset-2{margin-left:8.33333333%}.ui-col-xs-span-1{width:4.16666667%}.ui-col-xs-order-1{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.ui-col-xs-pull-1{right:4.16666667%}.ui-col-xs-push-1{left:4.16666667%}.ui-col-xs-offset-1{margin-left:4.16666667%}.ui-col-xs-span-0{display:none}@media (min-width:768px){.ui-col-sm-span-24{width:100%}.ui-col-sm-order-24{-webkit-box-ordinal-group:25;-ms-flex-order:24;order:24}.ui-col-sm-pull-24{right:100%}.ui-col-sm-push-24{left:100%}.ui-col-sm-offset-24{margin-left:100%}.ui-col-sm-span-23{width:95.83333333%}.ui-col-sm-order-23{-webkit-box-ordinal-group:24;-ms-flex-order:23;order:23}.ui-col-sm-pull-23{right:95.83333333%}.ui-col-sm-push-23{left:95.83333333%}.ui-col-sm-offset-23{margin-left:95.83333333%}.ui-col-sm-span-22{width:91.66666667%}.ui-col-sm-order-22{-webkit-box-ordinal-group:23;-ms-flex-order:22;order:22}.ui-col-sm-pull-22{right:91.66666667%}.ui-col-sm-push-22{left:91.66666667%}.ui-col-sm-offset-22{margin-left:91.66666667%}.ui-col-sm-span-21{width:87.5%}.ui-col-sm-order-21{-webkit-box-ordinal-group:22;-ms-flex-order:21;order:21}.ui-col-sm-pull-21{right:87.5%}.ui-col-sm-push-21{left:87.5%}.ui-col-sm-offset-21{margin-left:87.5%}.ui-col-sm-span-20{width:83.33333333%}.ui-col-sm-order-20{-webkit-box-ordinal-group:21;-ms-flex-order:20;order:20}.ui-col-sm-pull-20{right:83.33333333%}.ui-col-sm-push-20{left:83.33333333%}.ui-col-sm-offset-20{margin-left:83.33333333%}.ui-col-sm-span-19{width:79.16666667%}.ui-col-sm-order-19{-webkit-box-ordinal-group:20;-ms-flex-order:19;order:19}.ui-col-sm-pull-19{right:79.16666667%}.ui-col-sm-push-19{left:79.16666667%}.ui-col-sm-offset-19{margin-left:79.16666667%}.ui-col-sm-span-18{width:75%}.ui-col-sm-order-18{-webkit-box-ordinal-group:19;-ms-flex-order:18;order:18}.ui-col-sm-pull-18{right:75%}.ui-col-sm-push-18{left:75%}.ui-col-sm-offset-18{margin-left:75%}.ui-col-sm-span-17{width:70.83333333%}.ui-col-sm-order-17{-webkit-box-ordinal-group:18;-ms-flex-order:17;order:17}.ui-col-sm-pull-17{right:70.83333333%}.ui-col-sm-push-17{left:70.83333333%}.ui-col-sm-offset-17{margin-left:70.83333333%}.ui-col-sm-span-16{width:66.66666667%}.ui-col-sm-order-16{-webkit-box-ordinal-group:17;-ms-flex-order:16;order:16}.ui-col-sm-pull-16{right:66.66666667%}.ui-col-sm-push-16{left:66.66666667%}.ui-col-sm-offset-16{margin-left:66.66666667%}.ui-col-sm-span-15{width:62.5%}.ui-col-sm-order-15{-webkit-box-ordinal-group:16;-ms-flex-order:15;order:15}.ui-col-sm-pull-15{right:62.5%}.ui-col-sm-push-15{left:62.5%}.ui-col-sm-offset-15{margin-left:62.5%}.ui-col-sm-span-14{width:58.33333333%}.ui-col-sm-order-14{-webkit-box-ordinal-group:15;-ms-flex-order:14;order:14}.ui-col-sm-pull-14{right:58.33333333%}.ui-col-sm-push-14{left:58.33333333%}.ui-col-sm-offset-14{margin-left:58.33333333%}.ui-col-sm-span-13{width:54.16666667%}.ui-col-sm-order-13{-webkit-box-ordinal-group:14;-ms-flex-order:13;order:13}.ui-col-sm-pull-13{right:54.16666667%}.ui-col-sm-push-13{left:54.16666667%}.ui-col-sm-offset-13{margin-left:54.16666667%}.ui-col-sm-span-12{width:50%}.ui-col-sm-order-12{-webkit-box-ordinal-group:13;-ms-flex-order:12;order:12}.ui-col-sm-pull-12{right:50%}.ui-col-sm-push-12{left:50%}.ui-col-sm-offset-12{margin-left:50%}.ui-col-sm-span-11{width:45.83333333%}.ui-col-sm-order-11{-webkit-box-ordinal-group:12;-ms-flex-order:11;order:11}.ui-col-sm-pull-11{right:45.83333333%}.ui-col-sm-push-11{left:45.83333333%}.ui-col-sm-offset-11{margin-left:45.83333333%}.ui-col-sm-span-10{width:41.66666667%}.ui-col-sm-order-10{-webkit-box-ordinal-group:11;-ms-flex-order:10;order:10}.ui-col-sm-pull-10{right:41.66666667%}.ui-col-sm-push-10{left:41.66666667%}.ui-col-sm-offset-10{margin-left:41.66666667%}.ui-col-sm-span-9{width:37.5%}.ui-col-sm-order-9{-webkit-box-ordinal-group:10;-ms-flex-order:9;order:9}.ui-col-sm-pull-9{right:37.5%}.ui-col-sm-push-9{left:37.5%}.ui-col-sm-offset-9{margin-left:37.5%}.ui-col-sm-span-8{width:33.33333333%}.ui-col-sm-order-8{-webkit-box-ordinal-group:9;-ms-flex-order:8;order:8}.ui-col-sm-pull-8{right:33.33333333%}.ui-col-sm-push-8{left:33.33333333%}.ui-col-sm-offset-8{margin-left:33.33333333%}.ui-col-sm-span-7{width:29.16666667%}.ui-col-sm-order-7{-webkit-box-ordinal-group:8;-ms-flex-order:7;order:7}.ui-col-sm-pull-7{right:29.16666667%}.ui-col-sm-push-7{left:29.16666667%}.ui-col-sm-offset-7{margin-left:29.16666667%}.ui-col-sm-span-6{width:25%}.ui-col-sm-order-6{-webkit-box-ordinal-group:7;-ms-flex-order:6;order:6}.ui-col-sm-pull-6{right:25%}.ui-col-sm-push-6{left:25%}.ui-col-sm-offset-6{margin-left:25%}.ui-col-sm-span-5{width:20.83333333%}.ui-col-sm-order-5{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5}.ui-col-sm-pull-5{right:20.83333333%}.ui-col-sm-push-5{left:20.83333333%}.ui-col-sm-offset-5{margin-left:20.83333333%}.ui-col-sm-span-4{width:16.66666667%}.ui-col-sm-order-4{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.ui-col-sm-pull-4{right:16.66666667%}.ui-col-sm-push-4{left:16.66666667%}.ui-col-sm-offset-4{margin-left:16.66666667%}.ui-col-sm-span-3{width:12.5%}.ui-col-sm-order-3{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.ui-col-sm-pull-3{right:12.5%}.ui-col-sm-push-3{left:12.5%}.ui-col-sm-offset-3{margin-left:12.5%}.ui-col-sm-span-2{width:8.33333333%}.ui-col-sm-order-2{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.ui-col-sm-pull-2{right:8.33333333%}.ui-col-sm-push-2{left:8.33333333%}.ui-col-sm-offset-2{margin-left:8.33333333%}.ui-col-sm-span-1{width:4.16666667%}.ui-col-sm-order-1{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.ui-col-sm-pull-1{right:4.16666667%}.ui-col-sm-push-1{left:4.16666667%}.ui-col-sm-offset-1{margin-left:4.16666667%}.ui-col-sm-span-0{display:none}}@media (min-width:992px){.ui-col-md-span-24{width:100%}.ui-col-md-order-24{-webkit-box-ordinal-group:25;-ms-flex-order:24;order:24}.ui-col-md-pull-24{right:100%}.ui-col-md-push-24{left:100%}.ui-col-md-offset-24{margin-left:100%}.ui-col-md-span-23{width:95.83333333%}.ui-col-md-order-23{-webkit-box-ordinal-group:24;-ms-flex-order:23;order:23}.ui-col-md-pull-23{right:95.83333333%}.ui-col-md-push-23{left:95.83333333%}.ui-col-md-offset-23{margin-left:95.83333333%}.ui-col-md-span-22{width:91.66666667%}.ui-col-md-order-22{-webkit-box-ordinal-group:23;-ms-flex-order:22;order:22}.ui-col-md-pull-22{right:91.66666667%}.ui-col-md-push-22{left:91.66666667%}.ui-col-md-offset-22{margin-left:91.66666667%}.ui-col-md-span-21{width:87.5%}.ui-col-md-order-21{-webkit-box-ordinal-group:22;-ms-flex-order:21;order:21}.ui-col-md-pull-21{right:87.5%}.ui-col-md-push-21{left:87.5%}.ui-col-md-offset-21{margin-left:87.5%}.ui-col-md-span-20{width:83.33333333%}.ui-col-md-order-20{-webkit-box-ordinal-group:21;-ms-flex-order:20;order:20}.ui-col-md-pull-20{right:83.33333333%}.ui-col-md-push-20{left:83.33333333%}.ui-col-md-offset-20{margin-left:83.33333333%}.ui-col-md-span-19{width:79.16666667%}.ui-col-md-order-19{-webkit-box-ordinal-group:20;-ms-flex-order:19;order:19}.ui-col-md-pull-19{right:79.16666667%}.ui-col-md-push-19{left:79.16666667%}.ui-col-md-offset-19{margin-left:79.16666667%}.ui-col-md-span-18{width:75%}.ui-col-md-order-18{-webkit-box-ordinal-group:19;-ms-flex-order:18;order:18}.ui-col-md-pull-18{right:75%}.ui-col-md-push-18{left:75%}.ui-col-md-offset-18{margin-left:75%}.ui-col-md-span-17{width:70.83333333%}.ui-col-md-order-17{-webkit-box-ordinal-group:18;-ms-flex-order:17;order:17}.ui-col-md-pull-17{right:70.83333333%}.ui-col-md-push-17{left:70.83333333%}.ui-col-md-offset-17{margin-left:70.83333333%}.ui-col-md-span-16{width:66.66666667%}.ui-col-md-order-16{-webkit-box-ordinal-group:17;-ms-flex-order:16;order:16}.ui-col-md-pull-16{right:66.66666667%}.ui-col-md-push-16{left:66.66666667%}.ui-col-md-offset-16{margin-left:66.66666667%}.ui-col-md-span-15{width:62.5%}.ui-col-md-order-15{-webkit-box-ordinal-group:16;-ms-flex-order:15;order:15}.ui-col-md-pull-15{right:62.5%}.ui-col-md-push-15{left:62.5%}.ui-col-md-offset-15{margin-left:62.5%}.ui-col-md-span-14{width:58.33333333%}.ui-col-md-order-14{-webkit-box-ordinal-group:15;-ms-flex-order:14;order:14}.ui-col-md-pull-14{right:58.33333333%}.ui-col-md-push-14{left:58.33333333%}.ui-col-md-offset-14{margin-left:58.33333333%}.ui-col-md-span-13{width:54.16666667%}.ui-col-md-order-13{-webkit-box-ordinal-group:14;-ms-flex-order:13;order:13}.ui-col-md-pull-13{right:54.16666667%}.ui-col-md-push-13{left:54.16666667%}.ui-col-md-offset-13{margin-left:54.16666667%}.ui-col-md-span-12{width:50%}.ui-col-md-order-12{-webkit-box-ordinal-group:13;-ms-flex-order:12;order:12}.ui-col-md-pull-12{right:50%}.ui-col-md-push-12{left:50%}.ui-col-md-offset-12{margin-left:50%}.ui-col-md-span-11{width:45.83333333%}.ui-col-md-order-11{-webkit-box-ordinal-group:12;-ms-flex-order:11;order:11}.ui-col-md-pull-11{right:45.83333333%}.ui-col-md-push-11{left:45.83333333%}.ui-col-md-offset-11{margin-left:45.83333333%}.ui-col-md-span-10{width:41.66666667%}.ui-col-md-order-10{-webkit-box-ordinal-group:11;-ms-flex-order:10;order:10}.ui-col-md-pull-10{right:41.66666667%}.ui-col-md-push-10{left:41.66666667%}.ui-col-md-offset-10{margin-left:41.66666667%}.ui-col-md-span-9{width:37.5%}.ui-col-md-order-9{-webkit-box-ordinal-group:10;-ms-flex-order:9;order:9}.ui-col-md-pull-9{right:37.5%}.ui-col-md-push-9{left:37.5%}.ui-col-md-offset-9{margin-left:37.5%}.ui-col-md-span-8{width:33.33333333%}.ui-col-md-order-8{-webkit-box-ordinal-group:9;-ms-flex-order:8;order:8}.ui-col-md-pull-8{right:33.33333333%}.ui-col-md-push-8{left:33.33333333%}.ui-col-md-offset-8{margin-left:33.33333333%}.ui-col-md-span-7{width:29.16666667%}.ui-col-md-order-7{-webkit-box-ordinal-group:8;-ms-flex-order:7;order:7}.ui-col-md-pull-7{right:29.16666667%}.ui-col-md-push-7{left:29.16666667%}.ui-col-md-offset-7{margin-left:29.16666667%}.ui-col-md-span-6{width:25%}.ui-col-md-order-6{-webkit-box-ordinal-group:7;-ms-flex-order:6;order:6}.ui-col-md-pull-6{right:25%}.ui-col-md-push-6{left:25%}.ui-col-md-offset-6{margin-left:25%}.ui-col-md-span-5{width:20.83333333%}.ui-col-md-order-5{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5}.ui-col-md-pull-5{right:20.83333333%}.ui-col-md-push-5{left:20.83333333%}.ui-col-md-offset-5{margin-left:20.83333333%}.ui-col-md-span-4{width:16.66666667%}.ui-col-md-order-4{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.ui-col-md-pull-4{right:16.66666667%}.ui-col-md-push-4{left:16.66666667%}.ui-col-md-offset-4{margin-left:16.66666667%}.ui-col-md-span-3{width:12.5%}.ui-col-md-order-3{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.ui-col-md-pull-3{right:12.5%}.ui-col-md-push-3{left:12.5%}.ui-col-md-offset-3{margin-left:12.5%}.ui-col-md-span-2{width:8.33333333%}.ui-col-md-order-2{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.ui-col-md-pull-2{right:8.33333333%}.ui-col-md-push-2{left:8.33333333%}.ui-col-md-offset-2{margin-left:8.33333333%}.ui-col-md-span-1{width:4.16666667%}.ui-col-md-order-1{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.ui-col-md-pull-1{right:4.16666667%}.ui-col-md-push-1{left:4.16666667%}.ui-col-md-offset-1{margin-left:4.16666667%}.ui-col-md-span-0{display:none}}@media (min-width:1200px){.ui-col-lg-span-24{width:100%}.ui-col-lg-order-24{-webkit-box-ordinal-group:25;-ms-flex-order:24;order:24}.ui-col-lg-pull-24{right:100%}.ui-col-lg-push-24{left:100%}.ui-col-lg-offset-24{margin-left:100%}.ui-col-lg-span-23{width:95.83333333%}.ui-col-lg-order-23{-webkit-box-ordinal-group:24;-ms-flex-order:23;order:23}.ui-col-lg-pull-23{right:95.83333333%}.ui-col-lg-push-23{left:95.83333333%}.ui-col-lg-offset-23{margin-left:95.83333333%}.ui-col-lg-span-22{width:91.66666667%}.ui-col-lg-order-22{-webkit-box-ordinal-group:23;-ms-flex-order:22;order:22}.ui-col-lg-pull-22{right:91.66666667%}.ui-col-lg-push-22{left:91.66666667%}.ui-col-lg-offset-22{margin-left:91.66666667%}.ui-col-lg-span-21{width:87.5%}.ui-col-lg-order-21{-webkit-box-ordinal-group:22;-ms-flex-order:21;order:21}.ui-col-lg-pull-21{right:87.5%}.ui-col-lg-push-21{left:87.5%}.ui-col-lg-offset-21{margin-left:87.5%}.ui-col-lg-span-20{width:83.33333333%}.ui-col-lg-order-20{-webkit-box-ordinal-group:21;-ms-flex-order:20;order:20}.ui-col-lg-pull-20{right:83.33333333%}.ui-col-lg-push-20{left:83.33333333%}.ui-col-lg-offset-20{margin-left:83.33333333%}.ui-col-lg-span-19{width:79.16666667%}.ui-col-lg-order-19{-webkit-box-ordinal-group:20;-ms-flex-order:19;order:19}.ui-col-lg-pull-19{right:79.16666667%}.ui-col-lg-push-19{left:79.16666667%}.ui-col-lg-offset-19{margin-left:79.16666667%}.ui-col-lg-span-18{width:75%}.ui-col-lg-order-18{-webkit-box-ordinal-group:19;-ms-flex-order:18;order:18}.ui-col-lg-pull-18{right:75%}.ui-col-lg-push-18{left:75%}.ui-col-lg-offset-18{margin-left:75%}.ui-col-lg-span-17{width:70.83333333%}.ui-col-lg-order-17{-webkit-box-ordinal-group:18;-ms-flex-order:17;order:17}.ui-col-lg-pull-17{right:70.83333333%}.ui-col-lg-push-17{left:70.83333333%}.ui-col-lg-offset-17{margin-left:70.83333333%}.ui-col-lg-span-16{width:66.66666667%}.ui-col-lg-order-16{-webkit-box-ordinal-group:17;-ms-flex-order:16;order:16}.ui-col-lg-pull-16{right:66.66666667%}.ui-col-lg-push-16{left:66.66666667%}.ui-col-lg-offset-16{margin-left:66.66666667%}.ui-col-lg-span-15{width:62.5%}.ui-col-lg-order-15{-webkit-box-ordinal-group:16;-ms-flex-order:15;order:15}.ui-col-lg-pull-15{right:62.5%}.ui-col-lg-push-15{left:62.5%}.ui-col-lg-offset-15{margin-left:62.5%}.ui-col-lg-span-14{width:58.33333333%}.ui-col-lg-order-14{-webkit-box-ordinal-group:15;-ms-flex-order:14;order:14}.ui-col-lg-pull-14{right:58.33333333%}.ui-col-lg-push-14{left:58.33333333%}.ui-col-lg-offset-14{margin-left:58.33333333%}.ui-col-lg-span-13{width:54.16666667%}.ui-col-lg-order-13{-webkit-box-ordinal-group:14;-ms-flex-order:13;order:13}.ui-col-lg-pull-13{right:54.16666667%}.ui-col-lg-push-13{left:54.16666667%}.ui-col-lg-offset-13{margin-left:54.16666667%}.ui-col-lg-span-12{width:50%}.ui-col-lg-order-12{-webkit-box-ordinal-group:13;-ms-flex-order:12;order:12}.ui-col-lg-pull-12{right:50%}.ui-col-lg-push-12{left:50%}.ui-col-lg-offset-12{margin-left:50%}.ui-col-lg-span-11{width:45.83333333%}.ui-col-lg-order-11{-webkit-box-ordinal-group:12;-ms-flex-order:11;order:11}.ui-col-lg-pull-11{right:45.83333333%}.ui-col-lg-push-11{left:45.83333333%}.ui-col-lg-offset-11{margin-left:45.83333333%}.ui-col-lg-span-10{width:41.66666667%}.ui-col-lg-order-10{-webkit-box-ordinal-group:11;-ms-flex-order:10;order:10}.ui-col-lg-pull-10{right:41.66666667%}.ui-col-lg-push-10{left:41.66666667%}.ui-col-lg-offset-10{margin-left:41.66666667%}.ui-col-lg-span-9{width:37.5%}.ui-col-lg-order-9{-webkit-box-ordinal-group:10;-ms-flex-order:9;order:9}.ui-col-lg-pull-9{right:37.5%}.ui-col-lg-push-9{left:37.5%}.ui-col-lg-offset-9{margin-left:37.5%}.ui-col-lg-span-8{width:33.33333333%}.ui-col-lg-order-8{-webkit-box-ordinal-group:9;-ms-flex-order:8;order:8}.ui-col-lg-pull-8{right:33.33333333%}.ui-col-lg-push-8{left:33.33333333%}.ui-col-lg-offset-8{margin-left:33.33333333%}.ui-col-lg-span-7{width:29.16666667%}.ui-col-lg-order-7{-webkit-box-ordinal-group:8;-ms-flex-order:7;order:7}.ui-col-lg-pull-7{right:29.16666667%}.ui-col-lg-push-7{left:29.16666667%}.ui-col-lg-offset-7{margin-left:29.16666667%}.ui-col-lg-span-6{width:25%}.ui-col-lg-order-6{-webkit-box-ordinal-group:7;-ms-flex-order:6;order:6}.ui-col-lg-pull-6{right:25%}.ui-col-lg-push-6{left:25%}.ui-col-lg-offset-6{margin-left:25%}.ui-col-lg-span-5{width:20.83333333%}.ui-col-lg-order-5{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5}.ui-col-lg-pull-5{right:20.83333333%}.ui-col-lg-push-5{left:20.83333333%}.ui-col-lg-offset-5{margin-left:20.83333333%}.ui-col-lg-span-4{width:16.66666667%}.ui-col-lg-order-4{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.ui-col-lg-pull-4{right:16.66666667%}.ui-col-lg-push-4{left:16.66666667%}.ui-col-lg-offset-4{margin-left:16.66666667%}.ui-col-lg-span-3{width:12.5%}.ui-col-lg-order-3{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.ui-col-lg-pull-3{right:12.5%}.ui-col-lg-push-3{left:12.5%}.ui-col-lg-offset-3{margin-left:12.5%}.ui-col-lg-span-2{width:8.33333333%}.ui-col-lg-order-2{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.ui-col-lg-pull-2{right:8.33333333%}.ui-col-lg-push-2{left:8.33333333%}.ui-col-lg-offset-2{margin-left:8.33333333%}.ui-col-lg-span-1{width:4.16666667%}.ui-col-lg-order-1{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.ui-col-lg-pull-1{right:4.16666667%}.ui-col-lg-push-1{left:4.16666667%}.ui-col-lg-offset-1{margin-left:4.16666667%}.ui-col-lg-span-0{display:none}}";
            styleInject(css$T);

            /* script */
            var __vue_script__$11 = script$11;
            /* template */
            var __vue_render__$1a = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "ui-col", class: _vm.classes, style: _vm.styles },
                [_vm._t("default")],
                2
              )
            };
            var __vue_staticRenderFns__$1a = [];
            __vue_render__$1a._withStripped = true;

              /* style */
              var __vue_inject_styles__$1a = undefined;
              /* scoped */
              var __vue_scope_id__$1a = undefined;
              /* module identifier */
              var __vue_module_identifier__$1a = undefined;
              /* functional template */
              var __vue_is_functional_template__$1a = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Col = normalizeComponent_1(
                { render: __vue_render__$1a, staticRenderFns: __vue_staticRenderFns__$1a },
                __vue_inject_styles__$1a,
                __vue_script__$11,
                __vue_scope_id__$1a,
                __vue_is_functional_template__$1a,
                __vue_module_identifier__$1a,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //

            var script$12 = {
              data: function data() {
                return {
                  hasSider: false
                }
              },
              mounted: function mounted() {
                this.hasSider = this.$children.some(function (_) { return _.$options.name === 'ui-sider'; });
              }
            };

            var css$U = ".ui-layout{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-flex:1;-ms-flex:auto;flex:auto;background-color:#f5f7f9}.ui-layout.hasSider{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.ui-layout-footer,.ui-layout-header{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto}.ui-layout-header{height:64px;line-height:64px;padding:0 50px;background-color:#495060}.ui-layout-footer{background-color:#f5f7f9;padding:24px 50px;color:#495060;font-size:14px}.ui-layout-content{-webkit-box-flex:1;-ms-flex:auto;flex:auto}.ui-layout-sider{position:relative;background-color:#495060;min-width:0}.ui-layout-sider,.ui-layout-sider-trigger{-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.ui-layout-sider-trigger{position:fixed;bottom:0;text-align:center;cursor:pointer;height:48px;line-height:48px;color:#fff;background-color:#515a6e;z-index:11}.ui-layout-sider-trigger-icon{-webkit-transition:all .2s;transition:all .2s}.ui-layout-sider-trigger-icon.isCollapsed{-webkit-transform:rotate(180deg);transform:rotate(180deg)}";
            styleInject(css$U);

            /* script */
            var __vue_script__$12 = script$12;
            /* template */
            var __vue_render__$1b = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "ui-layout", class: [{ hasSider: _vm.hasSider }] },
                [_vm._t("default")],
                2
              )
            };
            var __vue_staticRenderFns__$1b = [];
            __vue_render__$1b._withStripped = true;

              /* style */
              var __vue_inject_styles__$1b = undefined;
              /* scoped */
              var __vue_scope_id__$1b = undefined;
              /* module identifier */
              var __vue_module_identifier__$1b = undefined;
              /* functional template */
              var __vue_is_functional_template__$1b = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Layout$1 = normalizeComponent_1(
                { render: __vue_render__$1b, staticRenderFns: __vue_staticRenderFns__$1b },
                __vue_inject_styles__$1b,
                __vue_script__$12,
                __vue_scope_id__$1b,
                __vue_is_functional_template__$1b,
                __vue_module_identifier__$1b,
                undefined,
                undefined
              );

            /* script */

            /* template */
            var __vue_render__$1c = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { staticClass: "ui-layout-header" }, [_vm._t("default")], 2)
            };
            var __vue_staticRenderFns__$1c = [];
            __vue_render__$1c._withStripped = true;

              /* style */
              var __vue_inject_styles__$1c = undefined;
              /* scoped */
              var __vue_scope_id__$1c = undefined;
              /* module identifier */
              var __vue_module_identifier__$1c = undefined;
              /* functional template */
              var __vue_is_functional_template__$1c = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Header = normalizeComponent_1(
                { render: __vue_render__$1c, staticRenderFns: __vue_staticRenderFns__$1c },
                __vue_inject_styles__$1c,
                {},
                __vue_scope_id__$1c,
                __vue_is_functional_template__$1c,
                __vue_module_identifier__$1c,
                undefined,
                undefined
              );

            /* script */

            /* template */
            var __vue_render__$1d = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { staticClass: "ui-layout-content" }, [_vm._t("default")], 2)
            };
            var __vue_staticRenderFns__$1d = [];
            __vue_render__$1d._withStripped = true;

              /* style */
              var __vue_inject_styles__$1d = undefined;
              /* scoped */
              var __vue_scope_id__$1d = undefined;
              /* module identifier */
              var __vue_module_identifier__$1d = undefined;
              /* functional template */
              var __vue_is_functional_template__$1d = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Content = normalizeComponent_1(
                { render: __vue_render__$1d, staticRenderFns: __vue_staticRenderFns__$1d },
                __vue_inject_styles__$1d,
                {},
                __vue_scope_id__$1d,
                __vue_is_functional_template__$1d,
                __vue_module_identifier__$1d,
                undefined,
                undefined
              );

            /* script */

            /* template */
            var __vue_render__$1e = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { staticClass: "ui-layout-footer" }, [_vm._t("default")], 2)
            };
            var __vue_staticRenderFns__$1e = [];
            __vue_render__$1e._withStripped = true;

              /* style */
              var __vue_inject_styles__$1e = undefined;
              /* scoped */
              var __vue_scope_id__$1e = undefined;
              /* module identifier */
              var __vue_module_identifier__$1e = undefined;
              /* functional template */
              var __vue_is_functional_template__$1e = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Footer = normalizeComponent_1(
                { render: __vue_render__$1e, staticRenderFns: __vue_staticRenderFns__$1e },
                __vue_inject_styles__$1e,
                {},
                __vue_scope_id__$1e,
                __vue_is_functional_template__$1e,
                __vue_module_identifier__$1e,
                undefined,
                undefined
              );

            //
            var script$13 = {
              name: 'ui-sider',
              components: { UiIcon: UiIcon },
              data: function data() {
                return {
                  isCollapsed: this.value || this.defaultCollapsed
                }
              },
              props: {
                value: Boolean,
                width: {
                  type: [Number, String],
                  default: 200
                },
                collapsible: Boolean,
                collapsedWidth: {
                  type: Number,
                  default: 64
                },
                hideTrigger: Boolean,
                defaultCollapsed: Boolean,
                reverseArrow: Boolean
              },
              computed: {
                styles: function styles() {
                  var condition = this.defaultCollapsed ? true : this.collapsible;
                  var size = (condition && this.isCollapsed ? this.collapsedWidth : this.width) + "px";
                  return { width: size, minWidth: size, maxWidth: size, flex: ("0 0 " + size) }
                },
                showTrigger: function showTrigger() {
                  return !this.hideTrigger && this.collapsible
                },
                triggerIcon: function triggerIcon() {
                  return this.reverseArrow ? 'ios-arrow-forward' : 'ios-arrow-back'
                }
              },
              watch: {
                value: function value(newVal) {
                  this.isCollapsed = newVal;
                }
              },
              methods: {
                toggleCollapse: function toggleCollapse() {
                  if (!(this.defaultCollapsed || this.collapsible)) { return }
                  this.isCollapsed = !this.isCollapsed;
                  this.$emit('input', this.isCollapsed);
                  this.$emit('on-change', this.isCollapsed);
                }
              }
            };

            /* script */
            var __vue_script__$13 = script$13;

            /* template */
            var __vue_render__$1f = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "ui-layout-sider", style: _vm.styles },
                [
                  _vm._t("default"),
                  _vm._v(" "),
                  _vm.showTrigger
                    ? _c(
                        "div",
                        {
                          staticClass: "ui-layout-sider-trigger",
                          style: { width: _vm.styles.width },
                          on: { click: _vm.toggleCollapse }
                        },
                        [
                          _c("UiIcon", {
                            staticClass: "ui-layout-sider-trigger-icon",
                            class: { isCollapsed: _vm.isCollapsed },
                            attrs: { type: "ios-arrow-back" }
                          })
                        ],
                        1
                      )
                    : _vm._e()
                ],
                2
              )
            };
            var __vue_staticRenderFns__$1f = [];
            __vue_render__$1f._withStripped = true;

              /* style */
              var __vue_inject_styles__$1f = undefined;
              /* scoped */
              var __vue_scope_id__$1f = undefined;
              /* module identifier */
              var __vue_module_identifier__$1f = undefined;
              /* functional template */
              var __vue_is_functional_template__$1f = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Sider = normalizeComponent_1(
                { render: __vue_render__$1f, staticRenderFns: __vue_staticRenderFns__$1f },
                __vue_inject_styles__$1f,
                __vue_script__$13,
                __vue_scope_id__$1f,
                __vue_is_functional_template__$1f,
                __vue_module_identifier__$1f,
                undefined,
                undefined
              );

            //
            var script$14 = {
              components: { UiButton: Button$1 },
              data: function data() {
                return { checked: false, parent: null }
              },
              props: {
                value: Boolean,
                label: [String, Number],
                disabled: Boolean,
                size: {
                  validator: function validator(value) {
                    return ['large', 'small', 'default'].indexOf(value) !== -1
                  }
                },
                trueValue: {
                  type: [String, Number, Boolean],
                  default: true
                },
                falseValue: {
                  type: [String, Number, Boolean],
                  default: false
                }
              },
              watch: {
                checked: function checked(newVal) {
                  this.$emit('on-change', newVal);
                }
              },
              computed: {
                isButtonType: function isButtonType() {
                  return this.parent && this.parent.isButtonType
                }
              },
              methods: {
                handleClick: function handleClick() {
                  if (this.disabled) { return }
                  if (this.parent) {
                    this.parent.updateValue(this);
                  } else {
                    this.checked = true;
                    this.$emit('input', this.trueValue);
                  }
                }
              },
              mounted: function mounted() {
                this.parent = findParentByName(this, 'ui-radio-group');
                if (this.parent) {
                  this.parent.addChild(this);
                  this.checked = this.parent.value === this.label;
                } else {
                  this.checked = this.value === this.trueValue;
                }
              }
            };

            var css$V = ".ui-radio{display:inline-block}.ui-radio:not(.isButtonType)+.ui-radio{margin-left:10px}.ui-radio-group .isVertical .ui-radio{width:100%;margin-left:0}.ui-radio-group .isVertical .ui-radio-inner{float:left}.ui-radio-group.isButtonType+.ui-radio-group{margin-left:10px}.ui-radio-group.large .ui-radio-inner,.ui-radio-inner.large{font-size:14px}.ui-radio-group.large .ui-radio-inner .ui-radio-box,.ui-radio-inner.large .ui-radio-box{width:18px;height:18px;margin-right:6px}.ui-radio-group.large .ui-radio-inner .ui-radio-box:before,.ui-radio-inner.large .ui-radio-box:before{width:10px;height:10px}.ui-radio-button.ui-button:not(:disabled){background-color:#fff}.ui-radio-button.ui-button:not(:disabled):hover{border-color:#dddee1}.ui-radio-button.ui-button:not(:disabled).checked{border-color:#2d8cf0}.ui-radio-inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;outline:none;font-size:12px}.ui-radio-inner.disabled{cursor:not-allowed}.ui-radio-inner.disabled .ui-radio-box{border-color:#dddee1;background-color:#f3f3f3}.ui-radio-inner.disabled .ui-radio-box:before{background-color:#ccc}.ui-radio-inner:focus:not(.disabled) .ui-radio-box{-webkit-box-shadow:0 0 0 2px rgba(45,140,240,.2);box-shadow:0 0 0 2px rgba(45,140,240,.2)}.ui-radio-box{width:14px;height:14px;min-width:14px;border-radius:50%;margin-right:4px;padding:2px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;border:1px solid #dddee1}.ui-radio-box,.ui-radio-box:before{-webkit-transition:all .3s ease;transition:all .3s ease}.ui-radio-box:before{content:\"\";width:8px;height:8px;border-radius:50%;-webkit-transform:scale(0);transform:scale(0);background-color:#2d8cf0}.ui-radio-box.checked{border-color:#2d8cf0}.ui-radio-box.checked:before{-webkit-transform:scale(1);transform:scale(1)}";
            styleInject(css$V);

            /* script */
            var __vue_script__$14 = script$14;
            /* template */
            var __vue_render__$1g = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "ui-radio", class: { isButtonType: _vm.isButtonType } },
                [
                  _vm.isButtonType
                    ? _c(
                        "UiButton",
                        {
                          staticClass: "ui-radio-button",
                          class: { checked: _vm.checked },
                          attrs: { disabled: _vm.disabled },
                          on: { click: _vm.handleClick }
                        },
                        [_vm._t("default", [_vm._v(_vm._s(_vm.label))])],
                        2
                      )
                    : _c(
                        "div",
                        {
                          staticClass: "ui-radio-inner",
                          class: [{ disabled: _vm.disabled }, _vm.size],
                          attrs: { tabindex: "-1" },
                          on: { click: _vm.handleClick }
                        },
                        [
                          _c("span", {
                            staticClass: "ui-radio-box",
                            class: { checked: _vm.checked }
                          }),
                          _vm._v(" "),
                          _c(
                            "span",
                            { staticClass: "ui-radio-label" },
                            [_vm._t("default", [_vm._v(_vm._s(_vm.label))])],
                            2
                          )
                        ]
                      )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$1g = [];
            __vue_render__$1g._withStripped = true;

              /* style */
              var __vue_inject_styles__$1g = undefined;
              /* scoped */
              var __vue_scope_id__$1g = undefined;
              /* module identifier */
              var __vue_module_identifier__$1g = undefined;
              /* functional template */
              var __vue_is_functional_template__$1g = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Radio$1 = normalizeComponent_1(
                { render: __vue_render__$1g, staticRenderFns: __vue_staticRenderFns__$1g },
                __vue_inject_styles__$1g,
                __vue_script__$14,
                __vue_scope_id__$1g,
                __vue_is_functional_template__$1g,
                __vue_module_identifier__$1g,
                undefined,
                undefined
              );

            //
            var script$15 = {
              name: 'ui-radio-group',
              components: { UiButtonGroup: ButtonGroup },
              data: function data() {
                return { checkedValue: this.value, children: [] }
              },
              props: {
                value: [String, Number],
                type: {
                  validator: function validator(value) {
                    return value === 'button'
                  }
                },
                size: {
                  validator: function validator(value) {
                    return ['large', 'small', 'default'].indexOf(value) !== -1
                  }
                },
                vertical: Boolean
              },
              computed: {
                isButtonType: function isButtonType() {
                  return this.type === 'button'
                },
                isVertical: function isVertical() {
                  return this.vertical && !this.isButtonType
                }
              },
              watch: {
                value: function value(newVal) {
                  this.checkedValue = newVal;
                }
              },
              methods: {
                addChild: function addChild(vm) {
                  this.children.push(vm);
                },
                updateValue: function updateValue(vm) {
                  this.children.forEach(function (_) { return _.checked = false; });
                  vm.checked = true;
                  this.checkedValue = vm.label;
                  this.$emit('input', vm.label);
                  this.$emit('on-change', vm.label);
                }
              }
            };

            /* script */
            var __vue_script__$15 = script$15;

            /* template */
            var __vue_render__$1h = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _vm.isButtonType
                ? _c(
                    "UiButtonGroup",
                    {
                      staticClass: "ui-radio-group",
                      class: [{ isButtonType: _vm.isButtonType }, _vm.size]
                    },
                    [_vm._t("default")],
                    2
                  )
                : _c(
                    "div",
                    {
                      staticClass: "ui-radio-group",
                      class: [{ isVertical: _vm.isVertical }, _vm.size]
                    },
                    [_vm._t("default")],
                    2
                  )
            };
            var __vue_staticRenderFns__$1h = [];
            __vue_render__$1h._withStripped = true;

              /* style */
              var __vue_inject_styles__$1h = undefined;
              /* scoped */
              var __vue_scope_id__$1h = undefined;
              /* module identifier */
              var __vue_module_identifier__$1h = undefined;
              /* functional template */
              var __vue_is_functional_template__$1h = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var RadioGroup = normalizeComponent_1(
                { render: __vue_render__$1h, staticRenderFns: __vue_staticRenderFns__$1h },
                __vue_inject_styles__$1h,
                __vue_script__$15,
                __vue_scope_id__$1h,
                __vue_is_functional_template__$1h,
                __vue_module_identifier__$1h,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //

            var script$16 = {
              data: function data() {
                return {
                  hasOpenSlot: false,
                  hasCloseSlot: false,
                  isChecked: this.value === this.trueValue
                }
              },
              props:{
                value: Boolean,
                size: {
                  validator: function validator(value) {
                    return ['large', 'default','small'].indexOf(value) !== -1
                  }
                },
                disabled: Boolean,
                trueValue: {
                  type: [String, Number, Boolean],
                  default: true
                },
                falseValue: {
                  type: [String, Number, Boolean],
                  default: false
                }
              },
              watch: {
                value: function value(newVal) {
                  this.isChecked = newVal === this.trueValue;
                }
              },
              methods: {
                handleClick: function handleClick() {
                  if (this.disabled) { return }
                  this.isChecked = !this.isChecked;
                  this.$emit('on-change', this.isChecked);
                  this.$emit('input', this.isChecked ? this.trueValue : this.falseValue);
                }
              },
              mounted: function mounted() {
                this.hasOpenSlot = this.$slots.open !== undefined;
                this.hasCloseSlot = this.$slots.close !== undefined;
              }
            };

            var css$W = ".ui-switch{width:48px;height:24px;border-radius:12px;display:inline-block;background-color:#ccc;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;cursor:pointer;vertical-align:middle;-webkit-transition:all .3s;transition:all .3s}.ui-switch.large{width:60px}.ui-switch.small{width:24px;height:12px}.ui-switch.small:after{width:10px;height:10px;top:1px;left:1px}.ui-switch.small.isChecked:after{left:calc(100% - 11px)}.ui-switch:after{content:\"\";position:absolute;width:20px;height:20px;border-radius:10px;top:2px;left:2px;background-color:#fff;-webkit-transition:all .3s;transition:all .3s}.ui-switch.isChecked{background-color:#2d8cf0}.ui-switch.isChecked:after{left:calc(100% - 22px)}.ui-switch.isChecked .ui-switch-inner{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.ui-switch.disabled{cursor:not-allowed;background-color:#f3f3f3}.ui-switch.disabled:after{background-color:#ccc}.ui-switch-inner{height:100%;padding:0 8px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;color:#fff}";
            styleInject(css$W);

            /* script */
            var __vue_script__$16 = script$16;
            /* template */
            var __vue_render__$1i = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "span",
                {
                  staticClass: "ui-switch",
                  class: [{ isChecked: _vm.isChecked, disabled: _vm.disabled }, _vm.size],
                  on: { click: _vm.handleClick }
                },
                [
                  _vm.hasOpenSlot || _vm.hasCloseSlot
                    ? _c(
                        "span",
                        { staticClass: "ui-switch-inner" },
                        [_vm.isChecked ? _vm._t("open") : _vm._t("close")],
                        2
                      )
                    : _vm._e()
                ]
              )
            };
            var __vue_staticRenderFns__$1i = [];
            __vue_render__$1i._withStripped = true;

              /* style */
              var __vue_inject_styles__$1i = undefined;
              /* scoped */
              var __vue_scope_id__$1i = undefined;
              /* module identifier */
              var __vue_module_identifier__$1i = undefined;
              /* functional template */
              var __vue_is_functional_template__$1i = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var ISwitch = normalizeComponent_1(
                { render: __vue_render__$1i, staticRenderFns: __vue_staticRenderFns__$1i },
                __vue_inject_styles__$1i,
                __vue_script__$16,
                __vue_scope_id__$1i,
                __vue_is_functional_template__$1i,
                __vue_module_identifier__$1i,
                undefined,
                undefined
              );

            //
            var script$17 = {
              name: 'ui-tabs',
              components: { UiIcon: UiIcon, UiCloseIconButton: CloseIconButton, RenderCell: RenderCell },
              data: function data() {
                return {
                  tabPanes: [],
                  activeTab: this.value
                }
              },
              props: {
                value: String,
                type: {
                  default: 'line',
                  validator: function validator(value) {
                    return ['line', 'card'].indexOf(value) !== -1
                  }
                },
                size: {
                  validator: function validator(value) {
                    return ['default', 'small'].indexOf(value) !== -1
                  }
                },
                closable: Boolean,
                animated: {
                  type: Boolean,
                  default: true
                },
                captureFocus: Boolean
              },
              computed: {
                contentStyle: function contentStyle() {
                  var this$1 = this;

                  var len = this.tabPanes.length, styles = { width: ((len * 100) + "%") };
                  var index = this.tabPanes.findIndex(function (_) { return _.key === this$1.activeTab; });
                  return index === -1 ? styles : Object.assign({}, styles, {transform: ("translateX(" + (-index / len * 100) + "%)")})
                }
              },
              watch: {
                value: function value(newVal) {
                  this.activeTab = newVal;
                },
                tabPanes: function tabPanes(newVal) {
                  var this$1 = this;

                  if ((this.activeTab === undefined || newVal.every(function (_) { return _.key !== this$1.activeTab; })) && newVal.length) {
                    this.activeTab = newVal[0].key;
                  }
                }
              },
              methods: {
                addPane: function addPane(vm) {
                  this.tabPanes.push(vm);
                  if (vm.key === undefined) { vm.key = this.tabPanes.length - 1; }
                },
                removePane: function removePane(vm) {
                  this.tabPanes.splice(this.tabPanes.indexOf(vm), 1);
                },
                handleNavItemClick: function handleNavItemClick(item) {
                  this.activeTab = item.key;
                  this.$emit('input', this.activeTab);
                },
                deleteItem: function deleteItem(item) {
                  this.$emit('on-tab-remove', item.key);
                },
                isRenderFunc: function isRenderFunc(label) {
                  return typeof label === 'function'
                },
                canClose: function canClose(item) {
                  return item.closable === false ? false : this.closable && this.type === 'card'
                }
              }
            };

            var css$X = ".ui-tabs{position:relative;overflow:hidden}.ui-tabs.line.small .ui-tabs-nav{font-size:12px}.ui-tabs.card .ui-tabs-nav-item{background-color:#f8f8f9;border:1px solid #dddee1;border-radius:4px 4px 0 0}.ui-tabs.card .ui-tabs-nav-item+.ui-tabs-nav-item{margin-left:4px}.ui-tabs.card .ui-tabs-nav-item.active{background-color:#fff;border-bottom-color:transparent}.ui-tabs-bar{position:relative;margin-bottom:16px;border-bottom:1px solid #dddee1}.ui-tabs-nav{display:inline-block;font-size:14px;list-style:none;position:relative;bottom:-1px}.ui-tabs-nav-item{display:inline-block;padding:7px 16px;cursor:pointer;border-bottom:2px solid transparent;-webkit-transition:color .3s ease-in-out;transition:color .3s ease-in-out}.ui-tabs-nav-item+.ui-tabs-nav-item{margin-left:16px}.ui-tabs-nav-item.active,.ui-tabs-nav-item:hover{color:#2d8cf0}.ui-tabs-nav-item.active{border-bottom-color:#2d8cf0}.ui-tabs-nav-item.disabled{pointer-events:none;color:#ccc}.ui-tabs-nav-item.active .ui-tabs-close,.ui-tabs-nav-item:hover .ui-tabs-close{width:14px}.ui-tabs-icon{margin-right:8px}.ui-tabs-close{width:0;height:22px;text-align:right;vertical-align:middle;position:relative;top:-1px;-webkit-transition:width .3s;transition:width .3s}.ui-tabs-close,.ui-tabs-content{overflow:hidden}.ui-tabs-content.animated{-webkit-transition:-webkit-transform .3s ease-in-out;transition:-webkit-transform .3s ease-in-out;transition:transform .3s ease-in-out;transition:transform .3s ease-in-out,-webkit-transform .3s ease-in-out}.ui-tabs-extra{float:right;margin-left:5px}.ui-tab-pane{float:left}";
            styleInject(css$X);

            /* script */
            var __vue_script__$17 = script$17;
            /* template */
            var __vue_render__$1j = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { staticClass: "ui-tabs", class: [_vm.size, _vm.type] }, [
                _c("div", { staticClass: "ui-tabs-bar" }, [
                  _c(
                    "ul",
                    { staticClass: "ui-tabs-nav" },
                    _vm._l(_vm.tabPanes, function(item) {
                      return _c(
                        "li",
                        {
                          key: item.key,
                          staticClass: "ui-tabs-nav-item",
                          class: {
                            active: item.key === _vm.activeTab,
                            disabled: item.disabled
                          },
                          on: {
                            click: function($event) {
                              return _vm.handleNavItemClick(item)
                            }
                          }
                        },
                        [
                          item.icon
                            ? _c("UiIcon", {
                                staticClass: "ui-tabs-icon",
                                attrs: { type: item.icon }
                              })
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.isRenderFunc(item.label) ? void 0 : _vm._e(),
                          _vm._v(" "),
                          _vm.isRenderFunc(item.label)
                            ? _c("RenderCell", { attrs: { render: item.label } })
                            : [_vm._v(_vm._s(item.label))],
                          _vm._v(" "),
                          _vm.canClose(item)
                            ? _c("UiCloseIconButton", {
                                staticClass: "ui-tabs-close",
                                nativeOn: {
                                  click: function($event) {
                                    $event.stopPropagation();
                                    return _vm.deleteItem(item)
                                  }
                                }
                              })
                            : _vm._e()
                        ],
                        2
                      )
                    }),
                    0
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "ui-tabs-extra" }, [_vm._t("extra")], 2)
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  {
                    staticClass: "ui-tabs-content",
                    class: { animated: _vm.animated },
                    style: _vm.contentStyle
                  },
                  [_vm._t("default")],
                  2
                )
              ])
            };
            var __vue_staticRenderFns__$1j = [];
            __vue_render__$1j._withStripped = true;

              /* style */
              var __vue_inject_styles__$1j = undefined;
              /* scoped */
              var __vue_scope_id__$1j = undefined;
              /* module identifier */
              var __vue_module_identifier__$1j = undefined;
              /* functional template */
              var __vue_is_functional_template__$1j = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Tabs$1 = normalizeComponent_1(
                { render: __vue_render__$1j, staticRenderFns: __vue_staticRenderFns__$1j },
                __vue_inject_styles__$1j,
                __vue_script__$17,
                __vue_scope_id__$1j,
                __vue_is_functional_template__$1j,
                __vue_module_identifier__$1j,
                undefined,
                undefined
              );

            //
            var script$18 = {
              data: function data() {
                return {
                  key: this.name,
                  parent: null
                }
              },
              props: {
                name: String,
                label: [String, Function],
                icon: String,
                disabled: Boolean,
                closable: {
                  type: Boolean,
                  default: null
                }
              },
              computed: {
                styles: function styles() {
                  return this.parent ? { width: (((1 / this.parent.tabPanes.length) * 100) + "%") } : {}
                }
              },
              mounted: function mounted() {
                this.parent = findParentByName(this, 'ui-tabs');
                if (this.parent) {
                  this.parent.addPane(this);
                }
              },
              beforeDestroy: function beforeDestroy() {
                this.$el.remove();
                this.parent && this.parent.removePane(this);
              }
            };

            /* script */
            var __vue_script__$18 = script$18;

            /* template */
            var __vue_render__$1k = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "ui-tab-pane", style: _vm.styles },
                [_vm._t("default")],
                2
              )
            };
            var __vue_staticRenderFns__$1k = [];
            __vue_render__$1k._withStripped = true;

              /* style */
              var __vue_inject_styles__$1k = undefined;
              /* scoped */
              var __vue_scope_id__$1k = undefined;
              /* module identifier */
              var __vue_module_identifier__$1k = undefined;
              /* functional template */
              var __vue_is_functional_template__$1k = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var TabPane = normalizeComponent_1(
                { render: __vue_render__$1k, staticRenderFns: __vue_staticRenderFns__$1k },
                __vue_inject_styles__$1k,
                __vue_script__$18,
                __vue_scope_id__$1k,
                __vue_is_functional_template__$1k,
                __vue_module_identifier__$1k,
                undefined,
                undefined
              );

            //
            var script$19 = {
              components: { UiButton: Button$1, UiCheckbox: Checkbox$1, UiInput: Input$1, UiIcon: UiIcon },
              data: function data() {
                return {
                  selectAllOfLeft: false,
                  selectAllOfRight: false,
                  leftSearchValue: '',
                  rightSearchValue: '',
                  selectedData: { left: [], right: [] },
                  hasSlot: false
                }
              },
              props: {
                data: {
                  type: Array,
                  default: function () { return []; }
                },
                targetKeys: {
                  type: Array,
                  default: function () { return []; }
                },
                renderFormat: Function,
                selectedKeys: {
                  type: Array,
                  default: function () { return []; }
                },
                boxStyle: {
                  type: Object,
                  default: function () { return ({}); }
                },
                listStyle: {
                  type: Object,
                  default: function () { return ({}); }
                },
                titles: {
                  type: Array,
                  default: function () { return ['源列表', '目标列表']; }
                },
                operations: {
                  type: Array,
                  default: function () { return []; }
                },
                filterable: Boolean,
                filterPlaceholder: {
                  type: String,
                  default: '请输入搜索内容'
                },
                filterMethod: Function,
                notFoundText: {
                  type: String,
                  default: '列表为空'
                }
              },
              computed: {
                convertData: function convertData() {
                  var this$1 = this;

                  var rtnData = { left: [], right: [] };
                  this.data.forEach(function (_) {
                    var item = Object.assign({}, _, {checked: this$1.selectedKeys.indexOf(_.key) !== -1});
                    rtnData[this$1.targetKeys.indexOf(_.key) === -1 ? 'left' : 'right'].push(item);
                  });
                  return rtnData
                },
                leftData: function leftData() {
                  return this.convertData.left
                },
                rightData: function rightData() {
                  return this.convertData.right
                },
                searchData: function searchData() {
                  var this$1 = this;

                  return {
                    left: this.filterMethod ? 
                      this.filterMethod(this.leftData, this.leftSearchValue) : 
                      this.leftData.filter(function (_) { return _.label && _.label.indexOf(this$1.leftSearchValue) !== -1; }),
                    right: this.filterMethod ? 
                      this.filterMethod(this.rightData, this.rightSearchValue) : 
                      this.rightData.filter(function (_) { return _.label && _.label.indexOf(this$1.rightSearchValue) !== -1; })
                  }
                },
                leftTargetData: function leftTargetData() {
                  return this.leftSearchValue ? this.searchData.left : this.leftData
                },
                rightTargetData: function rightTargetData() {
                  return this.rightSearchValue ? this.searchData.right : this.rightData
                },
                leftCountText: function leftCountText() {
                  var selectedCount = this.selectedData.left.length;
                  return selectedCount ? (selectedCount + "/" + (this.leftData.length)) : this.leftData.length
                },
                rightCountText: function rightCountText() {
                  var selectedCount = this.selectedData.right.length;
                  return selectedCount ? (selectedCount + "/" + (this.rightData.length)) : this.rightData.length
                },
                disabledLeft: function disabledLeft() {
                  return !this.selectedData.right.length
                },
                disabledRight: function disabledRight() {
                  return !this.selectedData.left.length
                },
                diaabledSelectAllOfLeft: function diaabledSelectAllOfLeft() {
                  return this.leftData.every(function (_) { return _.disabled; })
                },
                disabledSelectAllOfRight: function disabledSelectAllOfRight() {
                  return this.rightData.every(function (_) { return _.disabled; })
                }
              },
              watch: {
                targetKeys: function targetKeys(newVal) {
                  this.setSelectedData();
                }
              },
              methods: {
                renderItem: function renderItem(item) {
                  return this.renderFormat ? this.renderFormat(item) : item.label || item.key
                },
                setSelectedData: function setSelectedData() {
                  var left = this.leftData.filter(function (_) { return _.checked; });
                  var right = this.rightData.filter(function (_) { return _.checked; });
                  this.selectedData = { left: left, right: right };
                  this.selectAllOfLeft = this.leftData.every(function (_) { return _.disabled || _.checked; });
                  this.selectAllOfRight = this.rightData.every(function (_) { return _.disabled || _.checked; });
                  if (this.leftData.every(function (_) { return _.disabled; })) {
                    this.selectAllOfLeft = false;
                  }
                  if (this.rightData.every(function (_) { return _.disabled; })) {
                    this.selectAllOfRight = false;
                  }
                },
                handleSelectedChange: function handleSelectedChange() {
                  this.setSelectedData();
                  var ref = this.selectedData;
                  var left = ref.left;
                  var right = ref.right;
                  this.$emit('on-selected-change', left.map(function (_) { return _.key; }), right.map(function (_) { return _.key; }));
                },
                toggleSelectAllOfLeft: function toggleSelectAllOfLeft(checked) {
                  this.leftData.forEach(function (_) { return !_.disabled && (_.checked = checked); });
                  this.handleSelectedChange();
                },
                toggleSelectAllOfRight: function toggleSelectAllOfRight(checked) {
                  this.rightData.forEach(function (_) { return !_.disabled && (_.checked = checked); });
                  this.handleSelectedChange();
                },
                moveToLeft: function moveToLeft() {
                  var moveKeys = this.selectedData.right.map(function (_) { return _.key; });
                  var targetKeys = this.rightData.filter(function (_) { return moveKeys.indexOf(_.key) === -1; }).map(function (_) { return _.key; });
                  this.$emit('on-change', targetKeys, 'left', moveKeys);
                },
                moveToRight: function moveToRight() {
                  var moveKeys = this.selectedData.left.map(function (_) { return _.key; });
                  var targetKeys = this.rightData.map(function (_) { return _.key; }).concat(moveKeys);
                  this.$emit('on-change', targetKeys, 'right', moveKeys);
                }
              },
              mounted: function mounted() {
                this.setSelectedData();
                this.hasSlot = this.$slots.default !== undefined;
              }
            };

            var css$Y = ".ui-transfer .ui-checkbox-button{margin-right:12px}.ui-transfer-list{display:inline-block;width:180px;font-size:12px;vertical-align:middle;border:1px solid #dddee1;border-radius:3px}.ui-transfer-list-header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:8px 16px;background-color:#f8f8f9;border-bottom:1px solid #dddee1}.ui-transfer-search{padding:8px 8px 0}.ui-transfer-list-content{height:180px;overflow:auto;padding:4px 0}.ui-transfer-list-content-item .ui-checkbox{width:100%;padding:7px 16px;margin-right:0;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;-webkit-transition:background-color .2s ease-in-out;transition:background-color .2s ease-in-out}.ui-transfer-list-content-item .ui-checkbox:hover:not(.disabled){background-color:#f3f3f3}.ui-transfer-list-content-empty{text-align:center;color:#bbbec4}.ui-transfer-list-footer{border-top:1px solid #dddee1}.ui-transfer-operation{display:inline-block;margin:0 16px;vertical-align:middle}.ui-transfer-operation .ui-button{display:block;border-radius:3px;padding:0 7px}.ui-transfer-operation .ui-button+.ui-button{margin-top:12px}";
            styleInject(css$Y);

            /* script */
            var __vue_script__$19 = script$19;
            /* template */
            var __vue_render__$1l = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { staticClass: "ui-transfer" }, [
                _c("div", { staticClass: "ui-transfer-list", style: _vm.boxStyle }, [
                  _c(
                    "div",
                    { staticClass: "ui-transfer-list-header" },
                    [
                      _c(
                        "ui-checkbox",
                        {
                          attrs: { disabled: _vm.diaabledSelectAllOfLeft },
                          on: { "on-change": _vm.toggleSelectAllOfLeft },
                          model: {
                            value: _vm.selectAllOfLeft,
                            callback: function($$v) {
                              _vm.selectAllOfLeft = $$v;
                            },
                            expression: "selectAllOfLeft"
                          }
                        },
                        [_vm._v("\n        " + _vm._s(_vm.titles[0]) + "\n      ")]
                      ),
                      _vm._v(" "),
                      _c("span", [_vm._v(_vm._s(_vm.leftCountText))])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "ui-transfer-list-body" }, [
                    _vm.filterable
                      ? _c(
                          "div",
                          { staticClass: "ui-transfer-search" },
                          [
                            _c("UiInput", {
                              attrs: {
                                size: "small",
                                clearable: "",
                                placeholder: _vm.filterPlaceholder
                              },
                              model: {
                                value: _vm.leftSearchValue,
                                callback: function($$v) {
                                  _vm.leftSearchValue =
                                    typeof $$v === "string" ? $$v.trim() : $$v;
                                },
                                expression: "leftSearchValue"
                              }
                            })
                          ],
                          1
                        )
                      : _vm._e(),
                    _vm._v(" "),
                    _c(
                      "ul",
                      { staticClass: "ui-transfer-list-content", style: _vm.listStyle },
                      [
                        _vm.leftTargetData.length
                          ? _vm._l(_vm.leftTargetData, function(item) {
                              return _c(
                                "li",
                                {
                                  key: item.key,
                                  staticClass: "ui-transfer-list-content-item",
                                  attrs: { title: _vm.renderItem(item) }
                                },
                                [
                                  _c(
                                    "ui-checkbox",
                                    {
                                      attrs: { disabled: item.disabled },
                                      on: { "on-change": _vm.handleSelectedChange },
                                      model: {
                                        value: item.checked,
                                        callback: function($$v) {
                                          _vm.$set(item, "checked", $$v);
                                        },
                                        expression: "item.checked"
                                      }
                                    },
                                    [
                                      _vm._v(
                                        "\n              " +
                                          _vm._s(_vm.renderItem(item)) +
                                          "\n            "
                                      )
                                    ]
                                  )
                                ],
                                1
                              )
                            })
                          : _c("li", { staticClass: "ui-transfer-list-content-empty" }, [
                              _vm._v(_vm._s(_vm.notFoundText))
                            ])
                      ],
                      2
                    )
                  ]),
                  _vm._v(" "),
                  _vm.hasSlot
                    ? _c(
                        "div",
                        { staticClass: "ui-transfer-list-footer" },
                        [_vm._t("default")],
                        2
                      )
                    : _vm._e()
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "ui-transfer-operation" },
                  [
                    _vm.operations[0]
                      ? _c(
                          "ui-button",
                          {
                            attrs: {
                              type: "primary",
                              size: "small",
                              disabled: _vm.disabledLeft
                            },
                            on: { click: _vm.moveToLeft }
                          },
                          [
                            _c("UiIcon", { attrs: { type: "ios-arrow-left" } }),
                            _vm._v("\n      " + _vm._s(_vm.operations[0]) + "\n    ")
                          ],
                          1
                        )
                      : _c("ui-button", {
                          attrs: {
                            type: "primary",
                            size: "small",
                            icon: "ios-arrow-left",
                            disabled: _vm.disabledLeft
                          },
                          on: { click: _vm.moveToLeft }
                        }),
                    _vm._v(" "),
                    _vm.operations[1]
                      ? _c(
                          "ui-button",
                          {
                            attrs: {
                              type: "primary",
                              size: "small",
                              disabled: _vm.disabledRight
                            },
                            on: { click: _vm.moveToRight }
                          },
                          [
                            _vm._v("\n      " + _vm._s(_vm.operations[1]) + "\n      "),
                            _c("UiIcon", { attrs: { type: "ios-arrow-right" } })
                          ],
                          1
                        )
                      : _c("ui-button", {
                          attrs: {
                            type: "primary",
                            size: "small",
                            icon: "ios-arrow-right",
                            disabled: _vm.disabledRight
                          },
                          on: { click: _vm.moveToRight }
                        })
                  ],
                  1
                ),
                _vm._v(" "),
                _c("div", { staticClass: "ui-transfer-list", style: _vm.boxStyle }, [
                  _c(
                    "div",
                    { staticClass: "ui-transfer-list-header" },
                    [
                      _c(
                        "ui-checkbox",
                        {
                          attrs: { disabled: _vm.disabledSelectAllOfRight },
                          on: { "on-change": _vm.toggleSelectAllOfRight },
                          model: {
                            value: _vm.selectAllOfRight,
                            callback: function($$v) {
                              _vm.selectAllOfRight = $$v;
                            },
                            expression: "selectAllOfRight"
                          }
                        },
                        [_vm._v("\n        " + _vm._s(_vm.titles[1]) + "\n      ")]
                      ),
                      _vm._v(" "),
                      _c("span", [_vm._v(_vm._s(_vm.rightCountText))])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "ui-transfer-list-body" }, [
                    _vm.filterable
                      ? _c(
                          "div",
                          { staticClass: "ui-transfer-search" },
                          [
                            _c("UiInput", {
                              attrs: {
                                size: "small",
                                clearable: "",
                                placeholder: _vm.filterPlaceholder
                              },
                              model: {
                                value: _vm.rightSearchValue,
                                callback: function($$v) {
                                  _vm.rightSearchValue =
                                    typeof $$v === "string" ? $$v.trim() : $$v;
                                },
                                expression: "rightSearchValue"
                              }
                            })
                          ],
                          1
                        )
                      : _vm._e(),
                    _vm._v(" "),
                    _c(
                      "ul",
                      { staticClass: "ui-transfer-list-content", style: _vm.listStyle },
                      [
                        _vm.rightTargetData.length
                          ? _vm._l(_vm.rightTargetData, function(item) {
                              return _c(
                                "li",
                                {
                                  key: item.key,
                                  staticClass: "ui-transfer-list-content-item",
                                  attrs: { title: _vm.renderItem(item) }
                                },
                                [
                                  _c(
                                    "ui-checkbox",
                                    {
                                      attrs: { disabled: item.disabled },
                                      on: { "on-change": _vm.handleSelectedChange },
                                      model: {
                                        value: item.checked,
                                        callback: function($$v) {
                                          _vm.$set(item, "checked", $$v);
                                        },
                                        expression: "item.checked"
                                      }
                                    },
                                    [
                                      _vm._v(
                                        "\n              " +
                                          _vm._s(_vm.renderItem(item)) +
                                          "\n            "
                                      )
                                    ]
                                  )
                                ],
                                1
                              )
                            })
                          : _c("li", { staticClass: "ui-transfer-list-content-empty" }, [
                              _vm._v(_vm._s(_vm.notFoundText))
                            ])
                      ],
                      2
                    )
                  ]),
                  _vm._v(" "),
                  _vm.hasSlot
                    ? _c(
                        "div",
                        { staticClass: "ui-transfer-list-footer" },
                        [_vm._t("default")],
                        2
                      )
                    : _vm._e()
                ])
              ])
            };
            var __vue_staticRenderFns__$1l = [];
            __vue_render__$1l._withStripped = true;

              /* style */
              var __vue_inject_styles__$1l = undefined;
              /* scoped */
              var __vue_scope_id__$1l = undefined;
              /* module identifier */
              var __vue_module_identifier__$1l = undefined;
              /* functional template */
              var __vue_is_functional_template__$1l = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Transfer$1 = normalizeComponent_1(
                { render: __vue_render__$1l, staticRenderFns: __vue_staticRenderFns__$1l },
                __vue_inject_styles__$1l,
                __vue_script__$19,
                __vue_scope_id__$1l,
                __vue_is_functional_template__$1l,
                __vue_module_identifier__$1l,
                undefined,
                undefined
              );

            //
            var script$1a = {
              components: { UiIcon: UiIcon },
              data: function data() {
                return {
                  inputValue: this.value,
                  tempValue: this.value
                }
              },
              props: {
                value: {
                  type: Number,
                  default: 0
                },
                count: {
                  type: Number,
                  default: 5
                },
                allowHalf: Boolean,
                disabled: Boolean,
                showText: Boolean
              },
              watch: {
                value: function value(newVal) {
                  this.inputValue = newVal;
                }
              },
              methods: {
                handleMouseenter: function handleMouseenter(i, isFull) {
                  if ( isFull === void 0 ) isFull = true;

                  if (this.disabled) { return }
                  this.tempValue = isFull ? i : i - .5;
                },
                handleMouseleave: function handleMouseleave() {
                  this.tempValue = this.inputValue;
                },
                handleClick: function handleClick(i, isFull) {
                  if ( isFull === void 0 ) isFull = true;

                  if (this.disabled) { return }
                  this.inputValue = isFull ? i : i - .5;
                  this.$emit('input', this.inputValue);
                  this.$emit('on-change', this.inputValue);
                },
                isActive: function isActive(i, isFull) {
                  if ( isFull === void 0 ) isFull = true;

                  return i <= this.tempValue && i <= this.inputValue + (isFull ? 0 : .5)
                }
              }
            };

            var css$Z = ".ui-rate,.ui-rate-stars{display:inline-block}.ui-rate-stars{list-style:none;vertical-align:middle}.ui-rate-star-item{display:inline-block;position:relative;color:#e9e9e9;margin-right:8px;font-size:20px}.ui-rate-star-half{position:absolute;top:0;left:0;width:50%;overflow:hidden}.ui-rate-icon{-webkit-transition:color .2s ease-in-out;transition:color .2s ease-in-out}.ui-rate-icon:not(.disabled){cursor:pointer}.ui-rate-icon.active:not(.hover),.ui-rate-icon.hover{color:#ffa929}.ui-rate-text{display:inline-block;vertical-align:middle;margin-left:8px}";
            styleInject(css$Z);

            /* script */
            var __vue_script__$1a = script$1a;
            /* template */
            var __vue_render__$1m = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { staticClass: "ui-rate" }, [
                _c(
                  "ul",
                  { staticClass: "ui-rate-stars" },
                  _vm._l(_vm.count, function(i) {
                    return _c(
                      "li",
                      { key: i, staticClass: "ui-rate-star-item" },
                      [
                        _c("UiIcon", {
                          staticClass: "ui-rate-icon",
                          class: {
                            active: _vm.isActive(i),
                            hover: i <= _vm.tempValue,
                            disabled: _vm.disabled
                          },
                          attrs: { type: "star" },
                          on: {
                            click: function($event) {
                              return _vm.handleClick(i)
                            }
                          },
                          nativeOn: {
                            mouseenter: function($event) {
                              return _vm.handleMouseenter(i)
                            },
                            mouseleave: function($event) {
                              return _vm.handleMouseleave($event)
                            }
                          }
                        }),
                        _vm._v(" "),
                        _vm.allowHalf
                          ? _c(
                              "div",
                              {
                                ref: "starHalf",
                                refInFor: true,
                                staticClass: "ui-rate-star-half"
                              },
                              [
                                _c("UiIcon", {
                                  staticClass: "ui-rate-icon",
                                  class: {
                                    active: _vm.isActive(i, false),
                                    hover: i <= _vm.tempValue + 0.5,
                                    disabled: _vm.disabled
                                  },
                                  attrs: { type: "star" },
                                  on: {
                                    click: function($event) {
                                      return _vm.handleClick(i, false)
                                    }
                                  },
                                  nativeOn: {
                                    mouseenter: function($event) {
                                      return _vm.handleMouseenter(i, false)
                                    },
                                    mouseleave: function($event) {
                                      return _vm.handleMouseleave($event)
                                    }
                                  }
                                })
                              ],
                              1
                            )
                          : _vm._e()
                      ],
                      1
                    )
                  }),
                  0
                ),
                _vm._v(" "),
                _vm.showText
                  ? _c(
                      "span",
                      { staticClass: "ui-rate-text" },
                      [_vm._t("default", [_vm._v(_vm._s(_vm.inputValue) + " 星")])],
                      2
                    )
                  : _vm._e()
              ])
            };
            var __vue_staticRenderFns__$1m = [];
            __vue_render__$1m._withStripped = true;

              /* style */
              var __vue_inject_styles__$1m = undefined;
              /* scoped */
              var __vue_scope_id__$1m = undefined;
              /* module identifier */
              var __vue_module_identifier__$1m = undefined;
              /* functional template */
              var __vue_is_functional_template__$1m = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Rate$1 = normalizeComponent_1(
                { render: __vue_render__$1m, staticRenderFns: __vue_staticRenderFns__$1m },
                __vue_inject_styles__$1m,
                __vue_script__$1a,
                __vue_scope_id__$1m,
                __vue_is_functional_template__$1m,
                __vue_module_identifier__$1m,
                undefined,
                undefined
              );

            //
            var script$1b = {
              components: { UiIcon: UiIcon, UiInput: Input$1 },
              data: function data() {
                return {
                  inputValue: this.setValue(this.value)
                }
              },
              props: {
                max: {
                  type: Number,
                  default: Infinity
                },
                min: {
                  type: Number,
                  default: -Infinity
                },
                value: {
                  type: [Number, String],
                  default: 1
                },
                step: {
                  type: Number,
                  default: 1
                },
                size: {
                  validator: function validator(value) {
                    return ['large', 'small', 'default'].indexOf(value) !== -1
                  }
                },
                disabled: Boolean,
                placeholder: String,
                formatter: Function,
                parser: Function,
                readonly: Boolean,
                editable: {
                  type: Boolean,
                  default: true
                },
                precision: Number,
                elementId: String
              },
              computed: {
                disabledAdd: function disabledAdd() {
                  return +this.inputValue + this.step > this.max
                },
                disabledMinus: function disabledMinus() {
                  return +this.inputValue - this.step < this.min
                },
                prec: function prec() {
                  var s = this.step.toString().split('.')[1];
                  var digits = s ? s.length : 0;
                  return this.precision || digits
                }
              },
              watch: {
                inputValue: function inputValue(newVal, oldVal) {
                  var this$1 = this;

                  if (!newVal) { return }
                  if (newVal.toString().split('').reverse()[0] === '.') { return }
                  this.$nextTick(function () { return this$1.$refs.UiInput.$el.querySelector('input').value = newVal; });
                  this.$emit('input', +newVal);
                },
                value: function value(newVal) {
                  this.inputValue = this.setValue(newVal);
                }
              },
              methods: {
                setValue: function setValue(val) {
                  return Math.min(Math.max(+val, this.min), this.max)
                },
                add: function add() {
                  if (this.readonly) { return }
                  if (+this.inputValue + this.step <= this.max) {
                    this.inputValue = (+this.inputValue + this.step).toFixed(this.prec);
                  }
                },
                minus: function minus() {
                  if (this.readonly) { return }
                  if (+this.inputValue - this.step >= this.min) {
                    this.inputValue = (+this.inputValue - this.step).toFixed(this.prec);
                  }
                },
                handleKeydown: function handleKeydown(event) {
                  if (event.keyCode === 40) {
                    event.preventDefault();
                    this.minus();
                  } else if (event.keyCode === 38) {
                    event.preventDefault();
                    this.add();
                  }
                },
                handleKeypress: function handleKeypress(event) {
                  var ref = event.target;
                  var value = ref.value;
                  if (event.keyCode === 46) {
                    if (value.length === 0 || value.indexOf('.') !== -1) {
                      return event.preventDefault()
                    }
                  }
                  if (event.keyCode && (event.keyCode < 48 || event.keyCode > 57) && event.keyCode != 8 && event.keyCode != 46) {
                    return event.preventDefault()
                  }
                },
                handleBlur: function handleBlur() {
                  this.inputValue = this.setValue(this.inputValue);
                }
              }
            };

            var css$_ = ".ui-input-number{display:inline-block;width:80px;background-color:#fff;position:relative}.ui-input-number:hover .ui-input input{border-color:#2d8cf0}.ui-input-number:hover .ui-input-number-actions{opacity:1}.ui-input-number-actions{position:absolute;top:1px;right:1px;bottom:1px;width:22px;border-radius:0 4px 4px 0;border-left:1px solid #dddee1;opacity:0;background-color:#fff;-webkit-transition:opacity .2s ease-in-out;transition:opacity .2s ease-in-out}.ui-input-number-action{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;height:50%;color:#999;font-size:14px}.ui-input-number-action+.ui-input-number-action{border-top:1px solid #dddee1}.ui-input-number-action.disabled{opacity:.72;color:#ccc;cursor:not-allowed}";
            styleInject(css$_);

            /* script */
            var __vue_script__$1b = script$1b;
            /* template */
            var __vue_render__$1n = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "ui-input-number" },
                [
                  _c("UiInput", {
                    ref: "UiInput",
                    attrs: {
                      elementId: _vm.elementId,
                      size: _vm.size,
                      disabled: _vm.disabled,
                      readonly: _vm.readonly || !_vm.editable
                    },
                    on: {
                      "on-keydown": _vm.handleKeydown,
                      "on-keypress": _vm.handleKeypress,
                      "on-blur": _vm.handleBlur
                    },
                    model: {
                      value: _vm.inputValue,
                      callback: function($$v) {
                        _vm.inputValue = $$v;
                      },
                      expression: "inputValue"
                    }
                  }),
                  _vm._v(" "),
                  !_vm.disabled
                    ? _c("div", { staticClass: "ui-input-number-actions" }, [
                        _c(
                          "a",
                          {
                            staticClass: "ui-input-number-action",
                            class: { disabled: _vm.disabledAdd },
                            on: { click: _vm.add }
                          },
                          [_c("UiIcon", { attrs: { type: "ios-arrow-up" } })],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "a",
                          {
                            staticClass: "ui-input-number-action",
                            class: { disabled: _vm.disabledMinus },
                            on: { click: _vm.minus }
                          },
                          [_c("UiIcon", { attrs: { type: "ios-arrow-down" } })],
                          1
                        )
                      ])
                    : _vm._e()
                ],
                1
              )
            };
            var __vue_staticRenderFns__$1n = [];
            __vue_render__$1n._withStripped = true;

              /* style */
              var __vue_inject_styles__$1n = undefined;
              /* scoped */
              var __vue_scope_id__$1n = undefined;
              /* module identifier */
              var __vue_module_identifier__$1n = undefined;
              /* functional template */
              var __vue_is_functional_template__$1n = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var InputNumber$1 = normalizeComponent_1(
                { render: __vue_render__$1n, staticRenderFns: __vue_staticRenderFns__$1n },
                __vue_inject_styles__$1n,
                __vue_script__$1b,
                __vue_scope_id__$1n,
                __vue_is_functional_template__$1n,
                __vue_module_identifier__$1n,
                undefined,
                undefined
              );

            //
            var script$1c = {
              data: function data() {
                return { styles: {}, parent: null }
              },
              props: { visible: Boolean, parentName: String },
              computed: {
                multiple: function multiple() {
                  return this.parent && this.parent.multiple
                }
              },
              watch: {
                /**
                 * 可见时，更新层索引和位置信息
                 */
                visible: function visible(newVal) {
                  if (!newVal) { return }
                  this.styles = Object.assign({}, {zIndex: setMaxZIndex()}, this.getPosition());
                }
              },
              methods: {
                /**
                 * 获取位置信息
                 */
                getPosition: function getPosition() {
                  if (!this.parent) { return {} }
                  var offset = getOffset(this.parent.$el);
                  return { minWidth: ((offset.width) + "px"), top: ((offset.top + offset.height) + "px"), left: ((offset.left) + "px") }
                },
                /**
                 * 更新位置，仅可见时更新
                 */
                updatePosition: function updatePosition() {
                  if (this.visible) {
                    this.styles = Object.assign({}, this.styles, this.getPosition());
                  }
                }
              },
              /**
               * 挂载完成后，将挂载元素插入文档主体尾部
               */
              mounted: function mounted() {
                document.body.appendChild(this.$el);
                this.parent = findParentByName(this, this.parentName || 'ui-select');
              },
              /**
               * 注销之前，移除挂载元素
               */
              beforeDestroy: function beforeDestroy() {
                this.$el.parentNode && this.$el.parentNode.removeChild(this.$el);
              }
            };

            var css$$ = ".ui-select-dropdown{max-height:200px;overflow:auto;margin:5px 0;padding:5px 0;background-color:#fff;border-radius:4px;-webkit-box-shadow:0 1px 6px rgba(0,0,0,.2);box-shadow:0 1px 6px rgba(0,0,0,.2);position:absolute}.ui-select-empty{text-align:center;font-size:14px;color:#bbbec4}";
            styleInject(css$$);

            /* script */
            var __vue_script__$1c = script$1c;
            /* template */
            var __vue_render__$1o = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("transition", { attrs: { name: "ui-dropdown" } }, [
                _c(
                  "div",
                  {
                    directives: [
                      {
                        name: "resize",
                        rawName: "v-resize",
                        value: _vm.updatePosition,
                        expression: "updatePosition"
                      },
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.visible,
                        expression: "visible"
                      }
                    ],
                    staticClass: "ui-select-dropdown",
                    class: { multiple: _vm.multiple },
                    style: _vm.styles
                  },
                  [
                    _c("div", { staticClass: "ui-select-empty" }, [_vm._t("empty")], 2),
                    _vm._v(" "),
                    _vm._t("default")
                  ],
                  2
                )
              ])
            };
            var __vue_staticRenderFns__$1o = [];
            __vue_render__$1o._withStripped = true;

              /* style */
              var __vue_inject_styles__$1o = undefined;
              /* scoped */
              var __vue_scope_id__$1o = undefined;
              /* module identifier */
              var __vue_module_identifier__$1o = undefined;
              /* functional template */
              var __vue_is_functional_template__$1o = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var UiDrop = normalizeComponent_1(
                { render: __vue_render__$1o, staticRenderFns: __vue_staticRenderFns__$1o },
                __vue_inject_styles__$1o,
                __vue_script__$1c,
                __vue_scope_id__$1o,
                __vue_is_functional_template__$1o,
                __vue_module_identifier__$1o,
                undefined,
                undefined
              );

            //

            // 目标选项列表组件
            var currentSelect = null;

            /**
             * 关闭目标选项列表下拉框
             * @param {MouseEvent} event
             */
            function closeSelect(event) {
              if (!(currentSelect && currentSelect.isCollapsed)) { return }
              var domSelect = findParentByClassName(event.target, 'ui-select');
              var isDropdown = hasClassNameOfParent(event.target, 'ui-select-dropdown');
              var isDisabled = domSelect && domSelect.classList.contains('disabled');
              if (isDropdown || (domSelect && !isDisabled)) { return }
              currentSelect.$data.isCollapsed = false;
            }

            /**
             * 添加窗口单击事件监听器
             */
            function addDocClickListener() {
              // console.log('监听器被添加')
              window.addEventListener('click', closeSelect);
            }

            addDocClickListener();

            var script$1d = {
              name: 'ui-select',
              components: { UiTag: Tag$1, UiIcon: UiIcon, UiOptionList: UiDrop },
              data: function data() {
                return {
                  isCollapsed: false, // 是否展开下拉列表
                  selectedItem: {}, // 选择的item，单选
                  selectedItems: [], // 选择的items，多选
                  children: [], // Option组件数组
                  searchValue: '' // 搜索值
                }
              },
              props: {
                value: [String, Number, Array],
                multiple: Boolean,
                disabled: Boolean,
                clearable: Boolean,
                filterable: Boolean,
                remote: Boolean,
                remoteMethod: Function,
                loading: Boolean,
                loadingText: {
                  type: String,
                  default: '加载中'
                },
                label: [String, Number, Array],
                size: {
                  validator: function validator(value) {
                    return ['large', 'small', 'default'].indexOf(value) !== -1
                  }
                },
                placeholder: {
                  type: String,
                  default: '请选择'
                },
                notFoundText: {
                  type: String,
                  default: '无匹配数据'
                },
                placement: {
                  default: 'bottom',
                  validator: function validator(value) {
                    return ['bottom', 'top'].indexOf(value) !== -1
                  }
                }
              },
              computed: {
                /**
                 * 单选选中的标签
                 */
                selectedLabelOfSingle: function selectedLabelOfSingle() {
                  return this.selectedItem.label || this.selectedItem.value
                },
                /**
                 * 是否显示清除按钮
                 */
                showClear: function showClear() {
                  return this.clearable && (this.multiple ? this.selectedItems.length : this.selectedItem.value)
                },
                isEmpty: function isEmpty() {
                  return this.children.every(function (_) { return _.isDelete; })
                },
                multipleInputStyles: function multipleInputStyles() {
                  return this.selectedItems.length ? { width: '20px' } : {}
                },
                multiplePlaceholder: function multiplePlaceholder() {
                  return this.selectedItems.length === 0 && this.placeholder
                },
                searchText: function searchText() {
                  return this.searchValue.replace(/\s/gm, function (val) { return '&nbsp;'; })
                }
              },
              watch: {
                /**
                 * 值改变
                 */
                value: function value(newVal) {
                  this.updateModel(newVal);
                },
                /**
                 * 选择的值改变，单选
                 */
                selectedItem: function selectedItem(newVal) {
                  this.syncModel();
                },
                /**
                 * 选择的值改变，多选
                 */
                selectedItems: function selectedItems(newVal) {
                  var this$1 = this;

                  if (this.isCollapsed) {
                    this.$nextTick(function () { return this$1.$refs.UiOptionList.updatePosition(); });
                  }
                },
                /**
                 * 搜索值改变
                 */
                searchValue: function searchValue(newVal) {
                  var this$1 = this;

                  if (!this.filterable) { return }
                  // 远程搜索
                  if (this.remote) {
                    this.remoteMethod && this.remoteMethod(newVal);
                  // 本地搜索
                  } else {
                    var _newVal = newVal.toLowerCase();
                    this.children.forEach(function (_) {
                      var _val = ('' + _.value).toLowerCase();
                      var _label = _.label === undefined ? '' : ('' + _.label).toLowerCase();
                      _.$data.isDelete = _val.indexOf(_newVal) === -1 && _label.indexOf(_newVal) === -1;
                    });
                  }
                  if (!this.multiple) { return }
                  // 更新文本框框宽度
                  this.$nextTick(function () {
                    this$1.$refs.Input.style.width = 
                      newVal || this$1.selectedItems.length ? 
                      Math.min(this$1.$refs.SearchText.offsetWidth, this$1.$el.offsetWidth - 25) + 'px' : '';
                  });
                }
              },
              methods: {
                /**
                 * 显示所有Option组件
                 */
                showAll: function showAll() {
                  this.children.forEach(function (_) { return _.$data.isDelete = false; });
                },
                /**
                 * 切换显示和隐藏选项列表
                 */
                toggleCollapse: function toggleCollapse(flag) {
                  if (this.disabled) { return }
                  this.isCollapsed = typeof flag === 'boolean' ? flag : !this.isCollapsed;
                  if (this.isCollapsed) {
                    if (currentSelect && currentSelect !== this) {
                      currentSelect.$data.isCollapsed = false;
                    }
                    currentSelect = this;
                    this.showAll();
                  }
                  this.$emit('on-open-change', this.isCollapsed);
                },
                /**
                 * 是否被选中的Option组件
                 * @param {Vue.default} vm
                 */
                isSelectedChild: function isSelectedChild(vm) {
                  return this.multiple ? this.inSelectedItems(vm.value) : this.selectedItem.value === vm.value
                },
                /**
                 * 是否在选择的items中
                 * @param {String|Number} value
                 */
                inSelectedItems: function inSelectedItems(value) {
                  return this.selectedItems.some(function (_) { return _.value === value; })
                },
                /**
                 * 根据值，移除选择的item
                 * @param {String|Number} value
                 */
                removeSelectedItemByValue: function removeSelectedItemByValue(value) {
                  var index = this.selectedItems.findIndex(function (_) { return _.value === value; });
                  this.selectedItems.splice(index, 1);
                },
                /**
                 * 移除选择的item
                 * @param {Object} item
                 */
                removeSelectedItem: function removeSelectedItem(item) {
                  this.selectedItems.splice(this.selectedItems.indexOf(item), 1);
                  this.syncModel();
                },
                /**
                 * 添加选择的item
                 */
                addSelectedItem: function addSelectedItem(value, label) {
                  this.selectedItems.push({ value: value, label: label });
                },
                /**
                 * 更新选择的值
                 * @param {Vue.default} vm
                 */
                updateSelectedValue: function updateSelectedValue(vm) {
                  if (this.multiple) {
                    this.filterable && this.$refs.Input.focus();
                    this.inSelectedItems(vm.value) ? this.removeSelectedItemByValue(vm.value) : this.addSelectedItem(vm.value, vm.label);
                    this.syncModel();
                  } else {
                    this.isCollapsed = false;
                    this.selectedItem = { value: vm.value, label: vm.label };
                    if (this.filterable) {
                      this.searchValue = this.getCheckedTextOfSingle();
                    }
                  }
                },
                getCheckedTextOfSingle: function getCheckedTextOfSingle() {
                  return (this.selectedItem.label || this.selectedItem.value) + ''
                },
                /**
                 * 添加Option组件实例
                 * @param {Vue.default} vm
                 */
                addChild: function addChild(vm) {
                  this.children.push(vm);
                },
                /**
                 * 移除Option组件实例
                 * @param {Vue.default} vm
                 */
                removeChild: function removeChild(vm) {
                  this.children.splice(this.children.indexOf(vm), 1);
                },
                /**
                 * 清除选中的值
                 */
                clearValue: function clearValue() {
                  if (this.multiple) {
                    this.selectedItems = [];
                  } else {
                    this.selectedItem = {};
                  }
                  this.isCollapsed = false;
                },
                /**
                 * 选择框得到焦点处理
                 */
                handleFocus: function handleFocus() {
                  if (this.filterable) { this.$refs.Input.focus(); }
                },
                /**
                 * 选择框键盘按下事件处理
                 * @param {KeyboardEvent} event
                 */
                handleKeydown: function handleKeydown(event) {
                  var K_UP = 38, K_DOWN = 40, K_ESC = 27, K_ENTER = 13, K_DEL = 46, K_BACKSPACE = 8;
                  var keyCode = event.keyCode;
                  if ([K_UP, K_DOWN, K_ESC].indexOf(keyCode) !== -1) {
                    event.preventDefault();
                  }
                  if (keyCode === K_ENTER) {
                    this.isCollapsed && this.updateValueByFocusOption();
                  } else if (keyCode === K_UP) {
                    if (this.isCollapsed) { this.setOptionFocus('up'); }
                  } else if (keyCode === K_DOWN) {
                    this.isCollapsed ? this.setOptionFocus() : this.toggleCollapse(true);
                  } else if (keyCode === K_ESC) {
                    this.isCollapsed = false;
                  } else if (keyCode === K_DEL || keyCode === K_BACKSPACE) {
                    if (!(this.multiple && this.filterable) || this.searchValue) { return }
                    this.selectedItems.pop();
                  }
                },
                /**
                 * 获取得到焦点的Option
                 */
                updateValueByFocusOption: function updateValueByFocusOption() {
                  var vm =  this.children.find(function (_) { return _.focus; });
                  if (vm) { this.updateSelectedValue(vm); }
                },
                /**
                 * 设置焦点Option
                 * @param {String} dir
                 */
                setOptionFocus: function setOptionFocus(dir) {
                  if ( dir === void 0 ) dir = 'down';

                  var arr = this.children.filter(function (_) { return !_.isDelete; });
                  var len = arr.length;
                  if (!len) { return }
                  var focusIndex = arr.findIndex(function (_) { return _.focus; });
                  this.children.forEach(function (_) { return _.$data.focus = false; });
                  if (dir === 'down') {
                    if (focusIndex < len - 1) {
                      focusIndex++;
                    } else {
                      focusIndex = 0;
                    }
                  } else {
                    if (focusIndex <= 0) {
                      focusIndex = len - 1;
                    } else {
                      focusIndex--;
                    }
                  }
                  var vm = arr[focusIndex];
                  vm.$data.focus = true;
                  vm.$el.scrollIntoViewIfNeeded();
                },
                /**
                 * 搜索框失去焦点处理
                 * @param {MouseEvent} event
                 */
                handleSearchBlur: function handleSearchBlur(event) {
                  if (!this.filterable || this.multiple) { return }
                  var relatedTarget = event.relatedTarget;
                  if (
                    relatedTarget && 
                    (isSelfOrParent(this.$el, relatedTarget) || 
                    isSelfOrParent(this.$refs.UiOptionList.$el, relatedTarget))
                  ) { return }
                  this.searchValue = this.getCheckedTextOfSingle();
                },
                /**
                 * 更新模型数据
                 * @param {String|Number|Array} value
                 */
                updateModel: function updateModel(value) {
                  var this$1 = this;

                  if (this.multiple) {
                    this.selectedItems = value.map(function (_) { return ({ value: _, label: this$1.getLabelByValue(_) }); });
                  } else {
                    this.selectedItem = { value: value, label: this.getLabelByValue(value) };
                  }
                },
                /**
                 * 向父组件同步模型数据
                 */
                syncModel: function syncModel() {
                  var value = this.multiple ? this.selectedItems.map(function (_) { return _.value; }) : this.selectedItem.value;
                  this.$emit('input', value);
                  this.$emit('on-change', value);
                },
                /**
                 * 通过值获取标签
                 * @param {String|Number} value
                 */
                getLabelByValue: function getLabelByValue(value) {
                  var vm = this.children.find(function (_) { return _.value === value; });
                  return vm && vm.label
                }
              },
              mounted: function mounted() {
                this.updateModel(this.value);
              },
              beforeDestroy: function beforeDestroy() {
                if (currentSelect === this) { currentSelect = null; }
              }
            };

            var css$10 = ".ui-select{display:inline-block;width:100%;vertical-align:middle}.ui-select-selection{height:32px;border:1px solid #dddee1;border-radius:4px;cursor:pointer;-webkit-transition:border .2s ease-in-out;transition:border .2s ease-in-out;position:relative;outline:none;background-color:#fff;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out;padding:0 24px 0 8px}.ui-select-selection.large{height:36px}.ui-select-selection.small{height:24px}.ui-select-selection.multiple{height:auto;padding-left:4px;min-height:32px}.ui-select-selection.multiple.large{min-height:36px}.ui-select-selection.multiple.small{min-height:24px}.ui-select-selection.multiple .ui-select-search{height:30px}.ui-select-selection.isCollapsed,.ui-select-selection:focus:not(.disabled),.ui-select-selection:hover:not(.disabled){border-color:#2d8cf0}.ui-select-selection.clearable:hover:not(.disabled) .ui-select-clear-icon{display:inline-block}.ui-select-selection.clearable:hover:not(.disabled) .ui-select-down-icon{display:none}.ui-select-selection.isCollapsed{-webkit-box-shadow:0 0 0 2px rgba(45,140,240,.2);box-shadow:0 0 0 2px rgba(45,140,240,.2)}.ui-select-selection.isCollapsed .ui-select-arrow{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.ui-select-selection.disabled{background-color:#f3f3f3}.ui-select-selection.disabled,.ui-select-selection.disabled .ui-select-input{cursor:not-allowed}.ui-select-selection .ui-tag{margin:3px 4px 3px 0}.ui-select-search-text{position:absolute;top:0;left:0;min-width:20px;visibility:hidden;pointer-events:none}.ui-select-clear-icon{display:none}.ui-select-single{height:100%;color:#495060;font-size:12px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ui-select-placeholder{color:#bbbec4}.ui-select-search{width:100%;height:100%;outline:none;border:none;color:#495060;font-size:12px}.ui-select-search::-webkit-input-placeholder{color:#bbbec4}.ui-select-search::-moz-placeholder{color:#bbbec4}.ui-select-search:-ms-input-placeholder{color:#bbbec4}.ui-select-search::-ms-input-placeholder{color:#bbbec4}.ui-select-search::placeholder{color:#bbbec4}.ui-select-search.placeholder{cursor:pointer}.ui-select-arrow{position:absolute;top:0;right:0;bottom:0;width:24px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;color:#80848f;font-size:14px;-webkit-transition:-webkit-transform .2s ease-in-out;transition:-webkit-transform .2s ease-in-out;transition:transform .2s ease-in-out;transition:transform .2s ease-in-out,-webkit-transform .2s ease-in-out}";
            styleInject(css$10);

            /* script */
            var __vue_script__$1d = script$1d;
            /* template */
            var __vue_render__$1p = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "ui-select", class: { disabled: _vm.disabled } },
                [
                  _c(
                    "div",
                    {
                      staticClass: "ui-select-selection",
                      class: [
                        _vm.size,
                        {
                          isCollapsed: _vm.isCollapsed,
                          clearable: _vm.showClear,
                          multiple: _vm.multiple,
                          filterable: _vm.filterable,
                          disabled: _vm.disabled
                        }
                      ],
                      attrs: { tabindex: "0" },
                      on: {
                        click: _vm.toggleCollapse,
                        focus: _vm.handleFocus,
                        keydown: _vm.handleKeydown
                      }
                    },
                    [
                      _vm.multiple
                        ? [
                            _vm._l(_vm.selectedItems, function(item) {
                              return _c(
                                "ui-tag",
                                {
                                  key: item.value,
                                  attrs: { closable: "", fade: false },
                                  on: {
                                    "on-close": function($event) {
                                      return _vm.removeSelectedItem(item)
                                    }
                                  }
                                },
                                [
                                  _vm._v(
                                    "\n        " +
                                      _vm._s(item.label || item.value) +
                                      "\n      "
                                  )
                                ]
                              )
                            }),
                            _vm._v(" "),
                            !(_vm.filterable || _vm.selectedItems.length)
                              ? _c("input", {
                                  staticClass: "ui-select-search placeholder",
                                  attrs: { readonly: "", placeholder: _vm.placeholder }
                                })
                              : _vm._e(),
                            _vm._v(" "),
                            _vm.filterable
                              ? _c("input", {
                                  directives: [
                                    {
                                      name: "model",
                                      rawName: "v-model",
                                      value: _vm.searchValue,
                                      expression: "searchValue"
                                    }
                                  ],
                                  ref: "Input",
                                  staticClass: "ui-select-search",
                                  style: _vm.multipleInputStyles,
                                  attrs: { placeholder: _vm.multiplePlaceholder },
                                  domProps: { value: _vm.searchValue },
                                  on: {
                                    blur: _vm.handleSearchBlur,
                                    input: function($event) {
                                      if ($event.target.composing) {
                                        return
                                      }
                                      _vm.searchValue = $event.target.value;
                                    }
                                  }
                                })
                              : _vm._e(),
                            _vm._v(" "),
                            _c(
                              "span",
                              { ref: "SearchText", staticClass: "ui-select-search-text" },
                              [_vm._v(_vm._s(_vm.searchText))]
                            )
                          ]
                        : _c(
                            "div",
                            { staticClass: "ui-select-single" },
                            [
                              _vm.filterable
                                ? _c("input", {
                                    directives: [
                                      {
                                        name: "model",
                                        rawName: "v-model",
                                        value: _vm.searchValue,
                                        expression: "searchValue"
                                      }
                                    ],
                                    ref: "Input",
                                    staticClass: "ui-select-search",
                                    attrs: { placeholder: _vm.placeholder },
                                    domProps: { value: _vm.searchValue },
                                    on: {
                                      blur: _vm.handleSearchBlur,
                                      input: function($event) {
                                        if ($event.target.composing) {
                                          return
                                        }
                                        _vm.searchValue = $event.target.value;
                                      }
                                    }
                                  })
                                : [
                                    _vm.selectedLabelOfSingle
                                      ? _c("span", { staticClass: "ui-select-label" }, [
                                          _vm._v(_vm._s(_vm.selectedLabelOfSingle))
                                        ])
                                      : _c(
                                          "span",
                                          { staticClass: "ui-select-placeholder" },
                                          [_vm._v(_vm._s(_vm.placeholder))]
                                        )
                                  ]
                            ],
                            2
                          ),
                      _vm._v(" "),
                      _c(
                        "div",
                        { staticClass: "ui-select-arrow" },
                        [
                          _c("UiIcon", {
                            staticClass: "ui-select-clear-icon",
                            attrs: { type: "ios-close" },
                            nativeOn: {
                              click: function($event) {
                                $event.stopPropagation();
                                return _vm.clearValue($event)
                              }
                            }
                          }),
                          _vm._v(" "),
                          _c("UiIcon", {
                            staticClass: "ui-select-down-icon",
                            attrs: { type: "arrow-down-b" }
                          })
                        ],
                        1
                      )
                    ],
                    2
                  ),
                  _vm._v(" "),
                  _c(
                    "ui-option-list",
                    { ref: "UiOptionList", attrs: { visible: _vm.isCollapsed } },
                    [
                      _vm.isEmpty
                        ? _c("span", { attrs: { slot: "empty" }, slot: "empty" }, [
                            _vm._v(_vm._s(_vm.loading ? _vm.loadingText : _vm.notFoundText))
                          ])
                        : _vm._e(),
                      _vm._v(" "),
                      _c("ul", [_vm._t("default")], 2)
                    ]
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$1p = [];
            __vue_render__$1p._withStripped = true;

              /* style */
              var __vue_inject_styles__$1p = undefined;
              /* scoped */
              var __vue_scope_id__$1p = undefined;
              /* module identifier */
              var __vue_module_identifier__$1p = undefined;
              /* functional template */
              var __vue_is_functional_template__$1p = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Select$1 = normalizeComponent_1(
                { render: __vue_render__$1p, staticRenderFns: __vue_staticRenderFns__$1p },
                __vue_inject_styles__$1p,
                __vue_script__$1d,
                __vue_scope_id__$1p,
                __vue_is_functional_template__$1p,
                __vue_module_identifier__$1p,
                undefined,
                undefined
              );

            //
            var script$1e = {
              name: 'ui-select-option',
              components: { UiIcon: UiIcon },
              data: function data() {
                return {
                  parent: null,
                  isDelete: false,
                  focus: false
                }
              },
              props: {
                value: [String, Number],
                label: String,
                disabled: Boolean
              },
              computed: {
                selected: function selected() {
                  return this.parent && this.parent.isSelectedChild(this)
                },
                multiple: function multiple() {
                  return this.parent && this.parent.multiple
                }
              },
              methods: {
                handleClick: function handleClick() {
                  if (this.disabled) { return }
                  if (this.parent) { this.parent.updateSelectedValue(this); }
                }
              },
              mounted: function mounted() {
                this.parent = findParentByName(this, 'ui-select');
                this.parent && this.parent.addChild(this);
              },
              beforeDestroy: function beforeDestroy() {
                this.parent && this.parent.removeChild(this);
              }
            };

            var css$11 = ".ui-select-option{padding:7px 16px;list-style:none;outline:none;cursor:pointer;line-height:1.2;position:relative}.ui-select-option.focus:not(.disabled),.ui-select-option:hover:not(.disabled){background-color:#f3f3f3}.ui-select-option.selected:not(.multiple):not(.disabled){color:#fff;background-color:#2d8cf0}.ui-select-option.selected:not(.multiple):not(.disabled).focus{background-color:#1077e4}.ui-select-option.disabled{color:#bbbec4;cursor:not-allowed}.ui-select-option.selected.multiple{color:#2d8cf0}.ui-select-option-icon{position:absolute;top:8px;right:16px;font-size:14px}";
            styleInject(css$11);

            /* script */
            var __vue_script__$1e = script$1e;
            /* template */
            var __vue_render__$1q = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return !_vm.isDelete
                ? _c(
                    "li",
                    {
                      staticClass: "ui-select-option",
                      class: {
                        selected: _vm.selected,
                        multiple: _vm.multiple,
                        focus: _vm.focus,
                        disabled: _vm.disabled
                      },
                      attrs: { tabindex: "-1" },
                      on: { click: _vm.handleClick }
                    },
                    [
                      _vm._t("default", [_vm._v(_vm._s(_vm.label || _vm.value))]),
                      _vm._v(" "),
                      _vm.selected && _vm.multiple
                        ? _c("UiIcon", {
                            staticClass: "ui-select-option-icon",
                            attrs: { type: "android-done" }
                          })
                        : _vm._e()
                    ],
                    2
                  )
                : _vm._e()
            };
            var __vue_staticRenderFns__$1q = [];
            __vue_render__$1q._withStripped = true;

              /* style */
              var __vue_inject_styles__$1q = undefined;
              /* scoped */
              var __vue_scope_id__$1q = undefined;
              /* module identifier */
              var __vue_module_identifier__$1q = undefined;
              /* functional template */
              var __vue_is_functional_template__$1q = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Option = normalizeComponent_1(
                { render: __vue_render__$1q, staticRenderFns: __vue_staticRenderFns__$1q },
                __vue_inject_styles__$1q,
                __vue_script__$1e,
                __vue_scope_id__$1q,
                __vue_is_functional_template__$1q,
                __vue_module_identifier__$1q,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //

            var script$1f = {
              props: { label: String }
            };

            var css$12 = ".ui-option-group-title{padding-left:8px;color:#999;font-size:12px;height:30px;line-height:30px}";
            styleInject(css$12);

            /* script */
            var __vue_script__$1f = script$1f;
            /* template */
            var __vue_render__$1r = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("li", { staticClass: "ui-option-group" }, [
                _c("span", { staticClass: "ui-option-group-title" }, [
                  _vm._v(_vm._s(_vm.label))
                ]),
                _vm._v(" "),
                _c("ul", [_vm._t("default")], 2)
              ])
            };
            var __vue_staticRenderFns__$1r = [];
            __vue_render__$1r._withStripped = true;

              /* style */
              var __vue_inject_styles__$1r = undefined;
              /* scoped */
              var __vue_scope_id__$1r = undefined;
              /* module identifier */
              var __vue_module_identifier__$1r = undefined;
              /* functional template */
              var __vue_is_functional_template__$1r = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var OptionGroup = normalizeComponent_1(
                { render: __vue_render__$1r, staticRenderFns: __vue_staticRenderFns__$1r },
                __vue_inject_styles__$1r,
                __vue_script__$1f,
                __vue_scope_id__$1r,
                __vue_is_functional_template__$1r,
                __vue_module_identifier__$1r,
                undefined,
                undefined
              );

            //
            var script$1g = {
              components: { UiIcon: UiIcon },
              data: function data() {
                return { parent: null }
              },
              props: {
                title: String,
                content: String,
                icon: String
              },
              computed: {
                width: function width() {
                  return this.parent && this.parent.direction === 'horizontal' && ((1 / this.parent.getCount() * 100) + "%")
                },
                index: function index() {
                  return this.parent ? this.parent.getIndex(this) : -1
                },
                isCurrent: function isCurrent() {
                  return this.parent && this.index === this.parent.current
                },
                statusClass: function statusClass() {
                  return this.parent && (this.isCurrent ? this.parent.status || 'process' : this.index < this.parent.current ? 'finish' : 'wait')
                }
              },
              mounted: function mounted() {
                this.parent = findParentByName(this, 'ui-steps');
                this.parent && this.parent.addChild(this);
              },
              beforeDestroy: function beforeDestroy() {
                this.parent && this.parent.removeChild(this);
              }
            };

            /* script */
            var __vue_script__$1g = script$1g;

            /* template */
            var __vue_render__$1s = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                {
                  staticClass: "ui-steps-item",
                  class: _vm.statusClass,
                  style: { width: _vm.width }
                },
                [
                  _c("div", { staticClass: "ui-steps-tail" }),
                  _vm._v(" "),
                  _c(
                    "span",
                    { staticClass: "ui-steps-head", class: { icon: _vm.icon } },
                    [
                      _vm.icon
                        ? _c("UiIcon", { attrs: { type: _vm.icon } })
                        : _vm.isCurrent
                        ? _c("b", { staticClass: "ui-steps-index" }, [
                            _vm._v(_vm._s(_vm.index + 1))
                          ])
                        : _c("UiIcon", { attrs: { type: "ios-checkmark-empty" } })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "ui-steps-main" }, [
                    _c("div", { staticClass: "ui-steps-title" }, [
                      _vm._v(_vm._s(_vm.title))
                    ]),
                    _vm._v(" "),
                    _vm.content
                      ? _c("div", { staticClass: "ui-steps-content" }, [
                          _vm._v(_vm._s(_vm.content))
                        ])
                      : _vm._e()
                  ])
                ]
              )
            };
            var __vue_staticRenderFns__$1s = [];
            __vue_render__$1s._withStripped = true;

              /* style */
              var __vue_inject_styles__$1s = undefined;
              /* scoped */
              var __vue_scope_id__$1s = undefined;
              /* module identifier */
              var __vue_module_identifier__$1s = undefined;
              /* functional template */
              var __vue_is_functional_template__$1s = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Step = normalizeComponent_1(
                { render: __vue_render__$1s, staticRenderFns: __vue_staticRenderFns__$1s },
                __vue_inject_styles__$1s,
                __vue_script__$1g,
                __vue_scope_id__$1s,
                __vue_is_functional_template__$1s,
                __vue_module_identifier__$1s,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //

            var script$1h = {
              name: 'ui-steps',
              data: function data() {
                return { children: [] }
              },
              props: {
                current: {
                  type: Number,
                  default: 0
                },
                status: {
                  default: 'process',
                  validator: function validator(value) {
                    return ['wait', 'process', 'finish', 'error'].indexOf(value) !== -1
                  }
                },
                size: {
                  validator: function validator(value) {
                    return value === 'small'
                  }
                },
                direction: {
                  default: 'horizontal',
                  validator: function validator(value) {
                    return ['horizontal', 'vertical'].indexOf(value) !== -1
                  }
                }
              },
              methods: {
                getCount: function getCount() {
                  return this.children.length
                },
                getIndex: function getIndex(vm) {
                  return this.children.indexOf(vm)
                },
                addChild: function addChild(vm) {
                  this.children.push(vm);
                },
                removeChild: function removeChild(vm) {
                  this.children.splice(this.getIndex(vm), 1);
                }
              }
            };

            var css$13 = ".ui-steps.small .ui-steps-main{padding-left:28px}.ui-steps.small .ui-steps-tail{top:9px;left:28px}.ui-steps.small .ui-steps-head{width:18px;height:18px;line-height:18px;font-size:12px}.ui-steps.small .ui-steps-head .ui-icon{font-size:14px}.ui-steps.small .ui-steps-title{font-size:12px}.ui-steps.vertical .ui-steps-tail{top:30px;right:0;bottom:4px;left:13px;width:1px;height:auto}.ui-steps.vertical .ui-steps-main{padding-top:3px;padding-bottom:12px}.ui-steps.vertical.small .ui-steps-tail{top:22px;left:9px}.ui-steps-item{display:inline-block;width:100%;position:relative}.ui-steps-item:last-child .ui-steps-tail{display:none}.ui-steps-item.process .ui-steps-head:not(.icon){background-color:#2d8cf0;color:#fff}.ui-steps-item.process .ui-steps-content,.ui-steps-item.process .ui-steps-title{color:#666}.ui-steps-item.finish .ui-steps-content,.ui-steps-item.finish .ui-steps-title,.ui-steps-item.wait .ui-steps-content,.ui-steps-item.wait .ui-steps-title{color:#999}.ui-steps-item.finish .ui-steps-head,.ui-steps-item.process .ui-steps-head{color:#2d8cf0}.ui-steps-item.wait .ui-steps-head{color:#ccc}.ui-steps-item.wait .ui-steps-head:not(.icon){border-color:#ccc}.ui-steps-item.error .ui-steps-head:not(.icon){color:#ed3f14;border-color:#ed3f14}.ui-steps-item.error .ui-steps-content,.ui-steps-item.error .ui-steps-title{color:#ed3f14}.ui-steps-item.finish .ui-steps-tail:before{-webkit-transform:scale(1);transform:scale(1)}.ui-steps-head{width:26px;height:26px;line-height:26px;text-align:center;border-radius:50%;margin-right:8px;float:left;position:relative;font-size:14px;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.ui-steps-head,.ui-steps-head .ui-icon{font-weight:700}.ui-steps-head .ui-icon{font-size:24px}.ui-steps-head:not(.icon){background-color:#fff;border:1px solid #2d8cf0}.ui-steps-tail{position:absolute;top:13px;left:36px;right:10px;height:1px;background-color:#e9eaec}.ui-steps-tail:before{display:block;-webkit-transform:scale(0);transform:scale(0);height:100%;content:\"\";background-color:#2d8cf0;-webkit-transform-origin:0 0;transform-origin:0 0;-webkit-transition:-webkit-transform .3s;transition:-webkit-transform .3s;transition:transform .3s;transition:transform .3s,-webkit-transform .3s}.ui-steps-main{position:relative;padding-left:36px}.ui-steps-title{padding-right:10px;font-weight:700;font-size:14px;background-color:#fff;display:inline-block}.ui-steps-title+.ui-steps-content{margin-top:6px}.ui-steps-content{font-size:12px}";
            styleInject(css$13);

            /* script */
            var __vue_script__$1h = script$1h;
            /* template */
            var __vue_render__$1t = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "ui-steps", class: [_vm.size, _vm.direction] },
                [_vm._t("default")],
                2
              )
            };
            var __vue_staticRenderFns__$1t = [];
            __vue_render__$1t._withStripped = true;

              /* style */
              var __vue_inject_styles__$1t = undefined;
              /* scoped */
              var __vue_scope_id__$1t = undefined;
              /* module identifier */
              var __vue_module_identifier__$1t = undefined;
              /* functional template */
              var __vue_is_functional_template__$1t = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Steps$1 = normalizeComponent_1(
                { render: __vue_render__$1t, staticRenderFns: __vue_staticRenderFns__$1t },
                __vue_inject_styles__$1t,
                __vue_script__$1h,
                __vue_scope_id__$1t,
                __vue_is_functional_template__$1t,
                __vue_module_identifier__$1t,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$1i = {
              props: {
                percent: {
                  type: Number,
                  default: 0
                },
                size: {
                  type: Number,
                  default: 120
                },
                strokeLinecap: {
                  type: String,
                  default: 'round'
                },
                strokeWidth: {
                  type: Number,
                  default: 6
                },
                strokeColor: {
                  type: String,
                  default: '#2db7f5'
                },
                trailWidth: {
                  type: Number,
                  default: 5
                },
                trailColor: {
                  type: String,
                  default: '#eaeef2'
                }
              },
              computed: {
                styles: function styles() {
                  return { width: ((this.size) + "px"), height: ((this.size) + "px") }
                },
                computedStrokeWidth: function computedStrokeWidth () {
                  return this.percent === 0 && this.dashboard ? 0 : this.strokeWidth
                },
                radius: function radius() {
                  return 50 - this.strokeWidth / 2
                },
                pathString: function pathString() {
                  var ref = this;
                  var r = ref.radius;
                  var dashboard = ref.dashboard;
                  return dashboard ? 
                    ("M 50,50 m 0," + r + " a " + r + "," + r + " 0 1 1 0,-" + (2 * r) + " a " + r + "," + r + " 0 1 1 0," + (2 * r)) :
                    ("M 50,50 m 0,-" + r + " a " + r + "," + r + " 0 1 1 0," + (2 * r) + " a " + r + "," + r + " 0 1 1 0,-" + (2 * r))
                },
                len: function len() {
                  return Math.PI * 2 * this.radius
                },
                trailStyle: function trailStyle() {
                  return this.dashboard ? {
                    'stroke-dasharray': ((this.len - 75) + "px " + (this.len) + "px"),
                    'stroke-dashoffset': ("-" + (75 / 2) + "px"),
                    'transition': 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s'
                  } : {}
                },
                pathStyle: function pathStyle() {
                  return this.dashboard ? {
                    'stroke-dasharray': (((this.percent / 100) * (this.len - 75)) + "px " + (this.len) + "px"),
                    'stroke-dashoffset': ("-" + (75 / 2) + "px"),
                    'transition': 'stroke-dashoffset .3s ease 0s, stroke-dasharray .6s ease 0s, stroke .6s, stroke-width .06s ease .6s'
                  } : {
                    'stroke-dasharray': ((this.len) + "px " + (this.len) + "px"),
                    'stroke-dashoffset': ((((100 - this.percent) / 100 * this.len)) + "px"),
                    'transition': 'stroke-dashoffset 0.6s ease 0s, stroke 0.6s ease'
                  }
                }
              }
            };

            var css$14 = ".ui-icircle{display:inline-block;position:relative}.ui-icircle-inner{width:100%;position:absolute;top:50%;left:0;-webkit-transform:translateY(-50%);transform:translateY(-50%);line-height:1;text-align:center}";
            styleInject(css$14);

            /* script */
            var __vue_script__$1i = script$1i;
            /* template */
            var __vue_render__$1u = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { staticClass: "ui-icircle", style: _vm.styles }, [
                _c("svg", { attrs: { viewBox: "0 0 100 100" } }, [
                  _c("path", {
                    style: _vm.trailStyle,
                    attrs: {
                      d: _vm.pathString,
                      stroke: _vm.trailColor,
                      "stroke-width": _vm.trailWidth,
                      "fill-opacity": 0
                    }
                  }),
                  _vm._v(" "),
                  _c("path", {
                    style: _vm.pathStyle,
                    attrs: {
                      d: _vm.pathString,
                      "stroke-linecap": _vm.strokeLinecap,
                      stroke: _vm.strokeColor,
                      "stroke-width": _vm.computedStrokeWidth,
                      "fill-opacity": "0"
                    }
                  })
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "ui-icircle-inner" }, [_vm._t("default")], 2)
              ])
            };
            var __vue_staticRenderFns__$1u = [];
            __vue_render__$1u._withStripped = true;

              /* style */
              var __vue_inject_styles__$1u = undefined;
              /* scoped */
              var __vue_scope_id__$1u = undefined;
              /* module identifier */
              var __vue_module_identifier__$1u = undefined;
              /* functional template */
              var __vue_is_functional_template__$1u = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var ICircle$1 = normalizeComponent_1(
                { render: __vue_render__$1u, staticRenderFns: __vue_staticRenderFns__$1u },
                __vue_inject_styles__$1u,
                __vue_script__$1i,
                __vue_scope_id__$1u,
                __vue_is_functional_template__$1u,
                __vue_module_identifier__$1u,
                undefined,
                undefined
              );

            //
            var script$1j = {
              components: { RenderCell: RenderCell },
              props: {
                size: {
                  validator: function validator(value) {
                    return ['large', 'small'].indexOf(value) !== -1
                  }
                },
                fix: Boolean,
                render: Function,
                fullscreen: Boolean,
                zIndex: Number
              },
              methods: {
                handleLeave: function handleLeave() {
                  var parent = findParentByName(this, 'ui-spin-wrapper');
                  parent && parent.$destroy();
                }
              }
            };

            var css$15 = ".ui-spin{color:#2d8cf0;text-align:center}.ui-spin.small .ui-spin-dot{width:12px;height:12px}.ui-spin.large .ui-spin-dot{width:32px;height:32px}.ui-spin.fix,.ui-spin.fullscreen{top:0;right:0;bottom:0;left:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;background-color:hsla(0,0%,100%,.9)}.ui-spin.fullscreen{position:fixed}.ui-spin.fix{position:absolute;z-index:8}.ui-spin-dot{width:20px;height:20px;border-radius:50%;background-color:#2d8cf0;-webkit-animation:ui-spin-animate 1s ease-in-out infinite;animation:ui-spin-animate 1s ease-in-out infinite}@-webkit-keyframes ui-spin-animate{0%{-webkit-transform:scale(0);transform:scale(0)}to{-webkit-transform:scale(1);transform:scale(1);opacity:0}}@keyframes ui-spin-animate{0%{-webkit-transform:scale(0);transform:scale(0)}to{-webkit-transform:scale(1);transform:scale(1);opacity:0}}";
            styleInject(css$15);

            /* script */
            var __vue_script__$1j = script$1j;
            /* template */
            var __vue_render__$1v = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "transition",
                { attrs: { name: "ui-fade" }, on: { afterLeave: _vm.handleLeave } },
                [
                  _c(
                    "div",
                    {
                      staticClass: "ui-spin",
                      class: [
                        _vm.size,
                        { fix: !_vm.fullscreen && _vm.fix, fullscreen: _vm.fullscreen }
                      ],
                      style: { zIndex: _vm.zIndex }
                    },
                    [
                      _c(
                        "div",
                        [
                          _vm.render
                            ? _c("RenderCell", { attrs: { render: _vm.render } })
                            : _vm._t("default", [_c("div", { staticClass: "ui-spin-dot" })])
                        ],
                        2
                      )
                    ]
                  )
                ]
              )
            };
            var __vue_staticRenderFns__$1v = [];
            __vue_render__$1v._withStripped = true;

              /* style */
              var __vue_inject_styles__$1v = undefined;
              /* scoped */
              var __vue_scope_id__$1v = undefined;
              /* module identifier */
              var __vue_module_identifier__$1v = undefined;
              /* functional template */
              var __vue_is_functional_template__$1v = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var UiSpin = normalizeComponent_1(
                { render: __vue_render__$1v, staticRenderFns: __vue_staticRenderFns__$1v },
                __vue_inject_styles__$1v,
                __vue_script__$1j,
                __vue_scope_id__$1v,
                __vue_is_functional_template__$1v,
                __vue_module_identifier__$1v,
                undefined,
                undefined
              );

            //
            var script$1k = {
              components: { UiIcon: UiIcon, UiSpin: UiSpin },
              props: {
                loading: Boolean,
                loadingText: String,
                iconStyle: Object,
                iconClass: String
              }
            };

            var css$16 = ".ui-scroll-loading{position:relative;height:32px}.ui-scroll-loading-icon,.ui-scroll-loading-text{vertical-align:middle}.ui-scroll-loading-icon{margin-right:6px;-webkit-animation:ui-scroll-loading 1s linear infinite;animation:ui-scroll-loading 1s linear infinite}@-webkit-keyframes ui-scroll-loading{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}50%{-webkit-transform:rotate(180deg);transform:rotate(180deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes ui-scroll-loading{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}50%{-webkit-transform:rotate(180deg);transform:rotate(180deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}";
            styleInject(css$16);

            /* script */
            var __vue_script__$1k = script$1k;
            /* template */
            var __vue_render__$1w = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "ui-scroll-loading" },
                [
                  _vm.loading
                    ? _c(
                        "ui-spin",
                        { attrs: { fix: "" } },
                        [
                          _c("Icon", {
                            staticClass: "ui-scroll-loading-icon",
                            class: _vm.iconClass,
                            style: _vm.iconStyle,
                            attrs: { type: "load-c", size: "18" }
                          }),
                          _vm._v(" "),
                          _c("span", { staticClass: "ui-scroll-loading-text" }, [
                            _vm._v(_vm._s(_vm.loadingText))
                          ])
                        ],
                        1
                      )
                    : _vm._e()
                ],
                1
              )
            };
            var __vue_staticRenderFns__$1w = [];
            __vue_render__$1w._withStripped = true;

              /* style */
              var __vue_inject_styles__$1w = undefined;
              /* scoped */
              var __vue_scope_id__$1w = undefined;
              /* module identifier */
              var __vue_module_identifier__$1w = undefined;
              /* functional template */
              var __vue_is_functional_template__$1w = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var UiLoading = normalizeComponent_1(
                { render: __vue_render__$1w, staticRenderFns: __vue_staticRenderFns__$1w },
                __vue_inject_styles__$1w,
                __vue_script__$1k,
                __vue_scope_id__$1w,
                __vue_is_functional_template__$1w,
                __vue_module_identifier__$1w,
                undefined,
                undefined
              );

            //
            var script$1l = {
              components: { UiLoading: UiLoading },
              data: function data() {
                return {
                  topLoading: false,
                  bottomLoading: false
                }
              },
              props: {
                height: {
                  type: [String, Number],
                  default: 300
                },
                loadingText: {
                  type: String,
                  default: '加载中'
                },
                onReachTop: Function,
                onReachBottom: Function,
                onReachEdge: Function,
                distanceToEdge: {
                  type: [Number, Array],
                  default: function () { return [20, 20]; }
                }
              },
              computed: {
                scrollerStyles: function scrollerStyles() {
                  return { height: isNaN(this.height) ? this.height : ((this.height) + "px") }
                },
                edge: function edge() {
                  return this.distanceToEdge instanceof Array ? this.distanceToEdge : [this.distanceToEdge, this.distanceToEdge]
                },
                hasTopLoading: function hasTopLoading() {
                  return this.onReachTop || this.onReachEdge
                },
                hasBottomLoading: function hasBottomLoading() {
                  return this.onReachBottom || this.onReachEdge
                },
                topHandlers: function topHandlers() {
                  return [this.onReachTop, this.onReachEdge].filter(function (_) { return _; })
                },
                bottomHandlers: function bottomHandlers() {
                  return [this.onReachBottom, this.onReachEdge].filter(function (_) { return _; })
                }
              },
              methods: {
                /**
                 * 滚动事件处理
                 */
                handleScroll: function handleScroll() {
                  var this$1 = this;

                  var ref = this.$el;
                  var scrollTop = ref.scrollTop;
                  var scrollHeight = ref.scrollHeight;
                  var clientHeight = ref.clientHeight;
                  // 到达底部
                  if (scrollTop + clientHeight >= scrollHeight - this.edge[1]) {
                    if (this.bottomLoading) { return }
                    if (this.hasBottomLoading) { this.bottomLoading = true; }
                    Promise.all(this.bottomHandlers.map(function (_) { return _(); })).finally(function () { return this$1.bottomLoading = false; });
                  // 到达顶部
                  } else if (scrollTop <= this.edge[0]) {
                    if (this.topLoading) { return }
                    if (this.hasTopLoading) { this.topLoading = true; }
                    Promise.all(this.topHandlers.map(function (_) { return _(); })).finally(function () { return this$1.topLoading = false; });
                  }
                },
                /**
                 * 鼠标滚轮事件处理
                 * @param {WheelEvent} event
                 */
                handleMouseWheel: function handleMouseWheel(event) {
                  if (this.topHandlers.length && this.$el.scrollTop <= 0 && event.deltaY < 0) {
                    event.preventDefault();
                    this.handleScroll();
                  }
                }
              }
            };

            var css$17 = ".ui-scroll{overflow-y:scroll}";
            styleInject(css$17);

            /* script */
            var __vue_script__$1l = script$1l;
            /* template */
            var __vue_render__$1x = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                {
                  staticClass: "ui-scroll",
                  style: _vm.scrollerStyles,
                  on: { scroll: _vm.handleScroll, mousewheel: _vm.handleMouseWheel }
                },
                [
                  _vm.hasTopLoading
                    ? _c("UiLoading", {
                        attrs: { loadingText: _vm.loadingText, loading: _vm.topLoading }
                      })
                    : _vm._e(),
                  _vm._v(" "),
                  _vm._t("default"),
                  _vm._v(" "),
                  _vm.hasBottomLoading
                    ? _c("UiLoading", {
                        attrs: { loadingText: _vm.loadingText, loading: _vm.bottomLoading }
                      })
                    : _vm._e()
                ],
                2
              )
            };
            var __vue_staticRenderFns__$1x = [];
            __vue_render__$1x._withStripped = true;

              /* style */
              var __vue_inject_styles__$1x = undefined;
              /* scoped */
              var __vue_scope_id__$1x = undefined;
              /* module identifier */
              var __vue_module_identifier__$1x = undefined;
              /* functional template */
              var __vue_is_functional_template__$1x = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Scroll$1 = normalizeComponent_1(
                { render: __vue_render__$1x, staticRenderFns: __vue_staticRenderFns__$1x },
                __vue_inject_styles__$1x,
                __vue_script__$1l,
                __vue_scope_id__$1x,
                __vue_is_functional_template__$1x,
                __vue_module_identifier__$1x,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //

            var script$1m = {
              data: function data() {
                return {
                  fixed: false,
                  affixStyle: {},
                  placeholderStyle: {}
                }
              },
              props: {
                offsetTop: {
                  type: Number,
                  default: 0
                },
                offsetBottom: Number
              },
              computed: {
                isFixedBottom: function isFixedBottom() {
                  return this.offsetBottom !== undefined && this.offsetTop === 0
                }
              },
              watch: {
                fixed: function fixed(newVal) {
                  this.$emit('on-change', newVal);
                }
              },
              methods: {
                handleScroll: function handleScroll() {
                  var rect = this.$el.getBoundingClientRect();
                  this.fixed = this.isFixedBottom ? window.innerHeight - rect.bottom <= this.offsetBottom : rect.top <= this.offsetTop;
                },
                handleResize: function handleResize() {
                  var rect = this.$el.getBoundingClientRect();
                  this.placeholderStyle = { width: ((rect.width) + "px"), height: ((rect.height) + "px") };
                  var obj = this.isFixedBottom ? { bottom: ((this.offsetBottom) + "px") } : { top: ((this.offsetTop) + "px") };
                  this.affixStyle = Object.assign({}, obj, {left: ((rect.left) + "px")});
                }
              },
              mounted: function mounted() {
                this.handleResize();
              }
            };

            var css$18 = ".ui-affix{position:fixed;z-index:10}";
            styleInject(css$18);

            /* script */
            var __vue_script__$1m = script$1m;
            /* template */
            var __vue_render__$1y = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                {
                  directives: [
                    {
                      name: "scroll",
                      rawName: "v-scroll",
                      value: _vm.handleScroll,
                      expression: "handleScroll"
                    },
                    {
                      name: "resize",
                      rawName: "v-resize",
                      value: _vm.handleResize,
                      expression: "handleResize"
                    }
                  ]
                },
                [
                  _c(
                    "div",
                    { class: { "ui-affix": _vm.fixed }, style: _vm.affixStyle },
                    [_vm._t("default")],
                    2
                  ),
                  _vm._v(" "),
                  _c("div", {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.fixed,
                        expression: "fixed"
                      }
                    ],
                    style: _vm.placeholderStyle
                  })
                ]
              )
            };
            var __vue_staticRenderFns__$1y = [];
            __vue_render__$1y._withStripped = true;

              /* style */
              var __vue_inject_styles__$1y = undefined;
              /* scoped */
              var __vue_scope_id__$1y = undefined;
              /* module identifier */
              var __vue_module_identifier__$1y = undefined;
              /* functional template */
              var __vue_is_functional_template__$1y = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Affix$1 = normalizeComponent_1(
                { render: __vue_render__$1y, staticRenderFns: __vue_staticRenderFns__$1y },
                __vue_inject_styles__$1y,
                __vue_script__$1m,
                __vue_scope_id__$1y,
                __vue_is_functional_template__$1y,
                __vue_module_identifier__$1y,
                undefined,
                undefined
              );

            //
            var script$1n = {
              components: { UiIcon: UiIcon, UiSelect: Select$1, UiOption: Option, UiInput: Input$1 },
              data: function data() {
                return {
                  limit: this.pageSize,
                  currentPage: this.current,
                  inputValue: this.current
                }
              },
              props: {
                current: {
                  type: Number,
                  default: 1
                },
                total: {
                  type: Number,
                  default: 0
                },
                pageSize: {
                  type: Number,
                  default: 10
                },
                pageSizeOpts: {
                  type: Array,
                  default: function () { return [10, 20, 30, 40]; }
                },
                placement: {
                  default: 'bottom',
                  validator: function validator(value) {
                    return ['bottom', 'top'].indexOf(value) !== -1
                  }
                },
                size: {
                  validator: function validator(value) {
                    return value === 'small'
                  }
                },
                simple: Boolean,
                showTotal: Boolean,
                showElevator: Boolean,
                showSizer: Boolean
              },
              computed: {
                pageCount: function pageCount() {
                  return Math.ceil(this.total / this.limit)
                },
                disabledPrev: function disabledPrev() {
                  return this.currentPage === 1
                },
                disabledNext: function disabledNext() {
                  return this.currentPage === this.pageCount
                },
                showPages: function showPages() {
                  var ref = this;
                  var currentPage = ref.currentPage;
                  var pageCount = ref.pageCount;
                  var nums = [];
                  if (currentPage < 5) {
                    for (var i = 1; i <= currentPage; i++) { nums.push(i); }
                  } else {
                    nums = [currentPage - 2, currentPage - 1, currentPage];
                  }
                  if (pageCount - currentPage <= 3) {
                    for (var i$1 = currentPage + 1; i$1 <= pageCount; i$1++) { nums.push(i$1); }
                  } else {
                    nums.push(currentPage + 1, currentPage + 2);
                  }
                  return nums
                }
              },
              watch: {
                limit: function limit(newVal) {
                  this.toPage(1);
                  this.$emit('on-page-size-change', newVal);
                }
              },
              methods: {
                toPage: function toPage(page) {
                  this.currentPage = page;
                  this.$emit('update:current', page);
                  this.$emit('on-change', page);
                },
                toPrev: function toPrev() {
                  !this.disabledPrev && this.toPage(this.currentPage - 1);
                },
                toNext: function toNext() {
                  !this.disabledNext && this.toPage(this.currentPage + 1);
                },
                toPrev5: function toPrev5() {
                  this.toPage(Math.max(this.currentPage - 5, 1));
                },
                toNext5: function toNext5() {
                  this.toPage(Math.min(this.currentPage + 5, this.pageCount));
                },
                toInputPage: function toInputPage() {
                  var inputValue = +this.inputValue;
                  if (isNaN(inputValue) || inputValue < 1) {
                    this.toPage(1);
                    this.inputValue = 1;
                  } else if (inputValue > this.pageCount) {
                    this.toPage(this.pageCount);
                    this.inputValue = this.pageCount;
                  } else {
                    this.toPage(inputValue);
                  }
                }
              }
            };

            var css$19 = ".ui-page-list,.ui-page-list li{display:inline-block}.ui-page-list li{list-style:none;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:middle;text-align:center;color:#666;border:1px solid #dddee1;border-radius:4px;-webkit-transition:border .2s ease-in-out;transition:border .2s ease-in-out;line-height:30px;height:32px;min-width:32px;margin-right:5px}.ui-page-list li:hover:not(.disabled):not(.active){color:#2d8cf0}.ui-page-list li.active:not(.disabled),.ui-page-list li:hover:not(.disabled):not(.ui-page-more){border-color:#2d8cf0}.ui-page-list li.active{color:#fff;background-color:#2d8cf0}.ui-page-list li.disabled{cursor:not-allowed;color:#ccc}.ui-page-list li.ui-page-arrow{font-size:14px}.ui-page-list li.ui-page-arrow.prev{margin-right:10px}.ui-page-list li.ui-page-arrow.next{margin-left:5px}.ui-page-list li.ui-page-arrow .ui-icon{line-height:30px}.ui-page-list li.ui-page-more{position:relative}.ui-page-list li.ui-page-more .icon-more{position:absolute;top:0;right:0;bottom:0;left:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;background-color:#fff;border-radius:4px;font-size:20px;color:#ccc}.ui-page-list li.ui-page-more:hover .icon-more{display:none}.ui-page-count{margin-right:15px}.ui-page .ui-page-input,.ui-page .ui-page-sizer{width:auto;margin-left:15px;display:inline-block;vertical-align:middle}.ui-page .ui-page-input .ui-input{width:50px;margin:0 10px}.ui-page.simple .ui-page-list li,.ui-page.small .ui-page-list li{border:none;min-width:24px;height:24px;line-height:22px}.ui-page.simple .ui-page-list li.ui-page-arrow .ui-icon,.ui-page.small .ui-page-list li.ui-page-arrow .ui-icon{line-height:22px}.ui-page.simple .ui-page-input{margin-left:0}.ui-page.simple .ui-page-input .ui-input{margin:0;width:40px}.ui-page.simple .ui-page-input>span{padding:0 8px}";
            styleInject(css$19);

            /* script */
            var __vue_script__$1n = script$1n;
            /* template */
            var __vue_render__$1z = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "ui-page", class: [_vm.size, { simple: _vm.simple }] },
                [
                  _vm.simple
                    ? _c("ul", { staticClass: "ui-page-list simple" }, [
                        _c(
                          "li",
                          {
                            staticClass: "ui-page-arrow prev",
                            class: { disabled: _vm.disabledPrev },
                            on: { click: _vm.toPrev }
                          },
                          [_c("UiIcon", { attrs: { type: "ios-arrow-left" } })],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "div",
                          { staticClass: "ui-page-input" },
                          [
                            _c("UiInput", {
                              attrs: { size: "small" },
                              on: { "on-enter": _vm.toInputPage },
                              model: {
                                value: _vm.inputValue,
                                callback: function($$v) {
                                  _vm.inputValue = $$v;
                                },
                                expression: "inputValue"
                              }
                            }),
                            _vm._v(" "),
                            _c("span", [_vm._v("/")]),
                            _vm._v(" " + _vm._s(_vm.pageCount) + "\n    ")
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "li",
                          {
                            staticClass: "ui-page-arrow next",
                            class: { disabled: _vm.disabledNext },
                            on: { click: _vm.toNext }
                          },
                          [_c("UiIcon", { attrs: { type: "ios-arrow-right" } })],
                          1
                        )
                      ])
                    : [
                        _vm.showTotal
                          ? _c(
                              "span",
                              { staticClass: "ui-page-count" },
                              [
                                _vm._t("default", [
                                  _vm._v("共 " + _vm._s(_vm.total) + " 条")
                                ])
                              ],
                              2
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        _c(
                          "ul",
                          { staticClass: "ui-page-list" },
                          [
                            _c(
                              "li",
                              {
                                staticClass: "ui-page-arrow prev",
                                class: { disabled: _vm.disabledPrev },
                                on: { click: _vm.toPrev }
                              },
                              [_c("UiIcon", { attrs: { type: "ios-arrow-left" } })],
                              1
                            ),
                            _vm._v(" "),
                            _vm.currentPage >= 5
                              ? [
                                  _c(
                                    "li",
                                    {
                                      class: { active: _vm.currentPage === 1 },
                                      on: {
                                        click: function($event) {
                                          return _vm.toPage(1)
                                        }
                                      }
                                    },
                                    [_vm._v("1")]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "li",
                                    {
                                      staticClass: "ui-page-more",
                                      attrs: { title: "向前5页" },
                                      on: { click: _vm.toPrev5 }
                                    },
                                    [
                                      _c("UiIcon", { attrs: { type: "ios-arrow-left" } }),
                                      _vm._v(" "),
                                      _c("UiIcon", { attrs: { type: "ios-arrow-left" } }),
                                      _vm._v(" "),
                                      _c("UiIcon", {
                                        staticClass: "icon-more",
                                        attrs: { type: "ios-more" }
                                      })
                                    ],
                                    1
                                  )
                                ]
                              : _vm._e(),
                            _vm._v(" "),
                            _vm._l(_vm.showPages, function(item) {
                              return _c(
                                "li",
                                {
                                  key: item,
                                  class: { active: _vm.currentPage === item },
                                  on: {
                                    click: function($event) {
                                      return _vm.toPage(item)
                                    }
                                  }
                                },
                                [_vm._v(_vm._s(item))]
                              )
                            }),
                            _vm._v(" "),
                            _vm.pageCount - _vm.currentPage >= 4
                              ? [
                                  _c(
                                    "li",
                                    {
                                      staticClass: "ui-page-more",
                                      attrs: { title: "向后5页" },
                                      on: { click: _vm.toNext5 }
                                    },
                                    [
                                      _c("UiIcon", { attrs: { type: "ios-arrow-right" } }),
                                      _vm._v(" "),
                                      _c("UiIcon", { attrs: { type: "ios-arrow-right" } }),
                                      _vm._v(" "),
                                      _c("UiIcon", {
                                        staticClass: "icon-more",
                                        attrs: { type: "ios-more" }
                                      })
                                    ],
                                    1
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "li",
                                    {
                                      class: { active: _vm.currentPage === _vm.pageCount },
                                      on: {
                                        click: function($event) {
                                          return _vm.toPage(_vm.pageCount)
                                        }
                                      }
                                    },
                                    [_vm._v(_vm._s(_vm.pageCount))]
                                  )
                                ]
                              : _vm._e(),
                            _vm._v(" "),
                            _c(
                              "li",
                              {
                                staticClass: "ui-page-arrow next",
                                class: { disabled: _vm.disabledNext },
                                on: { click: _vm.toNext }
                              },
                              [_c("UiIcon", { attrs: { type: "ios-arrow-right" } })],
                              1
                            )
                          ],
                          2
                        ),
                        _vm._v(" "),
                        _vm.showSizer
                          ? _c(
                              "ui-select",
                              {
                                staticClass: "ui-page-sizer",
                                attrs: { size: _vm.size },
                                model: {
                                  value: _vm.limit,
                                  callback: function($$v) {
                                    _vm.limit = $$v;
                                  },
                                  expression: "limit"
                                }
                              },
                              _vm._l(_vm.pageSizeOpts, function(item) {
                                return _c("UiOption", {
                                  key: item,
                                  attrs: { value: item, label: item + " 条/页" }
                                })
                              }),
                              1
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        _vm.showElevator
                          ? _c(
                              "div",
                              { staticClass: "ui-page-input" },
                              [
                                _vm._v("\n      跳至"),
                                _c("UiInput", {
                                  attrs: { size: _vm.size },
                                  on: { "on-enter": _vm.toInputPage },
                                  model: {
                                    value: _vm.inputValue,
                                    callback: function($$v) {
                                      _vm.inputValue = $$v;
                                    },
                                    expression: "inputValue"
                                  }
                                }),
                                _vm._v("页\n    ")
                              ],
                              1
                            )
                          : _vm._e()
                      ]
                ],
                2
              )
            };
            var __vue_staticRenderFns__$1z = [];
            __vue_render__$1z._withStripped = true;

              /* style */
              var __vue_inject_styles__$1z = undefined;
              /* scoped */
              var __vue_scope_id__$1z = undefined;
              /* module identifier */
              var __vue_module_identifier__$1z = undefined;
              /* functional template */
              var __vue_is_functional_template__$1z = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Page$1 = normalizeComponent_1(
                { render: __vue_render__$1z, staticRenderFns: __vue_staticRenderFns__$1z },
                __vue_inject_styles__$1z,
                __vue_script__$1n,
                __vue_scope_id__$1z,
                __vue_is_functional_template__$1z,
                __vue_module_identifier__$1z,
                undefined,
                undefined
              );

            //
            var script$1o = {
              name: 'ui-dropdown',
              components: { UiOptionList: UiDrop },
              data: function data() {
                return { isVisible: false, timeout: null }
              },
              props: {
                trigger: {
                  default: 'hover',
                  validator: function validator(value) {
                    return ['hover', 'click', 'custom'].indexOf(value) !== -1
                  }
                },
                visible: Boolean,
                placement: {
                  default: 'bottom',
                  validator: function validator(value) {
                    return [
                      'top', 'top-start', 'top-end', 
                      'right', 'right-start', 'right-end', 
                      'bottom', 'bottom-start', 'bottom-end', 
                      'left', 'left-start', 'left-end'
                    ].indexOf(value) !== -1
                  }
                }
              },
              watch: {
                visible: function visible(newVal) {
                  if (this.trigger === 'custom') { this.isVisible = newVal; }
                },
                isVisible: function isVisible(newVal) {
                  this.$emit('on-visible-change', newVal);
                }
              },
              methods: {
                handleMouseenter: function handleMouseenter() {
                  if (this.trigger === 'hover') { this.isVisible = true; }
                },
                handleMouseleave: function handleMouseleave(event) {
                  if (this.trigger === 'hover') { this.timeout = setTimeout(this.close, 150); }
                },
                handleClick: function handleClick() {
                  if (this.trigger === 'click') { this.isVisible = true; }
                },
                close: function close() {
                  this.isVisible = false;
                },
                itemClick: function itemClick(name) {
                  this.close();
                  this.$emit('on-click', name);
                },
                handleDropMouseenter: function handleDropMouseenter(event) {
                  clearTimeout(this.timeout);
                },
                handleDropMouseleave: function handleDropMouseleave(event) {
                  if (this.trigger === 'hover') { this.isVisible = false; }
                },
                /**
                 * 窗口单击事件处理
                 * @param {MouseEvent} event
                 * 模拟方式不是单击 或者下拉菜单不可见 --> 退出
                 * 如果不是挂载元素 也不是该下拉菜单 --> 退出
                 */
                handleWinClick: function handleWinClick(event) {
                  if (this.trigger !== 'click' || !this.isVisible) { return }
                  if (isSelfOrParent(this.$el, event.target) || 
                    isSelfOrParent(this.$refs.Drop, event.target)) { return }
                  this.isVisible = false;
                  this.$emit('on-clickoutside', event);
                }
              }
            };

            var css$1a = ".ui-dropdown{display:inline-block}.ui-dropdown-menu{min-width:100px}.ui-dropdown-menu .ui-dropdown{width:100%}";
            styleInject(css$1a);

            /* script */
            var __vue_script__$1o = script$1o;
            /* template */
            var __vue_render__$1A = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                {
                  directives: [
                    {
                      name: "winclick",
                      rawName: "v-winclick",
                      value: _vm.handleWinClick,
                      expression: "handleWinClick"
                    }
                  ],
                  staticClass: "ui-dropdown"
                },
                [
                  _c(
                    "div",
                    {
                      staticClass: "ui-dropdown-rel",
                      on: {
                        mouseenter: _vm.handleMouseenter,
                        mouseleave: _vm.handleMouseleave,
                        click: _vm.handleClick
                      }
                    },
                    [_vm._t("default")],
                    2
                  ),
                  _vm._v(" "),
                  _c(
                    "ui-option-list",
                    {
                      ref: "Drop",
                      attrs: { parentName: _vm.$options.name, visible: _vm.isVisible },
                      nativeOn: {
                        mouseenter: function($event) {
                          return _vm.handleDropMouseenter($event)
                        },
                        mouseleave: function($event) {
                          return _vm.handleDropMouseleave($event)
                        }
                      }
                    },
                    [_vm._t("list")],
                    2
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$1A = [];
            __vue_render__$1A._withStripped = true;

              /* style */
              var __vue_inject_styles__$1A = undefined;
              /* scoped */
              var __vue_scope_id__$1A = undefined;
              /* module identifier */
              var __vue_module_identifier__$1A = undefined;
              /* functional template */
              var __vue_is_functional_template__$1A = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Dropdown$1 = normalizeComponent_1(
                { render: __vue_render__$1A, staticRenderFns: __vue_staticRenderFns__$1A },
                __vue_inject_styles__$1A,
                __vue_script__$1o,
                __vue_scope_id__$1A,
                __vue_is_functional_template__$1A,
                __vue_module_identifier__$1A,
                undefined,
                undefined
              );

            /* script */

            /* template */
            var __vue_render__$1B = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("ul", { staticClass: "ui-dropdown-menu" }, [_vm._t("default")], 2)
            };
            var __vue_staticRenderFns__$1B = [];
            __vue_render__$1B._withStripped = true;

              /* style */
              var __vue_inject_styles__$1B = undefined;
              /* scoped */
              var __vue_scope_id__$1B = undefined;
              /* module identifier */
              var __vue_module_identifier__$1B = undefined;
              /* functional template */
              var __vue_is_functional_template__$1B = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var DropdownMenu = normalizeComponent_1(
                { render: __vue_render__$1B, staticRenderFns: __vue_staticRenderFns__$1B },
                __vue_inject_styles__$1B,
                {},
                __vue_scope_id__$1B,
                __vue_is_functional_template__$1B,
                __vue_module_identifier__$1B,
                undefined,
                undefined
              );

            //
            var script$1p = {
              data: function data() {
                return { parent: null }
              },
              props: {
                name: String,
                disabled: Boolean,
                divided: Boolean,
                selected: Boolean
              },
              methods: {
                handleClick: function handleClick(event) {
                  if (this.disabled) { return }
                  this.parent && this.parent.itemClick(this.name);
                }
              },
              mounted: function mounted() {
                this.parent = findParentByName(this, 'ui-dropdown');
              }
            };

            var css$1b = ".ui-dropdown-item{list-style:none;line-height:normal;font-size:12px;color:#495060}.ui-dropdown-item.divided{margin-top:5px;border-top:1px solid #e9eaec}.ui-dropdown-item.divided:before{content:\"\";display:block;height:5px}.ui-dropdown-item-btn{padding:7px 16px;cursor:pointer;white-space:nowrap;-webkit-transition:background-color .2s ease-in-out;transition:background-color .2s ease-in-out}.ui-dropdown-item-btn:hover:not(.disabled){background-color:#f3f3f3}.ui-dropdown-item-btn.selected:not(.disabled){color:#fff;background-color:#2d8cf0}.ui-dropdown-item-btn.disabled{color:#bbbec4;cursor:not-allowed}";
            styleInject(css$1b);

            /* script */
            var __vue_script__$1p = script$1p;
            /* template */
            var __vue_render__$1C = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "li",
                { staticClass: "ui-dropdown-item", class: { divided: _vm.divided } },
                [
                  _c(
                    "div",
                    {
                      staticClass: "ui-dropdown-item-btn",
                      class: { selected: _vm.selected, disabled: _vm.disabled },
                      on: { click: _vm.handleClick }
                    },
                    [_vm._t("default")],
                    2
                  )
                ]
              )
            };
            var __vue_staticRenderFns__$1C = [];
            __vue_render__$1C._withStripped = true;

              /* style */
              var __vue_inject_styles__$1C = undefined;
              /* scoped */
              var __vue_scope_id__$1C = undefined;
              /* module identifier */
              var __vue_module_identifier__$1C = undefined;
              /* functional template */
              var __vue_is_functional_template__$1C = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var DropdownItem = normalizeComponent_1(
                { render: __vue_render__$1C, staticRenderFns: __vue_staticRenderFns__$1C },
                __vue_inject_styles__$1C,
                __vue_script__$1p,
                __vue_scope_id__$1C,
                __vue_is_functional_template__$1C,
                __vue_module_identifier__$1C,
                undefined,
                undefined
              );

            //
            var script$1q = {
              name: 'ui-menu',
              data: function data() {
                return {
                  openedNames: this.openNames,
                  currentActiveName: this.activeName
                }
              },
              props: {
                mode: {
                  default: 'vertical',
                  validator: function validator(value) {
                    return ['horizontal', 'vertical'].indexOf(value) !== -1
                  }
                },
                theme: {
                  default: 'light',
                  validator: function validator(value) {
                    return ['light', 'dark', 'primary'].indexOf(value) !== -1
                  }
                },
                activeName: [String, Number],
                openNames: {
                  type: Array,
                  default: function () { return []; }
                },
                accordion: Boolean,
                width: {
                  type: String,
                  default: '240px'
                }
              },
              computed: {
                styles: function styles() {
                  return this.mode === 'vertical' ? { width: this.width } : {}
                }
              },
              methods: {
                /**
                 * 更新打开的菜单
                 */
                updateOpened: function updateOpened(names) {
                  if ( names === void 0 ) names = [];

                  this.openedNames = names;
                  this.$emit('update:openNames', names);
                },
                /**
                 * 切换子菜单打开状态
                 */
                toggleSubmenu: function toggleSubmenu(name) {
                  var index = this.openedNames.indexOf(name);
                  if (this.accordion) {
                    this.openedNames = index === -1 ? [name] : [];
                  } else {
                    if (index === -1) {
                      this.openedNames.push(name);
                    } else {
                      this.openedNames.splice(index, 1);
                    }
                  }
                  this.$emit('update:openNames', this.openedNames);
                },
                /**
                 * 更新活动菜单
                 */
                updateActiveName: function updateActiveName(name) {
                  this.currentActiveName = name;
                  this.$emit('update:activeName', name);
                },
                /**
                 * 获取活动菜单
                 */
                getActiveName: function getActiveName() {
                  return this.currentActiveName
                },
                /**
                 * 获取模式
                 */
                getMode: function getMode() {
                  return this.mode
                },
                /**
                 * 获取打开的菜单
                 */
                getOpenedNames: function getOpenedNames() {
                  return this.openedNames
                },
                /**
                 * 子菜单可见状态改变
                 */
                onOpenChange: function onOpenChange(name, isOpen) {
                  this.$emit('on-open-change', name, isOpen);
                },
                /**
                 * 菜单选择改变
                 */
                onSelect: function onSelect(name) {
                  this.$emit('on-select', name);
                }
              }
            };

            var css$1c = ".ui-menu{font-size:14px;position:relative;color:#495060}.ui-menu li{list-style:none}.ui-menu.horizontal{height:60px;line-height:60px}.ui-menu.horizontal .ui-menu-item,.ui-menu.horizontal .ui-menu-submenu{float:left;padding:0 20px;height:inherit;line-height:inherit}.ui-menu.vertical .ui-menu-submenu .ui-menu-submenu{padding-left:1em}.ui-menu.vertical .ui-menu-item,.ui-menu.vertical .ui-menu-submenu-title{padding:14px 24px}.ui-menu.vertical .ui-menu-item-group-title{padding-left:24px;height:48px;line-height:48px}.ui-menu.vertical .ui-menu-item,.ui-menu.vertical .ui-menu-item-group-title{font-size:14px;text-indent:1em}.ui-menu.light{background-color:#fff}.ui-menu.light:after{content:\"\";position:absolute;background-color:#dddee1}.ui-menu.light.horizontal:after{bottom:0;left:0;width:100%;height:1px}.ui-menu.light.horizontal .ui-menu-item,.ui-menu.light.horizontal .ui-menu-submenu{border-bottom:2px solid transparent}.ui-menu.light.horizontal .ui-menu-item.active,.ui-menu.light.horizontal .ui-menu-item:hover,.ui-menu.light.horizontal .ui-menu-submenu.active,.ui-menu.light.horizontal .ui-menu-submenu:hover{color:#2d8cf0;border-bottom-color:#2d8cf0}.ui-menu.light.vertical:after{top:0;right:0;width:1px;height:100%}.ui-menu.light.vertical .ui-menu-submenu-title:hover{background-color:#f3f3f3}.ui-menu.light.vertical .ui-menu-item{border-right:2px solid transparent}.ui-menu.light.vertical .ui-menu-item.active{color:#2d8cf0;border-right-color:#2d8cf0}.ui-menu.light.vertical .ui-menu-item:hover{background-color:#f3f3f3}.ui-menu.dark{background-color:#495060}.ui-menu.dark.horizontal .ui-menu-item,.ui-menu.dark.horizontal .ui-menu-submenu{color:hsla(0,0%,100%,.7)}.ui-menu.dark.horizontal .ui-menu-item.active,.ui-menu.dark.horizontal .ui-menu-item:hover,.ui-menu.dark.horizontal .ui-menu-submenu.active,.ui-menu.dark.horizontal .ui-menu-submenu:hover{color:#fff}.ui-menu.dark.vertical .ui-menu-submenu{background-color:#363e4f}.ui-menu.dark.vertical .ui-menu-submenu-title{background-color:#495060}.ui-menu.dark.vertical .ui-menu-item,.ui-menu.dark.vertical .ui-menu-submenu{color:hsla(0,0%,100%,.7)}.ui-menu.dark.vertical .ui-menu-item.active,.ui-menu.dark.vertical .ui-menu-item:hover,.ui-menu.dark.vertical .ui-menu-submenu.active,.ui-menu.dark.vertical .ui-menu-submenu:hover{color:#fff}.ui-menu.primary{background-color:#2d8cf0}.ui-menu.primary.horizontal .ui-menu-item,.ui-menu.primary.horizontal .ui-menu-submenu{color:#fff}.ui-menu.primary.horizontal .ui-menu-item.active,.ui-menu.primary.horizontal .ui-menu-item:hover,.ui-menu.primary.horizontal .ui-menu-submenu.active,.ui-menu.primary.horizontal .ui-menu-submenu:hover{background-color:#157fee}.ui-menu-item,.ui-menu-submenu{cursor:pointer;position:relative;z-index:1;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.ui-menu-item .ui-icon,.ui-menu-submenu .ui-icon{margin-right:8px}.ui-menu-item .ui-icon.title-icon,.ui-menu-submenu .ui-icon.title-icon{margin-right:0;-webkit-transition:-webkit-transform .2s ease-in-out;transition:-webkit-transform .2s ease-in-out;transition:transform .2s ease-in-out;transition:transform .2s ease-in-out,-webkit-transform .2s ease-in-out}.ui-menu-submenu.vertical .title-icon{float:right;position:relative;top:4px}.ui-menu-item-group{line-height:normal}.ui-menu-item-group-title{height:30px;line-height:30px;padding-left:8px;font-size:12px;color:#999}.ui-menu-submenu-list{max-height:none}.ui-menu-submenu-list .ui-menu-item{padding:7px 16px 8px;font-size:14px}.ui-menu-submenu-list .ui-menu-item:hover{background-color:#f3f3f3}";
            styleInject(css$1c);

            /* script */
            var __vue_script__$1q = script$1q;
            /* template */
            var __vue_render__$1D = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "ul",
                { staticClass: "ui-menu", class: [_vm.mode, _vm.theme], style: _vm.styles },
                [_vm._t("default")],
                2
              )
            };
            var __vue_staticRenderFns__$1D = [];
            __vue_render__$1D._withStripped = true;

              /* style */
              var __vue_inject_styles__$1D = undefined;
              /* scoped */
              var __vue_scope_id__$1D = undefined;
              /* module identifier */
              var __vue_module_identifier__$1D = undefined;
              /* functional template */
              var __vue_is_functional_template__$1D = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Menu$1 = normalizeComponent_1(
                { render: __vue_render__$1D, staticRenderFns: __vue_staticRenderFns__$1D },
                __vue_inject_styles__$1D,
                __vue_script__$1q,
                __vue_scope_id__$1D,
                __vue_is_functional_template__$1D,
                __vue_module_identifier__$1D,
                undefined,
                undefined
              );

            //
            var script$1r = {
              data: function data() {
                return {
                  parent: null,
                  menuRoot: null
                }
              },
              props: {
                name: [String, Number]
              },
              computed: {
                isVertical: function isVertical() {
                  return this.menuRoot && this.menuRoot.getMode() === 'vertical'
                },
                active: function active() {
                  if (this.parent) {
                    return this.isVertical && this.menuRoot.getActiveName() === this.name
                  } else {
                    return this.menuRoot && this.menuRoot.getActiveName() === this.name
                  }
                }
              },
              methods: {
                handleClick: function handleClick() {
                  this.menuRoot && this.menuRoot.updateActiveName(
                    !this.parent || this.isVertical ? this.name : this.parent.getName()
                  );
                  !this.isVertical && this.parent && this.parent.close();
                  this.menuRoot && this.menuRoot.onSelect(this.name);
                }
              },
              mounted: function mounted() {
                this.menuRoot = findParentByName(this, 'ui-menu');
                this.parent = findParentByName(this, 'ui-menu-submenu');
              }
            };

            /* script */
            var __vue_script__$1r = script$1r;

            /* template */
            var __vue_render__$1E = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "li",
                {
                  staticClass: "ui-menu-item",
                  class: { active: _vm.active },
                  on: { click: _vm.handleClick }
                },
                [_vm._t("default")],
                2
              )
            };
            var __vue_staticRenderFns__$1E = [];
            __vue_render__$1E._withStripped = true;

              /* style */
              var __vue_inject_styles__$1E = undefined;
              /* scoped */
              var __vue_scope_id__$1E = undefined;
              /* module identifier */
              var __vue_module_identifier__$1E = undefined;
              /* functional template */
              var __vue_is_functional_template__$1E = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var MenuItem = normalizeComponent_1(
                { render: __vue_render__$1E, staticRenderFns: __vue_staticRenderFns__$1E },
                __vue_inject_styles__$1E,
                __vue_script__$1r,
                __vue_scope_id__$1E,
                __vue_is_functional_template__$1E,
                __vue_module_identifier__$1E,
                undefined,
                undefined
              );

            //
            var script$1s = {
              name: 'ui-menu-submenu',
              components: { UiIcon: UiIcon, UiOptionList: UiDrop },
              data: function data() {
                return {
                  visible: false,
                  timeout: null,
                  parent: null
                }
              },
              props: {
                name: [String, Number]
              },
              computed: {
                active: function active() {
                  return this.visible || this.parent && this.parent.getActiveName() === this.name
                },
                isVertical: function isVertical() {
                  return this.parent && this.parent.getMode() === 'vertical'
                },
                isOpened: function isOpened() {
                  return this.parent && this.parent.getOpenedNames().indexOf(this.name) !== -1
                }
              },
              watch: {
                visible: function visible(newVal) {
                  this.parent && this.parent.onOpenChange(this.name, newVal);
                }
              },
              methods: {
                close: function close() {
                  this.visible = false;
                },
                handleMouseenter: function handleMouseenter() {
                  if (this.isVertical) { return }
                  clearTimeout(this.timeout);
                  this.visible = true;
                },
                handleMouseleave: function handleMouseleave() {
                  if (this.isVertical) { return }
                  this.timeout = setTimeout(this.close, 150);
                },
                handleDropMouseenter: function handleDropMouseenter() {
                  clearTimeout(this.timeout);
                },
                handleDropMouseleave: function handleDropMouseleave() {
                  this.timeout = setTimeout(this.close, 150);
                },
                getName: function getName() {
                  return this.name
                },
                handleTitleClick: function handleTitleClick() {
                  this.parent && this.parent.toggleSubmenu(this.name);
                }
              },
              mounted: function mounted() {
                this.parent = findParentByName(this, 'ui-menu');
              }
            };

            /* script */
            var __vue_script__$1s = script$1s;

            /* template */
            var __vue_render__$1F = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "li",
                {
                  staticClass: "ui-menu-submenu",
                  class: { vertical: _vm.isVertical, active: _vm.active },
                  on: { mouseenter: _vm.handleMouseenter, mouseleave: _vm.handleMouseleave }
                },
                [
                  _c(
                    "div",
                    {
                      staticClass: "ui-menu-submenu-title",
                      on: { click: _vm.handleTitleClick }
                    },
                    [
                      _vm._t("title"),
                      _vm._v(" "),
                      _c("UiIcon", {
                        staticClass: "title-icon",
                        attrs: { type: "ios-arrow-down" }
                      })
                    ],
                    2
                  ),
                  _vm._v(" "),
                  _c(
                    "div",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.isVertical && _vm.isOpened,
                          expression: "isVertical && isOpened"
                        }
                      ],
                      staticClass: "vertical"
                    },
                    [_c("ul", [_vm._t("default")], 2)]
                  ),
                  _vm._v(" "),
                  !_vm.isVertical
                    ? _c(
                        "ui-option-list",
                        {
                          staticClass: "ui-menu-submenu-list",
                          attrs: { visible: _vm.visible, parentName: _vm.$options.name },
                          nativeOn: {
                            mouseenter: function($event) {
                              return _vm.handleDropMouseenter($event)
                            },
                            mouseleave: function($event) {
                              return _vm.handleDropMouseleave($event)
                            }
                          }
                        },
                        [_c("ul", [_vm._t("default")], 2)]
                      )
                    : _vm._e()
                ],
                1
              )
            };
            var __vue_staticRenderFns__$1F = [];
            __vue_render__$1F._withStripped = true;

              /* style */
              var __vue_inject_styles__$1F = undefined;
              /* scoped */
              var __vue_scope_id__$1F = undefined;
              /* module identifier */
              var __vue_module_identifier__$1F = undefined;
              /* functional template */
              var __vue_is_functional_template__$1F = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Submenu = normalizeComponent_1(
                { render: __vue_render__$1F, staticRenderFns: __vue_staticRenderFns__$1F },
                __vue_inject_styles__$1F,
                __vue_script__$1s,
                __vue_scope_id__$1F,
                __vue_is_functional_template__$1F,
                __vue_module_identifier__$1F,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //

            var script$1t = {
              props: {
                title: String
              }
            };

            /* script */
            var __vue_script__$1t = script$1t;

            /* template */
            var __vue_render__$1G = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("li", { staticClass: "ui-menu-item-group" }, [
                _c("div", { staticClass: "ui-menu-item-group-title" }, [
                  _vm._v(_vm._s(_vm.title))
                ]),
                _vm._v(" "),
                _c("ul", [_vm._t("default")], 2)
              ])
            };
            var __vue_staticRenderFns__$1G = [];
            __vue_render__$1G._withStripped = true;

              /* style */
              var __vue_inject_styles__$1G = undefined;
              /* scoped */
              var __vue_scope_id__$1G = undefined;
              /* module identifier */
              var __vue_module_identifier__$1G = undefined;
              /* functional template */
              var __vue_is_functional_template__$1G = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var MenuGroup = normalizeComponent_1(
                { render: __vue_render__$1G, staticRenderFns: __vue_staticRenderFns__$1G },
                __vue_inject_styles__$1G,
                __vue_script__$1t,
                __vue_scope_id__$1G,
                __vue_is_functional_template__$1G,
                __vue_module_identifier__$1G,
                undefined,
                undefined
              );

            //
            var script$1u = {
              data: function data() {
                return { zIndex: 0, styles: {} }
              },
              props: {
                placement: {
                  default: 'bottom',
                  validator: function validator(value) {
                    return [
                      'top', 'top-start', 'top-end',
                      'right', 'right-start', 'right-end',
                      'bottom', 'bottom-start', 'bottom-end',
                      'left', 'left-start', 'left-end'
                    ].indexOf(value) !== -1
                  }
                },
                visible: Boolean,
                transitionName: {
                  type: String,
                  default: 'ui-fade'
                },
                hasArrow: Boolean,
                arrowClass: String,
                refElement: {}
              },
              watch: {
                visible: function visible() {
                  this.updatePosition();
                }
              },
              methods: {
                /**
                 * 获取挂载元素位置
                 */
                setPosition: function setPosition() {
                  // 挂载元素尺寸
                  var ref = this.$el;
                  var oh = ref.offsetHeight;
                  var ow = ref.offsetWidth;
                  // 引用元素位置和尺寸
                  var refElement = this.refElement || this.$parent.$el;
                  var ref$1 = getOffset(refElement);
                  var t = ref$1.top;
                  var r = ref$1.right;
                  var b = ref$1.bottom;
                  var l = ref$1.left;
                  var w = ref$1.width;
                  var h = ref$1.height;
                  var pos = {};
                  var ref$2 = this;
                  var placement = ref$2.placement;
                  // 如果是顶部和底部 那么top一样；如果是右边和左边 那么left一样
                  if (placement.startsWith('top')) {
                    pos.top = (t - oh) + "px";
                  } else if (placement.startsWith('right')) {
                    pos.left = r + "px";
                  } else if (placement.startsWith('bottom')) {
                    pos.top = b + "px";
                  } else if (placement.startsWith('left')) {
                    pos.left = (l - ow) + "px";
                  }

                  if (['top', 'bottom'].indexOf(placement) !== -1) {
                    pos.left = (l - (ow - w) / 2) + "px";
                  } else if (['top-start', 'bottom-start'].indexOf(placement) !== -1) {
                    pos.left = l + "px";
                  } else if (['top-end', 'bottom-end'].indexOf(placement) !== -1) {
                    pos.left = (r - ow) + "px";
                  } else if (['right', 'left'].indexOf(placement) !== -1) {
                    pos.top = (t - (oh - h) / 2) + "px";
                  } else if (['right-start', 'left-start'].indexOf(placement) !== -1) {
                    pos.top = t + "px";
                  } else if (['right-end', 'left-end'].indexOf(placement) !== -1) {
                    pos.top = (b - oh) + "px";
                  }
                  this.styles = pos;
                },
                updatePosition: function updatePosition() {
                  if (!this.visible) { return }
                  this.zIndex = setMaxZIndex();
                  this.$nextTick(this.setPosition);
                }
              },
              mounted: function mounted() {
                document.body.appendChild(this.$el);
                this.updatePosition();
              },
              beforeDestroy: function beforeDestroy() {
                this.$el.parentNode && this.$el.parentNode.removeChild(this.$el);
              }
            };

            var css$1d = ".ui-popper{position:absolute}.ui-popper.hasArrow[x-placement^=top]{padding:5px 0 8px}.ui-popper.hasArrow[x-placement^=right]{padding:0 5px 0 8px}.ui-popper.hasArrow[x-placement^=bottom]{padding:8px 0 5px}.ui-popper.hasArrow[x-placement^=left]{padding:0 8px 0 5px}.ui-popper[x-placement^=top] .ui-popper-arrow{bottom:3px;border-width:5px 5px 0;border-top-color:rgba(73,80,96,.96)}.ui-popper[x-placement^=right] .ui-popper-arrow{left:3px;border-width:5px 5px 5px 0;border-right-color:rgba(73,80,96,.96)}.ui-popper[x-placement^=bottom] .ui-popper-arrow{top:3px;border-width:0 5px 5px;border-bottom-color:rgba(73,80,96,.96)}.ui-popper[x-placement^=left] .ui-popper-arrow{right:3px;border-width:5px 0 5px 5px;border-left-color:rgba(73,80,96,.96)}.ui-popper[x-placement=bottom] .ui-popper-arrow,.ui-popper[x-placement=top] .ui-popper-arrow{left:50%;margin-left:-5px}.ui-popper[x-placement=bottom-start] .ui-popper-arrow,.ui-popper[x-placement=top-start] .ui-popper-arrow{left:16px}.ui-popper[x-placement=bottom-end] .ui-popper-arrow,.ui-popper[x-placement=top-end] .ui-popper-arrow{right:16px}.ui-popper[x-placement=left] .ui-popper-arrow,.ui-popper[x-placement=right] .ui-popper-arrow{top:50%;margin-top:-5px}.ui-popper[x-placement=left-start] .ui-popper-arrow,.ui-popper[x-placement=right-start] .ui-popper-arrow{top:8px}.ui-popper[x-placement=left-end] .ui-popper-arrow,.ui-popper[x-placement=right-end] .ui-popper-arrow{bottom:8px}.ui-popper-arrow{position:absolute;width:0;height:0;border-style:solid;border-color:transparent}";
            styleInject(css$1d);

            /* script */
            var __vue_script__$1u = script$1u;
            /* template */
            var __vue_render__$1H = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("transition", { attrs: { name: _vm.transitionName } }, [
                _c(
                  "div",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.visible,
                        expression: "visible"
                      }
                    ],
                    staticClass: "ui-popper",
                    class: { hasArrow: _vm.hasArrow },
                    style: Object.assign({}, _vm.styles, { zIndex: _vm.zIndex }),
                    attrs: { "x-placement": _vm.placement }
                  },
                  [
                    _vm._t("default"),
                    _vm._v(" "),
                    _vm.hasArrow
                      ? _c("span", {
                          staticClass: "ui-popper-arrow",
                          class: _vm.arrowClass
                        })
                      : _vm._e()
                  ],
                  2
                )
              ])
            };
            var __vue_staticRenderFns__$1H = [];
            __vue_render__$1H._withStripped = true;

              /* style */
              var __vue_inject_styles__$1H = undefined;
              /* scoped */
              var __vue_scope_id__$1H = undefined;
              /* module identifier */
              var __vue_module_identifier__$1H = undefined;
              /* functional template */
              var __vue_is_functional_template__$1H = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var UiPopper = normalizeComponent_1(
                { render: __vue_render__$1H, staticRenderFns: __vue_staticRenderFns__$1H },
                __vue_inject_styles__$1H,
                __vue_script__$1u,
                __vue_scope_id__$1H,
                __vue_is_functional_template__$1H,
                __vue_module_identifier__$1H,
                undefined,
                undefined
              );

            //
            var script$1v = {
              components: { UiPopper: UiPopper },
              data: function data() {
                return { popperVisible: false, refElement: null }
              },
              props: {
                content: [String, Number],
                placement: String,
                disabled: Boolean,
                delay: {
                  type: Number,
                  default: 0
                },
                always: Boolean
              },
              watch: {
                disabled: function disabled(newVal) {
                  if (newVal) { this.popperVisible = false; }
                }
              },
              methods: {
                handleMouseenter: function handleMouseenter() {
                  var this$1 = this;

                  if (this.disabled) { return }
                  this.timeout = setTimeout(function () {
                    this$1.popperVisible = true;
                    this$1.$emit('on-popper-show');
                  }, this.delay);
                },
                handleMouseleave: function handleMouseleave() {
                  clearTimeout(this.timeout);
                  this.popperVisible = false;
                  this.$emit('on-popper-hide');
                },
                setPosition: function setPosition() {
                  this.$refs.Popper.setPosition();
                }
              },
              mounted: function mounted() {
                this.refElement = this.$refs.Ref.children[0];
              }
            };

            var css$1e = ".ui-tooltip,.ui-tooltip-rel{display:inline-block}.ui-tooltip-content{max-width:250px;min-height:34px;padding:8px 12px;color:#fff;background-color:rgba(73,80,96,.96);border-radius:4px;-webkit-box-shadow:0 1px 6px rgba(0,0,0,.2);box-shadow:0 1px 6px rgba(0,0,0,.2);white-space:nowrap}";
            styleInject(css$1e);

            /* script */
            var __vue_script__$1v = script$1v;
            /* template */
            var __vue_render__$1I = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "ui-tooltip" },
                [
                  _c(
                    "div",
                    {
                      ref: "Ref",
                      staticClass: "ui-tooltip-rel",
                      on: {
                        mouseenter: _vm.handleMouseenter,
                        mouseleave: _vm.handleMouseleave
                      }
                    },
                    [_vm._t("default")],
                    2
                  ),
                  _vm._v(" "),
                  _c(
                    "ui-popper",
                    {
                      ref: "Popper",
                      attrs: {
                        hasArrow: "",
                        refElement: _vm.refElement,
                        placement: _vm.placement,
                        visible: _vm.always || _vm.popperVisible
                      }
                    },
                    [
                      _c(
                        "div",
                        { staticClass: "ui-tooltip-content" },
                        [_vm._t("content", [_vm._v(_vm._s(_vm.content))])],
                        2
                      )
                    ]
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$1I = [];
            __vue_render__$1I._withStripped = true;

              /* style */
              var __vue_inject_styles__$1I = undefined;
              /* scoped */
              var __vue_scope_id__$1I = undefined;
              /* module identifier */
              var __vue_module_identifier__$1I = undefined;
              /* functional template */
              var __vue_is_functional_template__$1I = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Tooltip$1 = normalizeComponent_1(
                { render: __vue_render__$1I, staticRenderFns: __vue_staticRenderFns__$1I },
                __vue_inject_styles__$1I,
                __vue_script__$1v,
                __vue_scope_id__$1I,
                __vue_is_functional_template__$1I,
                __vue_module_identifier__$1I,
                undefined,
                undefined
              );

            //
            var script$1w = {
              components: { UiIcon: UiIcon, UiPopper: UiPopper, UiButton: Button$1 },
              data: function data() {
                return { popperVisible: this.value, refElement: null }
              },
              props: {
                trigger: {
                  default: 'click',
                  validator: function validator(value) {
                    return ['hover', 'click', 'focus'].indexOf(value) !== -1
                  }
                },
                title: [String, Number],
                content: [String, Number],
                placement: {
                  type: String,
                  default: 'top'
                },
                width: [String, Number],
                confirm: Boolean,
                okText: {
                  type: String,
                  default: '确定'
                },
                cancelText: {
                  type: String,
                  default: '取消'
                },
                popperClass: String,
                value: Boolean
              },
              computed: {
                hasContent: function hasContent() {
                  return this.content || this.$slots.content !== undefined
                },
                popperStyles: function popperStyles() {
                  return this.width ? { width: ((parseInt(this.width)) + "px") } : {}
                }
              },
              watch: {
                popperVisible: function popperVisible(newVal) {
                  this.$emit('input', newVal);
                  this.$emit(("on-popper-" + (newVal ? 'show' : 'hide')));
                },
                value: function value(newVal) {
                  this.popperVisible = newVal;
                }
              },
              methods: {
                handleMouseenter: function handleMouseenter() {
                  if (this.confirm) { return }
                  if (this.trigger === 'hover') { this.popperVisible = true; }
                },
                handleMouseleave: function handleMouseleave() {
                  if (this.confirm) { return }
                  if (this.trigger === 'hover') { this.popperVisible = false; }
                },
                handleMousedown: function handleMousedown() {
                  if (this.confirm) { return }
                  if (this.trigger === 'focus') { this.popperVisible = true; }
                },
                handleMouseup: function handleMouseup() {
                  if (this.confirm) { return }
                  if (this.trigger === 'focus') { this.popperVisible = false; }
                },
                handleClick: function handleClick() {
                  if (this.trigger === 'click') {
                    this.popperVisible = !this.popperVisible;
                  }
                },
                /**
                 * 窗口单击处理
                 * @param {MouseEvent} event
                 */
                handleWinClick: function handleWinClick(event) {
                  if (this.trigger !== 'click') { return }
                  var target = event.target;
                  if (
                    isSelfOrParent(this.$el, target) || 
                    isSelfOrParent(this.$refs.Popper.$el, target)
                  ) { return }
                  this.popperVisible = false;
                },
                onCancel: function onCancel() {
                  this.popperVisible = false;
                  this.$emit('on-cancel');
                },
                onOK: function onOK() {
                  this.popperVisible = false;
                  this.$emit('on-ok');
                }
              },
              mounted: function mounted() {
                this.refElement = this.$refs.Ref.children[0];
              }
            };

            var css$1f = ".ui-poptip,.ui-poptip-rel{display:inline-block}.ui-poptip-body{min-width:150px;background-color:#fff;border-radius:4px;-webkit-box-shadow:0 1px 6px rgba(0,0,0,.2);box-shadow:0 1px 6px rgba(0,0,0,.2)}.ui-poptip-content,.ui-poptip-title{padding:8px 16px}.ui-poptip-title{position:relative;font-size:14px}.ui-poptip-title:after{content:\"\";display:block;height:1px;position:absolute;left:8px;right:8px;bottom:0;background-color:#e9eaec}.ui-poptip-actions{text-align:right;padding:8px 16px 16px}.ui-poptip-actions button+button{margin-left:4px}.ui-poptip-confirm-icon{color:#f90;margin-right:4px;position:absolute;left:20px;line-height:inherit}.ui-popper.confirm{max-width:300px}.ui-popper.confirm .ui-poptip-title{padding:16px 16px 8px 36px}.ui-popper .ui-poptip-arrow:after{content:\"\";border:5px;width:0;height:0;position:absolute;border-color:transparent;border-style:solid}.ui-popper[x-placement^=top] .ui-poptip-arrow:after{bottom:1px;margin-left:-5px;border-bottom-width:0;border-top-width:5px;border-top-color:#fff}.ui-popper[x-placement^=top] .ui-popper-arrow.ui-poptip-arrow{border-top-color:hsla(0,0%,85.1%,.5)}.ui-popper[x-placement^=right] .ui-poptip-arrow:after{left:1px;bottom:-5px;border-left-width:0;border-right-width:5px;border-right-color:#fff}.ui-popper[x-placement^=right] .ui-popper-arrow.ui-poptip-arrow{border-right-color:hsla(0,0%,85.1%,.5)}.ui-popper[x-placement^=bottom] .ui-poptip-arrow:after{top:1px;margin-left:-5px;border-top-width:0;border-bottom-width:5px;border-bottom-color:#fff}.ui-popper[x-placement^=bottom] .ui-popper-arrow.ui-poptip-arrow{border-bottom-color:hsla(0,0%,85.1%,.5)}.ui-popper[x-placement^=left] .ui-poptip-arrow:after{right:1px;border-right-width:0;border-left-width:5px;border-left-color:#fff;bottom:-5px}.ui-popper[x-placement^=left] .ui-popper-arrow.ui-poptip-arrow{border-left-color:hsla(0,0%,85.1%,.5)}";
            styleInject(css$1f);

            /* script */
            var __vue_script__$1w = script$1w;
            /* template */
            var __vue_render__$1J = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                {
                  directives: [
                    {
                      name: "winclick",
                      rawName: "v-winclick",
                      value: _vm.handleWinClick,
                      expression: "handleWinClick"
                    }
                  ],
                  staticClass: "ui-poptip"
                },
                [
                  _c(
                    "div",
                    {
                      ref: "Ref",
                      staticClass: "ui-poptip-rel",
                      on: {
                        mouseenter: _vm.handleMouseenter,
                        mouseleave: _vm.handleMouseleave,
                        mousedown: _vm.handleMousedown,
                        mouseup: _vm.handleMouseup,
                        click: _vm.handleClick
                      }
                    },
                    [_vm._t("default")],
                    2
                  ),
                  _vm._v(" "),
                  _c(
                    "ui-popper",
                    {
                      ref: "Popper",
                      class: [{ confirm: _vm.confirm }, _vm.popperClass],
                      style: _vm.popperStyles,
                      attrs: {
                        arrowClass: "ui-poptip-arrow",
                        hasArrow: "",
                        refElement: _vm.refElement,
                        placement: _vm.placement,
                        visible: _vm.popperVisible
                      }
                    },
                    [
                      _c("div", { staticClass: "ui-poptip-body" }, [
                        _c(
                          "div",
                          { staticClass: "ui-poptip-title" },
                          [
                            _vm.confirm
                              ? _c("UiIcon", {
                                  staticClass: "ui-poptip-confirm-icon",
                                  attrs: { type: "help-circled" }
                                })
                              : _vm._e(),
                            _vm._v(" "),
                            _vm._t("title", [_vm._v(_vm._s(_vm.title))])
                          ],
                          2
                        ),
                        _vm._v(" "),
                        _vm.hasContent
                          ? _c(
                              "div",
                              { staticClass: "ui-poptip-content" },
                              [_vm._t("content", [_vm._v(_vm._s(_vm.content))])],
                              2
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        _vm.confirm
                          ? _c(
                              "div",
                              { staticClass: "ui-poptip-actions" },
                              [
                                _c(
                                  "ui-button",
                                  {
                                    attrs: { type: "text", size: "small" },
                                    on: { click: _vm.onCancel }
                                  },
                                  [_vm._v(_vm._s(_vm.cancelText))]
                                ),
                                _vm._v(" "),
                                _c(
                                  "ui-button",
                                  {
                                    attrs: { type: "primary", size: "small" },
                                    on: { click: _vm.onOK }
                                  },
                                  [_vm._v(_vm._s(_vm.okText))]
                                )
                              ],
                              1
                            )
                          : _vm._e()
                      ])
                    ]
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$1J = [];
            __vue_render__$1J._withStripped = true;

              /* style */
              var __vue_inject_styles__$1J = undefined;
              /* scoped */
              var __vue_scope_id__$1J = undefined;
              /* module identifier */
              var __vue_module_identifier__$1J = undefined;
              /* functional template */
              var __vue_is_functional_template__$1J = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Poptip$1 = normalizeComponent_1(
                { render: __vue_render__$1J, staticRenderFns: __vue_staticRenderFns__$1J },
                __vue_inject_styles__$1J,
                __vue_script__$1w,
                __vue_scope_id__$1J,
                __vue_is_functional_template__$1J,
                __vue_module_identifier__$1J,
                undefined,
                undefined
              );

            //
            var script$1x = {
              name: 'ui-tree-node',
              components: { UiIcon: UiIcon, UiLoading: UiLoading, UiCheckbox: Checkbox$1 },
              data: function data() {
                return { parent: null }
              },
              props: {
                data: {
                  type: Array,
                  default: function () { return []; }
                }
              },
              computed: {
                showCheckbox: function showCheckbox() {
                  return this.parent && this.parent.showCheckbox
                }
              },
              methods: {
                /**
                 * 选择当前节点
                 */
                handleTextClick: function handleTextClick(item) {
                  if (item.disabled) { return }
                  this.parent && this.parent.updateSeleckedNodes(item);
                },
                /**
                 * 复选框选中状态改变
                 */
                handleCheckedChange: function handleCheckedChange(item) {
                  this.parent.updateCheckedNodes(item);
                },
                /**
                 * 切换折叠和展开子节点
                 */
                toggleExpand: function toggleExpand(item) {
                  this.$set(item, 'expand', !item.expand);
                  this.parent && this.parent.toggleExpand(item);
                }
              },
              mounted: function mounted() {
                this.parent = findParentByName(this, 'ui-tree');
              }
            };

            var css$1g = ".ui-tree-node li{list-style:none;font-size:14px}.ui-tree-node-title{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:6px 0}.ui-tree-node-title .ui-checkbox{margin-right:0}.ui-tree-node-arrow,.ui-tree-node-loading-icon{width:14px}.ui-tree-node-arrow{cursor:pointer;-webkit-transition:-webkit-transform .2s ease-in-out;transition:-webkit-transform .2s ease-in-out;transition:transform .2s ease-in-out;transition:transform .2s ease-in-out,-webkit-transform .2s ease-in-out}.ui-tree-node-arrow.expand{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-transform:rotate(90deg);transform:rotate(90deg)}.ui-tree-node-loading-icon{font-size:14px!important;color:#495060}.ui-tree-node-loading{position:relative;display:inline-block}.ui-tree-node-loading .ui-scroll-loading{height:auto;width:14px}.ui-tree-node-item{padding-left:2em}.ui-tree-node-text{padding:0 4px;cursor:pointer}.ui-tree-node-text:hover{background-color:#ebf8fe}.ui-tree-node-text.selected{background-color:#ceeefd}";
            styleInject(css$1g);

            /* script */
            var __vue_script__$1x = script$1x;
            /* template */
            var __vue_render__$1K = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "ul",
                { staticClass: "ui-tree-node" },
                _vm._l(_vm.data, function(item, index) {
                  return _c(
                    "li",
                    { key: index, staticClass: "ui-tree-node-item" },
                    [
                      _c(
                        "div",
                        { staticClass: "ui-tree-node-title" },
                        [
                          item.loading
                            ? _c(
                                "div",
                                { staticClass: "ui-tree-node-loading" },
                                [
                                  _c("UiLoading", {
                                    attrs: {
                                      iconClass: "ui-tree-node-loading-icon",
                                      loading: ""
                                    }
                                  })
                                ],
                                1
                              )
                            : [
                                item.children
                                  ? _c("UiIcon", {
                                      staticClass: "ui-tree-node-arrow",
                                      class: { expand: item.expand },
                                      attrs: { type: "arrow-right-b" },
                                      on: {
                                        click: function($event) {
                                          return _vm.toggleExpand(item)
                                        }
                                      }
                                    })
                                  : _vm._e()
                              ],
                          _vm._v(" "),
                          _vm.showCheckbox
                            ? _c("UiCheckbox", {
                                attrs: { disabled: item.disableCheckbox || item.disabled },
                                on: {
                                  "on-change": function($event) {
                                    return _vm.handleCheckedChange(item)
                                  }
                                },
                                model: {
                                  value: item.checked,
                                  callback: function($$v) {
                                    _vm.$set(item, "checked", $$v);
                                  },
                                  expression: "item.checked"
                                }
                              })
                            : _vm._e(),
                          _vm._v(" "),
                          _c(
                            "span",
                            {
                              staticClass: "ui-tree-node-text",
                              class: { selected: item.selected },
                              on: {
                                click: function($event) {
                                  return _vm.handleTextClick(item)
                                }
                              }
                            },
                            [_vm._v(_vm._s(item.title))]
                          )
                        ],
                        2
                      ),
                      _vm._v(" "),
                      item.children && item.expand
                        ? _c("ui-tree-node", {
                            attrs: { data: item.children, showCheckbox: _vm.showCheckbox }
                          })
                        : _vm._e()
                    ],
                    1
                  )
                }),
                0
              )
            };
            var __vue_staticRenderFns__$1K = [];
            __vue_render__$1K._withStripped = true;

              /* style */
              var __vue_inject_styles__$1K = undefined;
              /* scoped */
              var __vue_scope_id__$1K = undefined;
              /* module identifier */
              var __vue_module_identifier__$1K = undefined;
              /* functional template */
              var __vue_is_functional_template__$1K = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var UiTreeNode = normalizeComponent_1(
                { render: __vue_render__$1K, staticRenderFns: __vue_staticRenderFns__$1K },
                __vue_inject_styles__$1K,
                __vue_script__$1x,
                __vue_scope_id__$1K,
                __vue_is_functional_template__$1K,
                __vue_module_identifier__$1K,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //

            function objectWithoutProperties$2 (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }
            var key = 0;
            var script$1y = {
              name: 'ui-tree',
              components: { UiTreeNode: UiTreeNode },
              data: function data() {
                return {
                  flatState: [],
                  selectedNodes: []
                }
              },
              props: {
                data: {
                  type: Array,
                  default: function () { return []; }
                },
                multiple: Boolean,
                showCheckbox: Boolean,
                emptyText: {
                  type: String,
                  default: '暂无数据'
                },
                loadData: Function,
                render: Function,
                childrenKey: {
                  type: String,
                  default: 'children'
                }
              },
              watch: {
                data: {
                  deep: true,
                  handler: function handler(newVal) {
                    this.convertData();
                  }
                }
              },
              methods: {
                /**
                 * 转换数据，增加唯一标识的key
                 */
                convertData: function convertData() {
                  var flatState = [];
                  var ref = this;
                  var data = ref.data;
                  var loop = function () {
                    var arr = [];
                    data.forEach(function (_) {
                      _.nodeKey = key++;
                      flatState.push(_);
                      _.children && arr.push.apply(arr, _.children);
                    });
                    data = arr;
                  };

                  while (data.length) loop();
                  this.flatState = flatState;
                },
                /**
                 * 更新选择的节点
                 */
                updateSeleckedNodes: function updateSeleckedNodes(item) {
                  var this$1 = this;

                  if (this.multiple) {
                    this.$set(item, 'selected', !item.selected);
                  } else {
                    this.flatState.forEach(function (_) { return this$1.$set(_, 'selected', false); });
                    this.$set(item, 'selected', true);
                  }
                  this.$emit('on-select-change', this.getSelectedNodes());
                },
                /**
                 * 更新选中的节点
                 */
                updateCheckedNodes: function updateCheckedNodes(item) {
                  var this$1 = this;

                  var eachData = item.children || [];
                  var loop = function () {
                    var arr = [];
                    eachData.forEach(function (_) {
                      this$1.$set(_, 'checked', item.checked);
                      _.children && arr.push.apply(arr, _.children);
                    });
                    eachData = arr;
                  };

                  while (eachData.length) loop();
                  var data = [].concat( this.flatState );
                  data.reverse();
                  data.forEach(function (_) {
                    _.children && this$1.$set(_, 'checked', _.children.every(function (__) { return __.checked; }));
                  });
                  this.$emit('on-check-change', this.getCheckedNodes());
                },
                /**
                 * 获取选中的节点
                 */
                getCheckedNodes: function getCheckedNodes() {
                  return this.flatState.filter(function (_) { return _.checked; }).map(function (_) {
                    var __ = _.children;
                    var rest = objectWithoutProperties$2( _, ["children"] );
                    var data = rest;
                    return data
                  })
                },
                /**
                 * 获取选择的节点
                 */
                getSelectedNodes: function getSelectedNodes() {
                  return this.flatState.filter(function (_) { return _.selected; }).map(function (_) {
                    var __ = _.children;
                    var rest = objectWithoutProperties$2( _, ["children"] );
                    var data = rest;
                    return data
                  })
                },
                /**
                 * 切换折叠和展开子节点
                 */
                toggleExpand: function toggleExpand(item) {
                  var this$1 = this;

                  if (!item.children.length && this.loadData) {
                    this.$set(item, 'loading', true);
                    this.loadData(item, function (data) {
                      item.children = data;
                      this$1.$set(item, 'loading', false);
                    });
                  }
                  this.$emit('on-toggle-expand', item);
                }
              },
              mounted: function mounted() {
                this.convertData();
              }
            };

            /* script */
            var __vue_script__$1y = script$1y;

            /* template */
            var __vue_render__$1L = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "ui-tree" },
                [_c("UiTreeNode", { attrs: { data: _vm.data } })],
                1
              )
            };
            var __vue_staticRenderFns__$1L = [];
            __vue_render__$1L._withStripped = true;

              /* style */
              var __vue_inject_styles__$1L = undefined;
              /* scoped */
              var __vue_scope_id__$1L = undefined;
              /* module identifier */
              var __vue_module_identifier__$1L = undefined;
              /* functional template */
              var __vue_is_functional_template__$1L = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Tree$1 = normalizeComponent_1(
                { render: __vue_render__$1L, staticRenderFns: __vue_staticRenderFns__$1L },
                __vue_inject_styles__$1L,
                __vue_script__$1y,
                __vue_scope_id__$1L,
                __vue_is_functional_template__$1L,
                __vue_module_identifier__$1L,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$1z = {
              props: {
                columns: Array
              }
            };

            /* script */
            var __vue_script__$1z = script$1z;

            /* template */
            var __vue_render__$1M = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { staticClass: "ui-table-header" }, [
                _c("table", [
                  _c(
                    "colgroup",
                    _vm._l(_vm.columns, function(item) {
                      return _c("col", { key: item.key })
                    }),
                    0
                  ),
                  _vm._v(" "),
                  _c("thead", [
                    _c(
                      "tr",
                      _vm._l(_vm.columns, function(item) {
                        return _c("th", { key: item.key }, [
                          _c("div", { staticClass: "ui-table-cell" }, [
                            _vm._v(_vm._s(item.title))
                          ])
                        ])
                      }),
                      0
                    )
                  ])
                ])
              ])
            };
            var __vue_staticRenderFns__$1M = [];
            __vue_render__$1M._withStripped = true;

              /* style */
              var __vue_inject_styles__$1M = undefined;
              /* scoped */
              var __vue_scope_id__$1M = undefined;
              /* module identifier */
              var __vue_module_identifier__$1M = undefined;
              /* functional template */
              var __vue_is_functional_template__$1M = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var UiTableHeader = normalizeComponent_1(
                { render: __vue_render__$1M, staticRenderFns: __vue_staticRenderFns__$1M },
                __vue_inject_styles__$1M,
                __vue_script__$1z,
                __vue_scope_id__$1M,
                __vue_is_functional_template__$1M,
                __vue_module_identifier__$1M,
                undefined,
                undefined
              );

            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //

            var script$1A = {
              props: {
                data: Array,
                columns: Array,
                rowClassName: Function
              },
              methods: {
                setRowClassName: function setRowClassName(row, index) {
                  var customClsName = this.rowClassName && this.rowClassName(row, index);
                  return [customClsName, { hasCustomClsName: customClsName }]
                },
                setColClassName: function setColClassName(row, col) {
                  var cellClsName = (row.cellClassName || {})[col.key];
                  return [col.className, cellClsName, { hasCustomClsName: cellClsName || col.className }]
                }
              }
            };

            /* script */
            var __vue_script__$1A = script$1A;

            /* template */
            var __vue_render__$1N = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { staticClass: "ui-table-body" }, [
                _c("table", [
                  _c(
                    "tbody",
                    _vm._l(_vm.data, function(row, index) {
                      return _c(
                        "tr",
                        { key: index, class: _vm.setRowClassName(row, index) },
                        _vm._l(_vm.columns, function(col) {
                          return _c(
                            "td",
                            { key: col.key, class: _vm.setColClassName(row, col) },
                            [
                              _c("div", { staticClass: "ui-table-cell" }, [
                                _vm._v(_vm._s(row[col.key]))
                              ])
                            ]
                          )
                        }),
                        0
                      )
                    }),
                    0
                  )
                ])
              ])
            };
            var __vue_staticRenderFns__$1N = [];
            __vue_render__$1N._withStripped = true;

              /* style */
              var __vue_inject_styles__$1N = undefined;
              /* scoped */
              var __vue_scope_id__$1N = undefined;
              /* module identifier */
              var __vue_module_identifier__$1N = undefined;
              /* functional template */
              var __vue_is_functional_template__$1N = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var UiTableBody = normalizeComponent_1(
                { render: __vue_render__$1N, staticRenderFns: __vue_staticRenderFns__$1N },
                __vue_inject_styles__$1N,
                __vue_script__$1A,
                __vue_scope_id__$1N,
                __vue_is_functional_template__$1N,
                __vue_module_identifier__$1N,
                undefined,
                undefined
              );

            //
            var script$1B = {
              components: { UiTableHeader: UiTableHeader, UiTableBody: UiTableBody },
              props: {
                data: {
                  type: Array,
                  default: function () { return []; }
                },
                columns: {
                  type: Array,
                  default: function () { return []; }
                },
                stripe: Boolean,
                border: Boolean,
                showHeader: {
                  type: Boolean,
                  default: true
                },
                width: {
                  type: [Number, String],
                  default: 'auto'
                },
                height: [Number, String],
                loading: Boolean,
                disabledHover: Boolean,
                highlightRow: Boolean,
                rowClassName: Function,
                size: {
                  validator: function validator(value) {
                    return ['large', 'small', 'default'].indexOf(value) !== -1
                  }
                },
                noDataText: {
                  type: String,
                  default: '暂无数据'
                },
                noFilteredDataText: {
                  type: String,
                  default: '暂无筛选结果'
                }
              },
              computed: {
                bodyStyle: function bodyStyle() {
                  var height = this.height && (isNaN(this.height) ? this.height : ((this.height) + "px"));
                  return height ? { overflowY: 'scroll', height: height } : {}
                }
              }
            };

            var css$1h = ".ui-table-wrapper{max-width:100%;border:1px solid #e9eaec}.ui-table-wrapper table{width:100%;table-layout:fixed;border-collapse:collapse}.ui-table-wrapper td,.ui-table-wrapper th{min-width:0;text-align:left;text-overflow:ellipsis;vertical-align:middle;border-bottom:1px solid #e9eaec}.ui-table-wrapper th{height:40px;white-space:nowrap;overflow:hidden;background-color:#f8f8f9}.ui-table-wrapper td{height:48px;-webkit-transition:background-color .2s ease-in-out;transition:background-color .2s ease-in-out}.ui-table-wrapper.stripe tbody tr:nth-child(2n){background-color:#f8f8f9}.ui-table-wrapper.border td+td,.ui-table-wrapper.border th+th{border-left:1px solid #e9eaec}.ui-table-wrapper tbody tr:last-child td{border-bottom:none}.ui-table-wrapper tbody tr:hover:not(.hasCustomClsName) td:not(.hasCustomClsName){background-color:#ebf4fe}.ui-table{margin-right:-1px}.ui-table-body,.ui-table-cell{overflow:hidden}.ui-table-cell{padding:0 18px;text-overflow:ellipsis;white-space:nowrap}.ui-table-header{overflow:hidden}";
            styleInject(css$1h);

            /* script */
            var __vue_script__$1B = script$1B;
            /* template */
            var __vue_render__$1O = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                {
                  staticClass: "ui-table-wrapper",
                  class: [{ stripe: _vm.stripe, border: _vm.border }]
                },
                [
                  _c(
                    "div",
                    { staticClass: "ui-table" },
                    [
                      _c("UiTableHeader", { attrs: { columns: _vm.columns } }),
                      _vm._v(" "),
                      _c("UiTableBody", {
                        style: _vm.bodyStyle,
                        attrs: {
                          data: _vm.data,
                          columns: _vm.columns,
                          rowClassName: _vm.rowClassName
                        }
                      })
                    ],
                    1
                  )
                ]
              )
            };
            var __vue_staticRenderFns__$1O = [];
            __vue_render__$1O._withStripped = true;

              /* style */
              var __vue_inject_styles__$1O = undefined;
              /* scoped */
              var __vue_scope_id__$1O = undefined;
              /* module identifier */
              var __vue_module_identifier__$1O = undefined;
              /* functional template */
              var __vue_is_functional_template__$1O = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Table$1 = normalizeComponent_1(
                { render: __vue_render__$1O, staticRenderFns: __vue_staticRenderFns__$1O },
                __vue_inject_styles__$1O,
                __vue_script__$1B,
                __vue_scope_id__$1O,
                __vue_is_functional_template__$1O,
                __vue_module_identifier__$1O,
                undefined,
                undefined
              );

            //
            var script$1C = {
              components: { UiTooltip: Tooltip$1, UiInputNumber: InputNumber$1 },
              data: function data() {
                return {
                  inputValue: this.value,
                  rightBtnDown: false,
                  leftBtnDown: false
                }
              },
              props: {
                value: {
                  type: [Number, Array],
                  default: 0
                },
                min: {
                  type: Number,
                  default: 0
                },
                max: {
                  type: Number,
                  default: 100
                },
                step: {
                  type: Number,
                  default: 1
                },
                disabled: Boolean,
                range: Boolean,
                showInput: Boolean,
                showStops: Boolean,
                showTip: {
                  default: 'hover',
                  validator: function validator(value) {
                    return ['hover', 'always', 'never'].indexOf(value) !== -1
                  }
                },
                tipFormat: Function,
                inputSize: {
                  validator: function validator(value) {
                    return ['large', 'small', 'default'].indexOf(value) !== -1
                  }
                }
              },
              computed: {
                isTipAlways: function isTipAlways() {
                  return this.showTip === 'always'
                },
                hasTip: function hasTip() {
                  return this.showTip !== 'never'
                },
                val: function val() {
                  return this.max - this.min
                },
                rightValue: function rightValue() {
                  var value = this.range ? this.inputValue[1] : this.inputValue;
                  return this.tipFormat ? this.tipFormat(value) : value
                },
                barStyle: function barStyle() {
                  var ref = this;
                  var min = ref.min;
                  var max = ref.max;
                  var inputValue = ref.inputValue;
                  var range = ref.range;
                  var val = ref.val;
                  if (range) {
                    var a = inputValue[0];
                    var b = inputValue[1];
                    return { left: ((a / val * 100) + "%"), width: (((b - a) / val * 100) + "%") }
                  } else {
                    return { width: ((inputValue / val * 100) + "%") }
                  }
                },
                stopValues: function stopValues() {
                  if (!this.showStops) { return [] }
                  var ref = this;
                  var step = ref.step;
                  var min = ref.min;
                  var max = ref.max;
                  var val = ref.val;
                  var points = [];
                  var start = Math.floor(step / val * 100), p = start;
                  while (p < 100) {
                    points.push(p);
                    p += start;
                  }
                  return points
                },
                hasInputNumber: function hasInputNumber() {
                  return this.showInput && !this.range
                }
              },
              watch: {
                value: function value(newVal) {
                  this.inputValue = newVal;
                },
                inputValue: function inputValue(newVal) {
                  var this$1 = this;

                  this.$emit('input', newVal);
                  this.$emit('on-change', newVal);
                  this.$nextTick(function () {
                    if (this$1.leftBtnDown) {
                      this$1.$refs.LeftTooltip && this$1.$refs.LeftTooltip.setPosition();
                    } else if (this$1.rightBtnDown) {
                      this$1.$refs.RightTooltip && this$1.$refs.RightTooltip.setPosition();
                    }
                  });
                }
              },
              methods: {
                getMovingValue: function getMovingValue(event) {
                  var ref = getOffset(this.$refs.Bar);
                  var left = ref.left;
                  var tarVal = (event.clientX - left ) / this.$refs.Bar.offsetWidth * this.val;
                  var val = Math.floor(tarVal / this.step) * this.step;
                  return Math.max(Math.min(val, this.max), this.min)
                },
                update: function update(event) {
                  if (this.disabled) { return }
                  var ref = getOffset(this.$refs.Bar);
                  var left = ref.left;
                  var tarVal = (event.clientX - left ) / this.$refs.Bar.offsetWidth * this.val;
                  var moveToValue = this.getMovingValue(event);
                  if (this.range) {
                    var ref$1 = this.inputValue;
                    var a = ref$1[0];
                    var b = ref$1[1];
                    if (this.leftBtnDown) {
                      this.inputValue = moveToValue > b ? [moveToValue, moveToValue] : [moveToValue, b];
                    } else if (this.rightBtnDown) {
                      this.inputValue = moveToValue > a ? [a, moveToValue] : [a, a];
                    } else {
                      this.inputValue = moveToValue > a ? [a, moveToValue] : [moveToValue, b];
                    }
                  } else {
                    this.inputValue = moveToValue;
                  }
                },
                handleRightMousedown: function handleRightMousedown() {
                  if (this.disabled) { return }
                  this.rightBtnDown = true;
                  this.addWinEvents();
                },
                handleLeftMousedown: function handleLeftMousedown(event) {
                  if (this.disabled) { return }
                  this.leftBtnDown = true;
                  this.addWinEvents();
                },
                addWinEvents: function addWinEvents() {
                  window.addEventListener('mousemove', this.handleMousemove);
                  window.addEventListener('mouseup', this.handleMouseup);
                },
                removeWinEvents: function removeWinEvents() {
                  window.removeEventListener('mousemove', this.handleMousemove);
                  window.removeEventListener('mouseup', this.handleMouseup);
                },
                handleMousemove: function handleMousemove(event) {
                  if (this.rightBtnDown || this.leftBtnDown) { this.update(event); }
                },
                handleMouseup: function handleMouseup() {
                  this.removeWinEvents();
                  this.rightBtnDown = this.leftBtnDown = false;
                }
              }
            };

            var css$1i = ".ui-slider{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ui-slider.disabled .ui-slider-bar,.ui-slider.disabled .ui-slider-wrap{cursor:not-allowed;background-color:#ccc}.ui-slider.disabled .ui-slider-btn{cursor:not-allowed;border-color:#ccc}.ui-slider-wrap{-webkit-box-flex:1;-ms-flex:1;flex:1;margin:16px 0;height:4px;background-color:#e9eaec;position:relative;border-radius:3px;cursor:pointer}.ui-slider-breakpoint{position:absolute;top:0;width:4px;height:4px;border-radius:50%;background-color:#ccc}.ui-slider-bar{position:absolute;left:0;width:27%;height:100%;border-radius:3px;background-color:#2d8cf0}.ui-slider-btn{position:absolute;top:50%;width:12px;height:12px;margin-top:-6px;border:2px solid #2d8cf0;border-radius:50%;background-color:#fff;-webkit-transition:all .2s;transition:all .2s}.ui-slider-btn.left{left:-6px}.ui-slider-btn.right{right:-6px}.ui-slider-btn.down,.ui-slider-btn:hover{cursor:-webkit-grab;cursor:grab;-webkit-transform:scale(1.5);transform:scale(1.5)}.ui-slider-input-number{margin-left:20px}";
            styleInject(css$1i);

            /* script */
            var __vue_script__$1C = script$1C;
            /* template */
            var __vue_render__$1P = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "ui-slider", class: { disabled: _vm.disabled } },
                [
                  _c(
                    "div",
                    {
                      ref: "Bar",
                      staticClass: "ui-slider-wrap",
                      on: { click: _vm.update }
                    },
                    [
                      _vm._l(_vm.stopValues, function(item) {
                        return _c("span", {
                          key: item,
                          staticClass: "ui-slider-breakpoint",
                          style: { left: item + "%" }
                        })
                      }),
                      _vm._v(" "),
                      _c(
                        "div",
                        { staticClass: "ui-slider-bar", style: _vm.barStyle },
                        [
                          _vm.range
                            ? [
                                _vm.hasTip
                                  ? _c(
                                      "ui-tooltip",
                                      {
                                        ref: "LeftTooltip",
                                        attrs: {
                                          placement: "top",
                                          always: _vm.leftBtnDown || _vm.isTipAlways
                                        }
                                      },
                                      [
                                        _c(
                                          "div",
                                          { attrs: { slot: "content" }, slot: "content" },
                                          [_vm._v(_vm._s(_vm.inputValue[0]))]
                                        ),
                                        _vm._v(" "),
                                        _c("span", {
                                          staticClass: "ui-slider-btn left",
                                          class: { down: _vm.leftBtnDown },
                                          on: {
                                            mousedown: function($event) {
                                              $event.preventDefault();
                                              return _vm.handleLeftMousedown($event)
                                            }
                                          }
                                        })
                                      ]
                                    )
                                  : _c("span", {
                                      staticClass: "ui-slider-btn left",
                                      class: { down: _vm.leftBtnDown },
                                      on: {
                                        mousedown: function($event) {
                                          $event.preventDefault();
                                          return _vm.handleLeftMousedown($event)
                                        }
                                      }
                                    })
                              ]
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.hasTip && _vm.rightValue !== null
                            ? _c(
                                "ui-tooltip",
                                {
                                  ref: "RightTooltip",
                                  attrs: {
                                    placement: "top",
                                    always: _vm.rightBtnDown || _vm.isTipAlways
                                  }
                                },
                                [
                                  _c(
                                    "div",
                                    { attrs: { slot: "content" }, slot: "content" },
                                    [_vm._v(_vm._s(_vm.rightValue))]
                                  ),
                                  _vm._v(" "),
                                  _c("span", {
                                    staticClass: "ui-slider-btn right",
                                    class: { down: _vm.rightBtnDown },
                                    on: {
                                      mousedown: function($event) {
                                        $event.preventDefault();
                                        return _vm.handleRightMousedown($event)
                                      }
                                    }
                                  })
                                ]
                              )
                            : _c("span", {
                                staticClass: "ui-slider-btn right",
                                class: { down: _vm.rightBtnDown },
                                on: {
                                  mousedown: function($event) {
                                    $event.preventDefault();
                                    return _vm.handleRightMousedown($event)
                                  }
                                }
                              })
                        ],
                        2
                      )
                    ],
                    2
                  ),
                  _vm._v(" "),
                  _vm.hasInputNumber
                    ? _c("UiInputNumber", {
                        staticClass: "ui-slider-input-number",
                        attrs: {
                          min: _vm.min,
                          max: _vm.max,
                          step: _vm.step,
                          size: _vm.inputSize
                        },
                        model: {
                          value: _vm.inputValue,
                          callback: function($$v) {
                            _vm.inputValue = $$v;
                          },
                          expression: "inputValue"
                        }
                      })
                    : _vm._e()
                ],
                1
              )
            };
            var __vue_staticRenderFns__$1P = [];
            __vue_render__$1P._withStripped = true;

              /* style */
              var __vue_inject_styles__$1P = undefined;
              /* scoped */
              var __vue_scope_id__$1P = undefined;
              /* module identifier */
              var __vue_module_identifier__$1P = undefined;
              /* functional template */
              var __vue_is_functional_template__$1P = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Slider$1 = normalizeComponent_1(
                { render: __vue_render__$1P, staticRenderFns: __vue_staticRenderFns__$1P },
                __vue_inject_styles__$1P,
                __vue_script__$1C,
                __vue_scope_id__$1P,
                __vue_is_functional_template__$1P,
                __vue_module_identifier__$1P,
                undefined,
                undefined
              );

            //
            //
            //

            var script$1D = {
              name: 'ui-form',
              props: {
                model: Object,
                rules: Object,
                inline: Boolean,
                labelPosition: {
                  default: 'right',
                  validator: function validator(value) {
                    return ['left', 'right', 'top'].indexOf(value) !== -1
                  }
                },
                labelWidth: [Number, String],
                showMessage: {
                  type: Boolean,
                  default: true
                },
                autocomplete: {
                  default: 'off',
                  validator: function validator(value) {
                    return ['off', 'on'].indexOf(value) !== -1
                  }
                }
              },
              methods: {
                validate: function validate(callback) {

                },
                validateField: function validateField(prop, callback) {

                },
                resetFields: function resetFields() {

                }
              }
            };

            var css$1j = ".ui-form.inline .ui-form-item{display:inline-block;margin-right:10px}.ui-form.left .ui-form-item-label{text-align:left}.ui-form.top .ui-form-item-label{float:none;display:inline-block;padding:0 0 10px}.ui-form-item{margin-bottom:24px;vertical-align:top}.ui-form-item-label{text-align:right;vertical-align:middle;float:left;font-size:12px;color:#495060;line-height:1;padding:10px 12px 10px 0}.ui-form-item-content{position:relative;line-height:32px;font-size:12px}";
            styleInject(css$1j);

            /* script */
            var __vue_script__$1D = script$1D;
            /* template */
            var __vue_render__$1Q = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "form",
                {
                  staticClass: "ui-form",
                  class: [_vm.labelPosition, { inline: _vm.inline }],
                  attrs: { autocomplete: _vm.autocomplete }
                },
                [_vm._t("default")],
                2
              )
            };
            var __vue_staticRenderFns__$1Q = [];
            __vue_render__$1Q._withStripped = true;

              /* style */
              var __vue_inject_styles__$1Q = undefined;
              /* scoped */
              var __vue_scope_id__$1Q = undefined;
              /* module identifier */
              var __vue_module_identifier__$1Q = undefined;
              /* functional template */
              var __vue_is_functional_template__$1Q = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Form$1 = normalizeComponent_1(
                { render: __vue_render__$1Q, staticRenderFns: __vue_staticRenderFns__$1Q },
                __vue_inject_styles__$1Q,
                __vue_script__$1D,
                __vue_scope_id__$1Q,
                __vue_is_functional_template__$1Q,
                __vue_module_identifier__$1Q,
                undefined,
                undefined
              );

            //
            var script$1E = {
              data: function data() {
                return {
                  parent: null
                }
              },
              props: {
                prop: String,
                label: String,
                labelWidth: [Number, String],
                labelFor: String,
                required: Boolean,
                rules: [Object, Array],
                error: String,
                showMessage: {
                  type: Boolean,
                  default: true
                }
              },
              computed: {
                lw: function lw() {
                  var labelWidth = this.labelWidth || (this.parent && this.parent.labelWidth);
                  if (labelWidth !== undefined) {
                    return isNaN(labelWidth) ? labelWidth : (labelWidth + "px")
                  }
                },
                labelStyle: function labelStyle() {
                  return this.lw && { width: this.lw }
                },
                contentStyle: function contentStyle() {
                  return this.lw && { marginLeft: this.lw }
                }
              },
              mounted: function mounted() {
                this.parent = findParentByName(this, 'ui-form');
              }
            };

            /* script */
            var __vue_script__$1E = script$1E;

            /* template */
            var __vue_render__$1R = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { staticClass: "ui-form-item" }, [
                _c(
                  "label",
                  {
                    staticClass: "ui-form-item-label",
                    style: _vm.labelStyle,
                    attrs: { for: _vm.labelFor }
                  },
                  [_vm._t("label", [_vm._v(_vm._s(_vm.label))])],
                  2
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "ui-form-item-content", style: _vm.contentStyle },
                  [
                    _vm._t("default"),
                    _vm._v(" "),
                    _c("transition", { attrs: { name: "ui-fade" } }, [
                      _c("div", { staticClass: "ui-form-item-error-tip" })
                    ])
                  ],
                  2
                )
              ])
            };
            var __vue_staticRenderFns__$1R = [];
            __vue_render__$1R._withStripped = true;

              /* style */
              var __vue_inject_styles__$1R = undefined;
              /* scoped */
              var __vue_scope_id__$1R = undefined;
              /* module identifier */
              var __vue_module_identifier__$1R = undefined;
              /* functional template */
              var __vue_is_functional_template__$1R = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var FormItem = normalizeComponent_1(
                { render: __vue_render__$1R, staticRenderFns: __vue_staticRenderFns__$1R },
                __vue_inject_styles__$1R,
                __vue_script__$1E,
                __vue_scope_id__$1R,
                __vue_is_functional_template__$1R,
                __vue_module_identifier__$1R,
                undefined,
                undefined
              );

            //
            var script$1F = {
              name: 'ui-autocomplete',
              components: { UiInput: Input$1, UiDrop: UiDrop },
              data: function data() {
                return {
                  visible: false,
                  inputValue: this.value,
                  children: []
                }
              },
              props: {
                value: [String, Number],
                data: {
                  type: Array,
                  default: function () { return []; }
                },
                clearable: Boolean,
                disabled: Boolean,
                placeholder: String,
                size: {
                  validator: function validator(value) {
                    return ['large', 'small', 'default'].indexOf(value) !== -1
                  }
                },
                icon: String,
                filterMethod: {
                  type: [Function, Boolean],
                  default: false
                },
                placement: {
                  default: 'bottom',
                  validator: function validator(value) {
                    return ['bottom', 'top'].indexOf(value) !== -1
                  }
                },
                elementId: String
              },
              computed: {
                filteredData: function filteredData() {
                  var this$1 = this;

                  return this.inputValue ? this.data.filter(function (_) { return typeof this$1.filterMethod === 'function' ?
                      this$1.filterMethod(this$1.inputValue, _) :
                      _.toString().indexOf(this$1.inputValue) !== -1; }
                  ) : this.data
                },
                dropShow: function dropShow() {
                  return !!this.filteredData.length && this.visible
                },
                hasSlot: function hasSlot() {
                  return this.$slots.default !== undefined
                }
              },
              watch: {
                value: function value(newVal) {
                  this.inputValue = newVal;
                },
                inputValue: function inputValue(newVal) {
                  this.$emit('input', newVal);
                  this.$emit('on-search', newVal);
                  this.$emit('on-change', newVal);
                }
              },
              methods: {
                handleClick: function handleClick(event) {
                  this.visible = !this.visible;
                },
                handleOptionClick: function handleOptionClick(item) {
                  var this$1 = this;

                  this.inputValue = item;
                  this.$emit('on-select', item);
                  this.$nextTick(function () { return this$1.visible = false; });
                },
                handleWinClick: function handleWinClick(event) {
                  var target = event.target;
                  if (
                    target && 
                    (isSelfOrParent(this.$el, target) || 
                    isSelfOrParent(this.$refs.UiDrop.$el, target))
                  ) { return }
                  this.visible = false;
                },
                handleFocus: function handleFocus(event) {
                  this.$emit('on-focus', event);
                },
                handleBlur: function handleBlur(event) {
                  this.$emit('on-blur', event);
                }
              }
            };

            var css$1k = ".ui-autocomplete-select{list-style:none}.ui-autocomplete-select-item{padding:7px 16px;cursor:pointer;-webkit-transition:background-color .2s ease-in-out;transition:background-color .2s ease-in-out}.ui-autocomplete-select-item.active,.ui-autocomplete-select-item:hover{background-color:#f3f3f3}";
            styleInject(css$1k);

            /* script */
            var __vue_script__$1F = script$1F;
            /* template */
            var __vue_render__$1S = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                {
                  directives: [
                    {
                      name: "winclick",
                      rawName: "v-winclick",
                      value: _vm.handleWinClick,
                      expression: "handleWinClick"
                    }
                  ],
                  staticClass: "ui-autocomplete"
                },
                [
                  _c("UiInput", {
                    attrs: {
                      placeholder: _vm.placeholder,
                      clearable: _vm.clearable,
                      size: _vm.size,
                      disabled: _vm.disabled,
                      elementId: _vm.elementId,
                      icon: _vm.icon
                    },
                    on: { "on-focus": _vm.handleFocus, "on-blur": _vm.handleBlur },
                    nativeOn: {
                      click: function($event) {
                        return _vm.handleClick($event)
                      }
                    },
                    model: {
                      value: _vm.inputValue,
                      callback: function($$v) {
                        _vm.inputValue = $$v;
                      },
                      expression: "inputValue"
                    }
                  }),
                  _vm._v(" "),
                  _c(
                    "ui-drop",
                    {
                      ref: "UiDrop",
                      attrs: { visible: _vm.dropShow, parentName: _vm.$options.name }
                    },
                    [
                      _c(
                        "ul",
                        { staticClass: "ui-autocomplete-select" },
                        [
                          _vm._t("default"),
                          _vm._v(" "),
                          !_vm.hasSlot
                            ? _vm._l(_vm.filteredData, function(item, index) {
                                return _c(
                                  "li",
                                  {
                                    key: index,
                                    staticClass: "ui-autocomplete-select-item",
                                    class: { active: item === _vm.inputValue },
                                    on: {
                                      click: function($event) {
                                        return _vm.handleOptionClick(item)
                                      }
                                    }
                                  },
                                  [_vm._v("\n          " + _vm._s(item) + "\n        ")]
                                )
                              })
                            : _vm._e()
                        ],
                        2
                      )
                    ]
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$1S = [];
            __vue_render__$1S._withStripped = true;

              /* style */
              var __vue_inject_styles__$1S = undefined;
              /* scoped */
              var __vue_scope_id__$1S = undefined;
              /* module identifier */
              var __vue_module_identifier__$1S = undefined;
              /* functional template */
              var __vue_is_functional_template__$1S = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var AutoComplete$1 = normalizeComponent_1(
                { render: __vue_render__$1S, staticRenderFns: __vue_staticRenderFns__$1S },
                __vue_inject_styles__$1S,
                __vue_script__$1F,
                __vue_scope_id__$1S,
                __vue_is_functional_template__$1S,
                __vue_module_identifier__$1S,
                undefined,
                undefined
              );

            var propsMixin = {
              value: Date,
              placement: {
                default: 'bottom-start',
                validator: function validator(value) {
                  return [
                    'top', 'top-start', 'top-end',
                    'right', 'right-start', 'right-end',
                    'bottom', 'bottom-start', 'bottom-end',
                    'left', 'left-start', 'left-end'
                  ]
                }
              },
              placeholder: String,
              confirm: Boolean,
              open: {
                type: Boolean,
                default: null
              },
              size: {
                validator: function validator(value) {
                  return ['large', 'small', 'default'].indexOf(value) !== -1
                }
              },
              disabled: Boolean,
              clearable: {
                type: Boolean,
                default: true
              },
              readonly: Boolean,
              editable: {
                type: Boolean,
                default: true
              },
              elementId: String
            };

            //
            var script$1G = {
              data: function data() {
                return {
                  weeks: ['日', '一', '二', '三', '四', '五', '六']
                }
              },
              props: {
                date: {
                  type: Date,
                  default: function () { return new Date(); }
                }
              },
              computed: {
                dayCount: function dayCount() {
                  return new Date(this.date.getFullYear(), this.date.getMonth() + 1, 0).getDate()
                },
                firstDayOfWeek: function firstDayOfWeek() {
                  var date = new Date(this.date);
                  date.setDate(1);
                  return date.getDay()
                }
              }
            };

            var css$1l = ".ui-datepicker-dateview{padding:10px}.ui-datepicker-dateview-cell{display:inline-block;width:28px;height:28px;line-height:24px;text-align:center;padding:2px;cursor:pointer}.ui-datepicker-dateview-cell span{display:inline-block;width:100%;height:100%;border-radius:3px;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.ui-datepicker-dateview-cell.disabled{color:#bbbec4}.ui-datepicker-dateview-cell:not(.disabled):hover span{background-color:#e7f2fd}";
            styleInject(css$1l);

            /* script */
            var __vue_script__$1G = script$1G;
            /* template */
            var __vue_render__$1T = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                { staticClass: "ui-datepicker-dateview" },
                [
                  _vm._l(_vm.weeks, function(cell) {
                    return _c(
                      "span",
                      { key: cell, staticClass: "ui-datepicker-dateview-cell disabled" },
                      [_c("span", [_vm._v(_vm._s(cell))])]
                    )
                  }),
                  _vm._v(" "),
                  _vm._l(_vm.dayCount, function(cell) {
                    return _c(
                      "span",
                      { key: cell, staticClass: "ui-datepicker-dateview-cell" },
                      [_c("span", [_vm._v(_vm._s(cell))])]
                    )
                  })
                ],
                2
              )
            };
            var __vue_staticRenderFns__$1T = [];
            __vue_render__$1T._withStripped = true;

              /* style */
              var __vue_inject_styles__$1T = undefined;
              /* scoped */
              var __vue_scope_id__$1T = undefined;
              /* module identifier */
              var __vue_module_identifier__$1T = undefined;
              /* functional template */
              var __vue_is_functional_template__$1T = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var UiDateView = normalizeComponent_1(
                { render: __vue_render__$1T, staticRenderFns: __vue_staticRenderFns__$1T },
                __vue_inject_styles__$1T,
                __vue_script__$1G,
                __vue_scope_id__$1T,
                __vue_is_functional_template__$1T,
                __vue_module_identifier__$1T,
                undefined,
                undefined
              );

            //
            var script$1H = {
              components: { UiIcon: UiIcon }
            };

            var css$1m = ".ui-datepicker-header{height:32px;padding:0 10px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;border-bottom:1px solid #e9eaec}.ui-datepicker-header-icon{width:20px;height:24px;line-height:24px;font-size:14px;cursor:pointer}.ui-datepicker-header-labels{-webkit-box-flex:1;-ms-flex:1;flex:1}.ui-datepicker-header-label{cursor:pointer}.ui-datepicker-header-label+.ui-datepicker-header-label{margin-left:4px}.ui-datepicker-header-icon:hover,.ui-datepicker-header-label:hover{color:#2d8cf0}";
            styleInject(css$1m);

            /* script */
            var __vue_script__$1H = script$1H;
            /* template */
            var __vue_render__$1U = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div", { staticClass: "ui-datepicker-header" }, [
                _c(
                  "span",
                  { staticClass: "ui-datepicker-header-icon" },
                  [
                    _c("UiIcon", { attrs: { type: "ios-arrow-left" } }),
                    _vm._v(" "),
                    _c("UiIcon", { attrs: { type: "ios-arrow-left" } })
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "span",
                  { staticClass: "ui-datepicker-header-icon" },
                  [_c("UiIcon", { attrs: { type: "ios-arrow-left" } })],
                  1
                ),
                _vm._v(" "),
                _vm._m(0),
                _vm._v(" "),
                _c(
                  "span",
                  { staticClass: "ui-datepicker-header-icon" },
                  [_c("UiIcon", { attrs: { type: "ios-arrow-right" } })],
                  1
                ),
                _vm._v(" "),
                _c(
                  "span",
                  { staticClass: "ui-datepicker-header-icon" },
                  [
                    _c("UiIcon", { attrs: { type: "ios-arrow-right" } }),
                    _vm._v(" "),
                    _c("UiIcon", { attrs: { type: "ios-arrow-right" } })
                  ],
                  1
                )
              ])
            };
            var __vue_staticRenderFns__$1U = [
              function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c("span", { staticClass: "ui-datepicker-header-labels" }, [
                  _c("span", { staticClass: "ui-datepicker-header-label" }, [
                    _vm._v("2019年")
                  ]),
                  _vm._v(" "),
                  _c("span", { staticClass: "ui-datepicker-header-label" }, [_vm._v("4月")])
                ])
              }
            ];
            __vue_render__$1U._withStripped = true;

              /* style */
              var __vue_inject_styles__$1U = undefined;
              /* scoped */
              var __vue_scope_id__$1U = undefined;
              /* module identifier */
              var __vue_module_identifier__$1U = undefined;
              /* functional template */
              var __vue_is_functional_template__$1U = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var UiHeader = normalizeComponent_1(
                { render: __vue_render__$1U, staticRenderFns: __vue_staticRenderFns__$1U },
                __vue_inject_styles__$1U,
                __vue_script__$1H,
                __vue_scope_id__$1U,
                __vue_is_functional_template__$1U,
                __vue_module_identifier__$1U,
                undefined,
                undefined
              );

            //
            var script$1I = {
              name: 'ui-datepicker',
              mixins: [propsMixin],
              components: { UiInput: Input$1, UiDrop: UiDrop, UiDateView: UiDateView, UiHeader: UiHeader },
              data: function data() {
                return {
                  dropVisible: false
                }
              },
              props: {
                type: {
                  default: 'date',
                  validator: function validator(value) {
                    return ['date', 'daterange', 'datetime', 'datetimerange', 'year', 'month'].indexOf(value) !== -1
                  }
                },
                format: String,
                options: Object,
                splitPanels: Boolean,
                multiple: Boolean,
                showWeekNumbers: Boolean,
                startDate: Date,
                timePickerOptions: {
                  type: Object,
                  default: function () {}
                }
              },
              methods: {
                handleClick: function handleClick() {
                  this.dropVisible = true;
                },
                handleWinClick: function handleWinClick(event) {
                  if (
                    isSelfOrParent(this.$el, event.target) || 
                    isSelfOrParent(this.$refs.UiDrop.$el, event.target)
                  ) { return }
                  this.dropVisible = false;
                }
              }
            };

            var css$1n = ".ui-datepicker-dropdown.ui-select-dropdown{padding:0;width:216px;max-height:none}";
            styleInject(css$1n);

            /* script */
            var __vue_script__$1I = script$1I;
            /* template */
            var __vue_render__$1V = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "div",
                {
                  directives: [
                    {
                      name: "winclick",
                      rawName: "v-winclick",
                      value: _vm.handleWinClick,
                      expression: "handleWinClick"
                    }
                  ],
                  staticClass: "ui-datepicker",
                  on: { click: _vm.handleClick }
                },
                [
                  _c("UiInput", { attrs: { icon: "ios-calendar-outline" } }),
                  _vm._v(" "),
                  _c(
                    "ui-drop",
                    {
                      ref: "UiDrop",
                      staticClass: "ui-datepicker-dropdown",
                      attrs: { visible: _vm.dropVisible, parentName: _vm.$options.name }
                    },
                    [_c("UiHeader"), _vm._v(" "), _c("UiDateView")],
                    1
                  )
                ],
                1
              )
            };
            var __vue_staticRenderFns__$1V = [];
            __vue_render__$1V._withStripped = true;

              /* style */
              var __vue_inject_styles__$1V = undefined;
              /* scoped */
              var __vue_scope_id__$1V = undefined;
              /* module identifier */
              var __vue_module_identifier__$1V = undefined;
              /* functional template */
              var __vue_is_functional_template__$1V = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var DatePicker$1 = normalizeComponent_1(
                { render: __vue_render__$1V, staticRenderFns: __vue_staticRenderFns__$1V },
                __vue_inject_styles__$1V,
                __vue_script__$1I,
                __vue_scope_id__$1V,
                __vue_is_functional_template__$1V,
                __vue_module_identifier__$1V,
                undefined,
                undefined
              );

            //
            var script$1J = {
              mixins: [propsMixin],
              props: {
                type: {
                  default: 'time',
                  validator: function validator(value) {
                    return ['', ''].indexOf(value) !== -1
                  }
                },
                format: {
                  type: String,
                  default: 'HH:mm:ss'
                },
                steps: {
                  type: Array,
                  default: function () { return []; }
                }
              }
            };

            var css$1o = "";
            styleInject(css$1o);

            /* script */
            var __vue_script__$1J = script$1J;
            /* template */
            var __vue_render__$1W = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("div")
            };
            var __vue_staticRenderFns__$1W = [];
            __vue_render__$1W._withStripped = true;

              /* style */
              var __vue_inject_styles__$1W = undefined;
              /* scoped */
              var __vue_scope_id__$1W = undefined;
              /* module identifier */
              var __vue_module_identifier__$1W = undefined;
              /* functional template */
              var __vue_is_functional_template__$1W = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var TimePicker$1 = normalizeComponent_1(
                { render: __vue_render__$1W, staticRenderFns: __vue_staticRenderFns__$1W },
                __vue_inject_styles__$1W,
                __vue_script__$1J,
                __vue_scope_id__$1W,
                __vue_is_functional_template__$1W,
                __vue_module_identifier__$1W,
                undefined,
                undefined
              );

            //
            var script$1K = {
              components: { UiIcon: UiIcon, UiCloseIconButton: CloseIconButton },
              props: {
                content: String,
                duration: Number,
                onClose: Function,
                closable: Boolean,
                type: {
                  default: 'info',
                  validator: function validator(value) {
                    return ['info', 'success', 'warning', 'error', 'loading'].indexOf(value) !== -1
                  }
                }
              },
              computed: {
                iconType: function iconType() {
                  return iconTypes[this.type]
                }
              },
              methods: {
                close: function close(event) {
                  this.$emit('destroy');
                  clearTimeout(this.tid);
                  isFunc(this.onClose) && this.onClose();
                },
                timer: function timer() {
                  var this$1 = this;

                  if (this.duration === 0) { return }
                  this.tid = setTimeout(function () { return this$1.close(); }, this.duration * 1000);
                }
              },
              mounted: function mounted() {
                this.timer();
              }
            };

            var css$1p = ".ui-message-wrapper{pointer-events:none;position:fixed;right:0;left:0}.ui-message{text-align:center;pointer-events:none;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out;will-change:transform,opacity;padding:8px 0}.ui-message-outer{display:inline-block;background-color:#fff;border-radius:4px;-webkit-box-shadow:0 1px 6px rgba(0,0,0,.2);box-shadow:0 1px 6px rgba(0,0,0,.2);pointer-events:all}.ui-message-inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:8px 16px}.ui-message-icon{margin-right:12px;font-size:14px}.ui-message-icon.info{color:#2db7f5}.ui-message-icon.success{color:#19be6b}.ui-message-icon.warning{color:#f90}.ui-message-icon.error{color:#ed3f14}.ui-message-icon.loading{color:#2d8cf0;-webkit-animation:ani-load-loop 1s linear infinite;animation:ani-load-loop 1s linear infinite}.ui-message-content{font-size:12px}.ui-message-content.closable{padding-right:32px}";
            styleInject(css$1p);

            /* script */
            var __vue_script__$1K = script$1K;
            /* template */
            var __vue_render__$1X = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("transition", { attrs: { name: "message", translate: "" } }, [
                _c("div", { staticClass: "ui-message" }, [
                  _c("div", { staticClass: "ui-message-outer" }, [
                    _c(
                      "div",
                      { staticClass: "ui-message-inner" },
                      [
                        _c("UiIcon", {
                          staticClass: "ui-message-icon",
                          class: _vm.type,
                          attrs: { type: _vm.iconType }
                        }),
                        _vm._v(" "),
                        _c("p", {
                          staticClass: "ui-message-content",
                          class: { closable: _vm.closable },
                          domProps: { innerHTML: _vm._s(_vm.content) }
                        }),
                        _vm._v(" "),
                        _vm.closable
                          ? _c("UiCloseIconButton", { on: { click: _vm.close } })
                          : _vm._e()
                      ],
                      1
                    )
                  ])
                ])
              ])
            };
            var __vue_staticRenderFns__$1X = [];
            __vue_render__$1X._withStripped = true;

              /* style */
              var __vue_inject_styles__$1X = undefined;
              /* scoped */
              var __vue_scope_id__$1X = undefined;
              /* module identifier */
              var __vue_module_identifier__$1X = undefined;
              /* functional template */
              var __vue_is_functional_template__$1X = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Message$1 = normalizeComponent_1(
                { render: __vue_render__$1X, staticRenderFns: __vue_staticRenderFns__$1X },
                __vue_inject_styles__$1X,
                __vue_script__$1K,
                __vue_scope_id__$1X,
                __vue_is_functional_template__$1X,
                __vue_module_identifier__$1X,
                undefined,
                undefined
              );

            //
            var script$1L = {
              components: { UiIcon: UiIcon, UiCloseIconButton: CloseIconButton },
              props: {
                title: String,
                desc: String,
                duration: Number,
                onClose: Function,
                type: {
                  default: 'open',
                  validator: function validator(value) {
                    return ['info', 'success', 'warning', 'error', 'open'].indexOf(value) !== -1
                  }
                }
              },
              computed: {
                iconType: function iconType() {
                  return iconTypes[this.type]
                },
                showIcon: function showIcon() {
                  return this.type !== 'open'
                }
              },
              methods: {
                close: function close(event) {
                  this.$emit('destroy');
                  clearTimeout(this.tid);
                  isFunc(this.onClose) && this.onClose();
                },
                timer: function timer() {
                  var this$1 = this;

                  if (this.duration === 0) { return }
                  this.tid = setTimeout(function () { return this$1.close(); }, this.duration * 1000);
                }
              },
              mounted: function mounted() {
                this.timer();
              }
            };

            var css$1q = ".ui-notice-wrapper{position:fixed;right:24px;width:335px}.ui-notice{background-color:#fff;padding:16px;border-radius:4px;position:relative;margin-bottom:12px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;overflow:hidden;-webkit-box-shadow:0 1px 6px rgba(0,0,0,.2);box-shadow:0 1px 6px rgba(0,0,0,.2);-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out;will-change:transform,opacity}.ui-notice:before{position:absolute;top:0;bottom:0;left:0;width:4px;content:\"\"}.ui-notice.info:before{background-color:#2d8cf0}.ui-notice.info .ui-notice-icon{color:#2d8cf0}.ui-notice.success:before{background-color:#19be6b}.ui-notice.success .ui-notice-icon{color:#19be6b}.ui-notice.warning:before{background-color:#f90}.ui-notice.warning .ui-notice-icon{color:#f90}.ui-notice.error:before{background-color:#ed3f14}.ui-notice.error .ui-notice-icon{color:#ed3f14}.ui-notice.hasDesc{padding:16px}.ui-notice.hasDesc .ui-notice-icon{font-size:28px;margin-right:16px;-ms-flex-item-align:start;align-self:flex-start}.ui-notice.hasDesc .ui-notice-title{font-weight:700;margin-bottom:6px}.ui-notice-icon{font-size:14px;margin-right:8px}.ui-notice-title{color:#1c2438;font-size:14px;word-break:break-all;padding-right:16px;line-height:1.4}.ui-notice-desc{font-size:12px;line-height:1.5;word-break:break-word;margin-top:2px}.ui-notice-close{position:absolute;top:7px;right:7px;width:22px;text-align:center}";
            styleInject(css$1q);

            /* script */
            var __vue_script__$1L = script$1L;
            /* template */
            var __vue_render__$1Y = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c("transition", { attrs: { name: "notice", translate: "" } }, [
                _c(
                  "div",
                  {
                    staticClass: "ui-notice",
                    class: [_vm.type, { showIcon: _vm.showIcon, hasDesc: !!_vm.desc }]
                  },
                  [
                    _vm.showIcon
                      ? _c("UiIcon", {
                          staticClass: "ui-notice-icon",
                          attrs: { type: _vm.iconType }
                        })
                      : _vm._e(),
                    _vm._v(" "),
                    _c("div", { staticClass: "ui-notice-body" }, [
                      _vm.title
                        ? _c("p", { staticClass: "ui-notice-title" }, [
                            _vm._v(_vm._s(_vm.title))
                          ])
                        : _vm._e(),
                      _vm._v(" "),
                      _c("p", {
                        staticClass: "ui-notice-desc",
                        domProps: { innerHTML: _vm._s(_vm.desc) }
                      })
                    ]),
                    _vm._v(" "),
                    _c("UiCloseIconButton", {
                      staticClass: "ui-notice-close",
                      on: { click: _vm.close }
                    })
                  ],
                  1
                )
              ])
            };
            var __vue_staticRenderFns__$1Y = [];
            __vue_render__$1Y._withStripped = true;

              /* style */
              var __vue_inject_styles__$1Y = undefined;
              /* scoped */
              var __vue_scope_id__$1Y = undefined;
              /* module identifier */
              var __vue_module_identifier__$1Y = undefined;
              /* functional template */
              var __vue_is_functional_template__$1Y = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Notice$1 = normalizeComponent_1(
                { render: __vue_render__$1Y, staticRenderFns: __vue_staticRenderFns__$1Y },
                __vue_inject_styles__$1Y,
                __vue_script__$1L,
                __vue_scope_id__$1Y,
                __vue_is_functional_template__$1Y,
                __vue_module_identifier__$1Y,
                undefined,
                undefined
              );

            //
            var script$1M = {
              components: { UiModalView: UiModalView },
              data: function data() {
                return {
                  zIndex: setMaxZIndex(),
                  visible: this.value,
                  isLoading: false
                }
              },
              props: Object.assign({}, getDefaultProps(), {value: Boolean}),
              watch: {
                value: function value(newVal) {
                  this.visible = newVal;
                  if (newVal) {
                    winScrollLock.lock();
                    this.zIndex = setMaxZIndex();
                  } else {
                    winScrollLock.unlock();
                    this.isLoading = false;
                  }
                }
              },
              methods: {
                handleClose: function handleClose() {
                  this.visible = false;
                  this.$emit('input', false);
                  this.$emit('on-visible-change', false);
                },
                handleCancel: function handleCancel() {
                  this.$emit('on-cancel');
                  this.handleClose();
                },
                handleOK: function handleOK() {
                  this.$emit('on-ok');
                  if (this.loading) {
                    return this.isLoading = true
                  }
                  this.handleClose();
                }
              },
              mounted: function mounted() {
                document.body.appendChild(this.$el);
              },
              beforeDestroy: function beforeDestroy() {
                this.$el.remove();
              }
            };

            /* script */
            var __vue_script__$1M = script$1M;

            /* template */
            var __vue_render__$1Z = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "transition",
                { attrs: { name: "ui-modal" } },
                [
                  _vm.visible
                    ? _c(
                        "UiModalView",
                        _vm._b(
                          {
                            style: { zIndex: _vm.zIndex },
                            attrs: { loading: _vm.isLoading },
                            on: {
                              ok: _vm.handleOK,
                              close: _vm.handleClose,
                              cancel: _vm.handleCancel
                            }
                          },
                          "UiModalView",
                          this.$props,
                          false
                        ),
                        [
                          _vm._t("default"),
                          _vm._v(" "),
                          _vm._t("close", null, { slot: "close" }),
                          _vm._v(" "),
                          _vm._t("header", null, { slot: "header" }),
                          _vm._v(" "),
                          _vm._t("footer", null, { slot: "footer" })
                        ],
                        2
                      )
                    : _vm._e()
                ],
                1
              )
            };
            var __vue_staticRenderFns__$1Z = [];
            __vue_render__$1Z._withStripped = true;

              /* style */
              var __vue_inject_styles__$1Z = undefined;
              /* scoped */
              var __vue_scope_id__$1Z = undefined;
              /* module identifier */
              var __vue_module_identifier__$1Z = undefined;
              /* functional template */
              var __vue_is_functional_template__$1Z = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var Modal$1 = normalizeComponent_1(
                { render: __vue_render__$1Z, staticRenderFns: __vue_staticRenderFns__$1Z },
                __vue_inject_styles__$1Z,
                __vue_script__$1M,
                __vue_scope_id__$1Z,
                __vue_is_functional_template__$1Z,
                __vue_module_identifier__$1Z,
                undefined,
                undefined
              );

            /**
             * 创建加载中组件
             * @param {Vue.VueConstructor} Vue 
             */
            function createSpin(Vue) {
              return {
                show: function show(options) {
                  if ( options === void 0 ) options = {};

                  winScrollLock.lock();
                  var props = Object.assign({}, options, {zIndex: setMaxZIndex(), fullscreen: true});
                  this.spin = new Vue({
                    name: 'ui-spin-wrapper',
                    data: function data() {
                      return { visible: false }
                    },
                    render: function render(h) {
                      return this.visible && h(UiSpin, { props: props })
                    },
                    mounted: function mounted() {
                      document.body.appendChild(this.$el);
                      this.visible = true;
                    },
                    beforeDestroy: function beforeDestroy() {
                      this.$el.remove();
                      winScrollLock.unlock();
                    }
                  }).$mount();
                },
                hide: function hide() {
                  this.spin.visible = false;
                }
              }
            }

            //
            //
            //
            //
            //
            //
            //

            var script$1N = {
              props: {
                color: String,
                failedColor: String,
                height: {
                  type: Number,
                  default: 2
                },
                percent: Number,
                status: String,
                zIndex: Number,
                visible: Boolean
              },
              computed: {
                styles: function styles() {
                  return { height: ((this.height) + "px"), zIndex: this.zIndex }
                },
                innerStyles: function innerStyles() {
                  return { transform: ("scaleX(" + (this.percent / 100) + ")"), backgroundColor: this.status === 'error' ? this.failedColor : this.color }
                }
              },
              methods: {
                handleLeave: function handleLeave() {
                  this.$emit('leave');
                }
              },
              mounted: function mounted() {
                document.body.insertBefore(this.$el, document.body.firstChild);
              }
            };

            var css$1r = ".ui-loadingbar{position:fixed;top:0;right:0;left:0;width:100%}.ui-loadingbar-inner{height:100%;-webkit-transform-origin:0 0;transform-origin:0 0;-webkit-transition:-webkit-transform .2s;transition:-webkit-transform .2s;transition:transform .2s;transition:transform .2s,-webkit-transform .2s;background-color:#2d8cf0}.ui-loadingbar-inner.error{background-color:#ed3f14}.ui-loadingbar-enter-active{-webkit-transition:opacity .5s ease-in-out;transition:opacity .5s ease-in-out}.ui-loadingbar-leave-active{-webkit-transition:opacity .2s ease-in-out .5s;transition:opacity .2s ease-in-out .5s}.ui-loadingbar-enter,.ui-loadingbar-leave-to{opacity:0}";
            styleInject(css$1r);

            /* script */
            var __vue_script__$1N = script$1N;
            /* template */
            var __vue_render__$1_ = function() {
              var _vm = this;
              var _h = _vm.$createElement;
              var _c = _vm._self._c || _h;
              return _c(
                "transition",
                { attrs: { name: "ui-loadingbar" }, on: { afterLeave: _vm.handleLeave } },
                [
                  _c(
                    "div",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.visible,
                          expression: "visible"
                        }
                      ],
                      staticClass: "ui-loadingbar",
                      style: _vm.styles
                    },
                    [
                      _c("div", {
                        staticClass: "ui-loadingbar-inner",
                        class: _vm.status,
                        style: _vm.innerStyles
                      })
                    ]
                  )
                ]
              )
            };
            var __vue_staticRenderFns__$1_ = [];
            __vue_render__$1_._withStripped = true;

              /* style */
              var __vue_inject_styles__$1_ = undefined;
              /* scoped */
              var __vue_scope_id__$1_ = undefined;
              /* module identifier */
              var __vue_module_identifier__$1_ = undefined;
              /* functional template */
              var __vue_is_functional_template__$1_ = false;
              /* style inject */
              
              /* style inject SSR */
              

              
              var UiLoadingBar = normalizeComponent_1(
                { render: __vue_render__$1_, staticRenderFns: __vue_staticRenderFns__$1_ },
                __vue_inject_styles__$1_,
                __vue_script__$1N,
                __vue_scope_id__$1_,
                __vue_is_functional_template__$1_,
                __vue_module_identifier__$1_,
                undefined,
                undefined
              );

            /**
             * 加载条对象
             */

            /**
             * 创建加载条
             * @param {import("vue").VueConstructor} Vue 
             */
            function createLoadingBar(Vue) {
              return {
                create: function create() {
                  return new Vue({
                    data: function data() {
                      return {
                        customOptions: {},
                        options: { percent: 0 }
                      }
                    },
                    render: function render(h) {
                      var this$1 = this;

                      return h(UiLoadingBar, {
                        props: Object.assign({}, this.options, this.customOptions),
                        on: {
                          leave: function () { return this$1.options = { percent: 0 }; }
                        }
                      })
                    },
                    methods: {
                      update: function update(options) {
                        if ( options === void 0 ) options = {};

                        this.options = Object.assign({}, this.options, options);
                      },
                      config: function config(options) {
                        if ( options === void 0 ) options = {};

                        this.customOptions = options;
                      }
                    },
                    beforeDestroy: function beforeDestroy() {
                      this.$el.parentNode.removeChild(this.$el);
                    }
                  }).$mount()
                },
                getLoadingBar: function getLoadingBar() {
                  return this.LoadingBar = this.LoadingBar || this.create()
                },
                clearTimer: function clearTimer() {
                  clearInterval(this.timer);
                  this.timer = null;
                },
                start: function start() {
                  var this$1 = this;

                  if (this.timer) { return }
                  var LoadingBar = this.getLoadingBar();
                  LoadingBar.update({ visible: true, zIndex: setMaxZIndex() });
                  var percent = 0;
                  this.timer = setInterval(function () {
                    percent += Math.floor(Math.random() * 3 + 2);
                    if (percent > 90) { this$1.clearTimer(); }
                    this$1.update(percent);
                  }, 200);
                },
                finish: function finish(status) {
                  this.clearTimer();
                  var LoadingBar = this.getLoadingBar();
                  LoadingBar.update({ visible: true, status: status, zIndex: setMaxZIndex() });
                  Vue.nextTick().then(function () { return LoadingBar.update({ percent: 100, visible: false }); });
                },
                error: function error() {
                  this.finish('error');
                },
                update: function update(percent) {
                  this.getLoadingBar().update({ percent: percent });
                },
                config: function config(options) {
                  this.getLoadingBar().config(options);
                },
                destroy: function destroy() {
                  this.clearTimer();
                  this.LoadingBar && this.LoadingBar.$destroy();
                  this.LoadingBar = null;
                }
              }
            }

            var comps = {
              Icon: Icon$1,
              Avatar: Avatar$1,
              Card: Card$1,
              Alert: Alert$1,

              BackTop: BackTop$1,
              Badge: Badge$1,
              Button: Button$1,
              ButtonGroup: ButtonGroup,
              Checkbox: Checkbox$1,
              CheckboxGroup: CheckboxGroup,
              Input: Input$1,
              Progress: Progress$1,
              Tag: Tag$1,
              Timeline: Timeline$1,
              TimelineItem: TimelineItem,
              Collapse: Collapse$1,
              Panel: Panel,
              Modal: Modal$1,
              Breadcrumb: Breadcrumb$1,
              BreadcrumbItem: BreadcrumbItem,
              Swiper: Swiper$1,
              SwiperItem: SwiperItem,
              Row: Row,
              Col: Col,
              Layout: Layout$1,
              Header: Header,
              Content: Content,
              Footer: Footer,
              Sider: Sider,
              Radio: Radio$1,
              RadioGroup: RadioGroup,
              ISwitch: ISwitch,
              Tabs: Tabs$1,
              TabPane: TabPane,
              Spin: UiSpin,
              Transfer: Transfer$1,
              Rate: Rate$1,
              InputNumber: InputNumber$1,
              Select: Select$1,
              Option: Option,
              OptionGroup: OptionGroup,
              Step: Step,
              Steps: Steps$1,
              ICircle: ICircle$1,
              Scroll: Scroll$1,
              Affix: Affix$1,
              Page: Page$1,
              Dropdown: Dropdown$1,
              DropdownMenu: DropdownMenu,
              DropdownItem: DropdownItem,
              Menu: Menu$1,
              MenuItem: MenuItem,
              Submenu: Submenu,
              MenuGroup: MenuGroup,
              Tooltip: Tooltip$1,
              Poptip: Poptip$1,
              Tree: Tree$1,
              Table: Table$1,
              Slider: Slider$1,
              Form: Form$1,
              FormItem: FormItem,
              AutoComplete: AutoComplete$1,
              DatePicker: DatePicker$1,
              TimePicker: TimePicker$1
            };

            var VueUI = {
              /**
               * 安装插件
               * @param {import('vue').VueConstructor} Vue 
               * @param {Object} options 
               */
              install: function install(Vue, options) {
                if ( options === void 0 ) options = {};

                Vue.prototype.$uiTools = methods;
                var prefix = typeof options.prefix === 'string' ? options.prefix : 'Ui';
                for (var name in comps) { Vue.component(prefix + name, comps[name]); }

                // 消息提醒对象
                Vue.prototype.$Message = new NoticeManager(Vue, Message$1, 'ui-message-wrapper');
                // // 通知提醒对象
                Vue.prototype.$Notice = new NoticeManager(Vue, Notice$1, 'ui-notice-wrapper', { duration: 4.5 });
                // // 标准对话框
                Vue.prototype.$Modal = createModal(Vue);
                // // 加载中对象
                Vue.prototype.$Spin = createSpin(Vue);
                // // 加载条对象
                Vue.LoadingBar = Vue.prototype.$Loading = createLoadingBar(Vue);
                // // 全局指令
                createDirectives(Vue);
              }
            };

            Vue.use(VueUI, { prefix: '' });

            Vue.config.productionTip = false;

            new Vue({
              router: router,
              render: function (h) { return h(App); },
            }).$mount('#app');

}));
